/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"fmt"
)

// checks if the AttachPaymentMethodRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttachPaymentMethodRequest{}

// AttachPaymentMethodRequest struct for AttachPaymentMethodRequest
type AttachPaymentMethodRequest struct {
	// Unique Identifier of the payment_method.
	CustomerId string `json:"customer_id"`
	AdditionalProperties map[string]interface{}
}

type _AttachPaymentMethodRequest AttachPaymentMethodRequest

// NewAttachPaymentMethodRequest instantiates a new AttachPaymentMethodRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachPaymentMethodRequest(customerId string) *AttachPaymentMethodRequest {
	this := AttachPaymentMethodRequest{}
	this.CustomerId = customerId
	return &this
}

// NewAttachPaymentMethodRequestWithDefaults instantiates a new AttachPaymentMethodRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachPaymentMethodRequestWithDefaults() *AttachPaymentMethodRequest {
	this := AttachPaymentMethodRequest{}
	return &this
}

// GetCustomerId returns the CustomerId field value
func (o *AttachPaymentMethodRequest) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *AttachPaymentMethodRequest) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *AttachPaymentMethodRequest) SetCustomerId(v string) {
	o.CustomerId = v
}

func (o AttachPaymentMethodRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttachPaymentMethodRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customer_id"] = o.CustomerId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AttachPaymentMethodRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customer_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAttachPaymentMethodRequest := _AttachPaymentMethodRequest{}

	err = json.Unmarshal(data, &varAttachPaymentMethodRequest)

	if err != nil {
		return err
	}

	*o = AttachPaymentMethodRequest(varAttachPaymentMethodRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "customer_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAttachPaymentMethodRequest struct {
	value *AttachPaymentMethodRequest
	isSet bool
}

func (v NullableAttachPaymentMethodRequest) Get() *AttachPaymentMethodRequest {
	return v.value
}

func (v *NullableAttachPaymentMethodRequest) Set(val *AttachPaymentMethodRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachPaymentMethodRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachPaymentMethodRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachPaymentMethodRequest(val *AttachPaymentMethodRequest) *NullableAttachPaymentMethodRequest {
	return &NullableAttachPaymentMethodRequest{value: val, isSet: true}
}

func (v NullableAttachPaymentMethodRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachPaymentMethodRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


