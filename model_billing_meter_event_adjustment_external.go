/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the BillingMeterEventAdjustmentExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingMeterEventAdjustmentExternal{}

// BillingMeterEventAdjustmentExternal struct for BillingMeterEventAdjustmentExternal
type BillingMeterEventAdjustmentExternal struct {
	// Unique identifier for the account.
	AccountId string `json:"account_id"`
	// Unique identifier for the event.
	CancelIdentifier string `json:"cancel_identifier"`
	// DateTime at which the object was created, in 'ISO 8601' format.
	CreatedAt time.Time `json:"created_at"`
	// The name of the meter event. Corresponds with the event_name field on a meter.
	EventName string `json:"event_name"`
	// Unique identifier of meter event.
	Id string `json:"id"`
	// If true, indicates that this object has been deleted
	IsDeleted *bool `json:"is_deleted,omitempty"`
	Object *ObjectName `json:"object,omitempty"`
	// Status of the billing meter adjustment event.
	Status BillingMeterEventAdjustmentStatus `json:"status"`
	// Specifies whether to cancel a single event.
	Type *BillingMeterAdjustmentType `json:"type,omitempty"`
	// DateTime at which the object was updated, in 'ISO 8601' format.
	UpdatedAt time.Time `json:"updated_at"`
}

type _BillingMeterEventAdjustmentExternal BillingMeterEventAdjustmentExternal

// NewBillingMeterEventAdjustmentExternal instantiates a new BillingMeterEventAdjustmentExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingMeterEventAdjustmentExternal(accountId string, cancelIdentifier string, createdAt time.Time, eventName string, id string, status BillingMeterEventAdjustmentStatus, updatedAt time.Time) *BillingMeterEventAdjustmentExternal {
	this := BillingMeterEventAdjustmentExternal{}
	this.AccountId = accountId
	this.CancelIdentifier = cancelIdentifier
	this.CreatedAt = createdAt
	this.EventName = eventName
	this.Id = id
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	this.Status = status
	this.UpdatedAt = updatedAt
	return &this
}

// NewBillingMeterEventAdjustmentExternalWithDefaults instantiates a new BillingMeterEventAdjustmentExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingMeterEventAdjustmentExternalWithDefaults() *BillingMeterEventAdjustmentExternal {
	this := BillingMeterEventAdjustmentExternal{}
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	return &this
}

// GetAccountId returns the AccountId field value
func (o *BillingMeterEventAdjustmentExternal) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *BillingMeterEventAdjustmentExternal) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *BillingMeterEventAdjustmentExternal) SetAccountId(v string) {
	o.AccountId = v
}

// GetCancelIdentifier returns the CancelIdentifier field value
func (o *BillingMeterEventAdjustmentExternal) GetCancelIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CancelIdentifier
}

// GetCancelIdentifierOk returns a tuple with the CancelIdentifier field value
// and a boolean to check if the value has been set.
func (o *BillingMeterEventAdjustmentExternal) GetCancelIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CancelIdentifier, true
}

// SetCancelIdentifier sets field value
func (o *BillingMeterEventAdjustmentExternal) SetCancelIdentifier(v string) {
	o.CancelIdentifier = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BillingMeterEventAdjustmentExternal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingMeterEventAdjustmentExternal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BillingMeterEventAdjustmentExternal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetEventName returns the EventName field value
func (o *BillingMeterEventAdjustmentExternal) GetEventName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventName
}

// GetEventNameOk returns a tuple with the EventName field value
// and a boolean to check if the value has been set.
func (o *BillingMeterEventAdjustmentExternal) GetEventNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventName, true
}

// SetEventName sets field value
func (o *BillingMeterEventAdjustmentExternal) SetEventName(v string) {
	o.EventName = v
}

// GetId returns the Id field value
func (o *BillingMeterEventAdjustmentExternal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BillingMeterEventAdjustmentExternal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BillingMeterEventAdjustmentExternal) SetId(v string) {
	o.Id = v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *BillingMeterEventAdjustmentExternal) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingMeterEventAdjustmentExternal) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *BillingMeterEventAdjustmentExternal) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *BillingMeterEventAdjustmentExternal) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *BillingMeterEventAdjustmentExternal) GetObject() ObjectName {
	if o == nil || IsNil(o.Object) {
		var ret ObjectName
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingMeterEventAdjustmentExternal) GetObjectOk() (*ObjectName, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *BillingMeterEventAdjustmentExternal) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given ObjectName and assigns it to the Object field.
func (o *BillingMeterEventAdjustmentExternal) SetObject(v ObjectName) {
	o.Object = &v
}

// GetStatus returns the Status field value
func (o *BillingMeterEventAdjustmentExternal) GetStatus() BillingMeterEventAdjustmentStatus {
	if o == nil {
		var ret BillingMeterEventAdjustmentStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BillingMeterEventAdjustmentExternal) GetStatusOk() (*BillingMeterEventAdjustmentStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BillingMeterEventAdjustmentExternal) SetStatus(v BillingMeterEventAdjustmentStatus) {
	o.Status = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BillingMeterEventAdjustmentExternal) GetType() BillingMeterAdjustmentType {
	if o == nil || IsNil(o.Type) {
		var ret BillingMeterAdjustmentType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingMeterEventAdjustmentExternal) GetTypeOk() (*BillingMeterAdjustmentType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BillingMeterEventAdjustmentExternal) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given BillingMeterAdjustmentType and assigns it to the Type field.
func (o *BillingMeterEventAdjustmentExternal) SetType(v BillingMeterAdjustmentType) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *BillingMeterEventAdjustmentExternal) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingMeterEventAdjustmentExternal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *BillingMeterEventAdjustmentExternal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o BillingMeterEventAdjustmentExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingMeterEventAdjustmentExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["cancel_identifier"] = o.CancelIdentifier
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["event_name"] = o.EventName
	toSerialize["id"] = o.Id
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["status"] = o.Status
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *BillingMeterEventAdjustmentExternal) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"cancel_identifier",
		"created_at",
		"event_name",
		"id",
		"status",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingMeterEventAdjustmentExternal := _BillingMeterEventAdjustmentExternal{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBillingMeterEventAdjustmentExternal)

	if err != nil {
		return err
	}

	*o = BillingMeterEventAdjustmentExternal(varBillingMeterEventAdjustmentExternal)

	return err
}

type NullableBillingMeterEventAdjustmentExternal struct {
	value *BillingMeterEventAdjustmentExternal
	isSet bool
}

func (v NullableBillingMeterEventAdjustmentExternal) Get() *BillingMeterEventAdjustmentExternal {
	return v.value
}

func (v *NullableBillingMeterEventAdjustmentExternal) Set(val *BillingMeterEventAdjustmentExternal) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingMeterEventAdjustmentExternal) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingMeterEventAdjustmentExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingMeterEventAdjustmentExternal(val *BillingMeterEventAdjustmentExternal) *NullableBillingMeterEventAdjustmentExternal {
	return &NullableBillingMeterEventAdjustmentExternal{value: val, isSet: true}
}

func (v NullableBillingMeterEventAdjustmentExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingMeterEventAdjustmentExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


