/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the BillingMeterEventExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingMeterEventExternal{}

// BillingMeterEventExternal struct for BillingMeterEventExternal
type BillingMeterEventExternal struct {
	// Unique identifier for the account.
	AccountId string `json:"account_id"`
	// DateTime at which the object was created, in 'ISO 8601' format.
	CreatedAt time.Time `json:"created_at"`
	// The time of the event.
	EventDatetime *time.Time `json:"event_datetime,omitempty"`
	// The name of the meter event. Corresponds with the event_name field on a meter.
	EventName string `json:"event_name"`
	// Unique identifier of meter event.
	Id string `json:"id"`
	// A unique identifier for the event. If not provided, one will be generated. We recommend using a globally unique identifier for this.
	Identifier *string `json:"identifier,omitempty"`
	// If true, indicates that this object has been deleted
	IsDeleted *bool `json:"is_deleted,omitempty"`
	Object *ObjectName `json:"object,omitempty"`
	// The payload of the event. This must contain the fields corresponding to a meterâ€™s event_payload_customer_mapping_key (default is customer_id) and event_payload_value_key (default is value). 
	Payload map[string]interface{} `json:"payload"`
	// Status of the billing meter event.
	Status BillingMeterEventStatus `json:"status"`
	// DateTime at which the object was updated, in 'ISO 8601' format.
	UpdatedAt time.Time `json:"updated_at"`
}

type _BillingMeterEventExternal BillingMeterEventExternal

// NewBillingMeterEventExternal instantiates a new BillingMeterEventExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingMeterEventExternal(accountId string, createdAt time.Time, eventName string, id string, payload map[string]interface{}, status BillingMeterEventStatus, updatedAt time.Time) *BillingMeterEventExternal {
	this := BillingMeterEventExternal{}
	this.AccountId = accountId
	this.CreatedAt = createdAt
	this.EventName = eventName
	this.Id = id
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	this.Payload = payload
	this.Status = status
	this.UpdatedAt = updatedAt
	return &this
}

// NewBillingMeterEventExternalWithDefaults instantiates a new BillingMeterEventExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingMeterEventExternalWithDefaults() *BillingMeterEventExternal {
	this := BillingMeterEventExternal{}
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	return &this
}

// GetAccountId returns the AccountId field value
func (o *BillingMeterEventExternal) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *BillingMeterEventExternal) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *BillingMeterEventExternal) SetAccountId(v string) {
	o.AccountId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BillingMeterEventExternal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingMeterEventExternal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BillingMeterEventExternal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetEventDatetime returns the EventDatetime field value if set, zero value otherwise.
func (o *BillingMeterEventExternal) GetEventDatetime() time.Time {
	if o == nil || IsNil(o.EventDatetime) {
		var ret time.Time
		return ret
	}
	return *o.EventDatetime
}

// GetEventDatetimeOk returns a tuple with the EventDatetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingMeterEventExternal) GetEventDatetimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EventDatetime) {
		return nil, false
	}
	return o.EventDatetime, true
}

// HasEventDatetime returns a boolean if a field has been set.
func (o *BillingMeterEventExternal) HasEventDatetime() bool {
	if o != nil && !IsNil(o.EventDatetime) {
		return true
	}

	return false
}

// SetEventDatetime gets a reference to the given time.Time and assigns it to the EventDatetime field.
func (o *BillingMeterEventExternal) SetEventDatetime(v time.Time) {
	o.EventDatetime = &v
}

// GetEventName returns the EventName field value
func (o *BillingMeterEventExternal) GetEventName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventName
}

// GetEventNameOk returns a tuple with the EventName field value
// and a boolean to check if the value has been set.
func (o *BillingMeterEventExternal) GetEventNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventName, true
}

// SetEventName sets field value
func (o *BillingMeterEventExternal) SetEventName(v string) {
	o.EventName = v
}

// GetId returns the Id field value
func (o *BillingMeterEventExternal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BillingMeterEventExternal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BillingMeterEventExternal) SetId(v string) {
	o.Id = v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *BillingMeterEventExternal) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier) {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingMeterEventExternal) GetIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *BillingMeterEventExternal) HasIdentifier() bool {
	if o != nil && !IsNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *BillingMeterEventExternal) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *BillingMeterEventExternal) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingMeterEventExternal) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *BillingMeterEventExternal) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *BillingMeterEventExternal) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *BillingMeterEventExternal) GetObject() ObjectName {
	if o == nil || IsNil(o.Object) {
		var ret ObjectName
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingMeterEventExternal) GetObjectOk() (*ObjectName, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *BillingMeterEventExternal) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given ObjectName and assigns it to the Object field.
func (o *BillingMeterEventExternal) SetObject(v ObjectName) {
	o.Object = &v
}

// GetPayload returns the Payload field value
func (o *BillingMeterEventExternal) GetPayload() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *BillingMeterEventExternal) GetPayloadOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Payload, true
}

// SetPayload sets field value
func (o *BillingMeterEventExternal) SetPayload(v map[string]interface{}) {
	o.Payload = v
}

// GetStatus returns the Status field value
func (o *BillingMeterEventExternal) GetStatus() BillingMeterEventStatus {
	if o == nil {
		var ret BillingMeterEventStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BillingMeterEventExternal) GetStatusOk() (*BillingMeterEventStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BillingMeterEventExternal) SetStatus(v BillingMeterEventStatus) {
	o.Status = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *BillingMeterEventExternal) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingMeterEventExternal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *BillingMeterEventExternal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o BillingMeterEventExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingMeterEventExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["created_at"] = o.CreatedAt
	if !IsNil(o.EventDatetime) {
		toSerialize["event_datetime"] = o.EventDatetime
	}
	toSerialize["event_name"] = o.EventName
	toSerialize["id"] = o.Id
	if !IsNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["payload"] = o.Payload
	toSerialize["status"] = o.Status
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *BillingMeterEventExternal) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"created_at",
		"event_name",
		"id",
		"payload",
		"status",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingMeterEventExternal := _BillingMeterEventExternal{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBillingMeterEventExternal)

	if err != nil {
		return err
	}

	*o = BillingMeterEventExternal(varBillingMeterEventExternal)

	return err
}

type NullableBillingMeterEventExternal struct {
	value *BillingMeterEventExternal
	isSet bool
}

func (v NullableBillingMeterEventExternal) Get() *BillingMeterEventExternal {
	return v.value
}

func (v *NullableBillingMeterEventExternal) Set(val *BillingMeterEventExternal) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingMeterEventExternal) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingMeterEventExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingMeterEventExternal(val *BillingMeterEventExternal) *NullableBillingMeterEventExternal {
	return &NullableBillingMeterEventExternal{value: val, isSet: true}
}

func (v NullableBillingMeterEventExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingMeterEventExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


