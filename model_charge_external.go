/*
OpenPay API

super charge your subscription management.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ChargeExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChargeExternal{}

// ChargeExternal struct for ChargeExternal
type ChargeExternal struct {
	// Unique Identifier of the charge.
	Id string `json:"id"`
	Object *ObjectName `json:"object,omitempty"`
	// DateTime at which the object was created, in 'ISO 8601' format.
	CreatedAt time.Time `json:"created_at"`
	// DateTime at which the object was updated, in 'ISO 8601' format.
	UpdatedAt time.Time `json:"updated_at"`
	// If true, indicates that this object has been deleted
	IsDeleted *bool `json:"is_deleted,omitempty"`
	// Amount charged, in smallest currency unit.
	AmountAtom int32 `json:"amount_atom"`
	Currency CurrencyEnum `json:"currency"`
	// Unique Identifier of the customer associated with this charge.
	CustomerId string `json:"customer_id"`
	// Unique Identifier of the payment method used for this charge.
	PaymentMethodId string `json:"payment_method_id"`
	// Unique Identifier of the payment intent associated with this charge.
	PaymentIntentId string `json:"payment_intent_id"`
	InvoiceId NullableString `json:"invoice_id"`
	Status ChargeStatusEnum `json:"status"`
	// Indicates whether the charge has been refunded.
	Refunded bool `json:"refunded"`
	// Amount refunded, in smallest currency unit.
	RefundedAmountAtom int32 `json:"refunded_amount_atom"`
	// Indicates whether the charge is disputed.
	Disputed bool `json:"disputed"`
	FailureCode NullableString `json:"failure_code"`
	FailureMessage NullableString `json:"failure_message"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

type _ChargeExternal ChargeExternal

// NewChargeExternal instantiates a new ChargeExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChargeExternal(id string, createdAt time.Time, updatedAt time.Time, amountAtom int32, currency CurrencyEnum, customerId string, paymentMethodId string, paymentIntentId string, invoiceId NullableString, status ChargeStatusEnum, refunded bool, refundedAmountAtom int32, disputed bool, failureCode NullableString, failureMessage NullableString) *ChargeExternal {
	this := ChargeExternal{}
	this.Id = id
	var object ObjectName = OBJECTNAME_CHARGE
	this.Object = &object
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	this.AmountAtom = amountAtom
	this.Currency = currency
	this.CustomerId = customerId
	this.PaymentMethodId = paymentMethodId
	this.PaymentIntentId = paymentIntentId
	this.InvoiceId = invoiceId
	this.Status = status
	this.Refunded = refunded
	this.RefundedAmountAtom = refundedAmountAtom
	this.Disputed = disputed
	this.FailureCode = failureCode
	this.FailureMessage = failureMessage
	return &this
}

// NewChargeExternalWithDefaults instantiates a new ChargeExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChargeExternalWithDefaults() *ChargeExternal {
	this := ChargeExternal{}
	var object ObjectName = OBJECTNAME_CHARGE
	this.Object = &object
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	return &this
}

// GetId returns the Id field value
func (o *ChargeExternal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ChargeExternal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ChargeExternal) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *ChargeExternal) GetObject() ObjectName {
	if o == nil || IsNil(o.Object) {
		var ret ObjectName
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargeExternal) GetObjectOk() (*ObjectName, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *ChargeExternal) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given ObjectName and assigns it to the Object field.
func (o *ChargeExternal) SetObject(v ObjectName) {
	o.Object = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ChargeExternal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ChargeExternal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ChargeExternal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ChargeExternal) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ChargeExternal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ChargeExternal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *ChargeExternal) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargeExternal) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *ChargeExternal) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *ChargeExternal) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetAmountAtom returns the AmountAtom field value
func (o *ChargeExternal) GetAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AmountAtom
}

// GetAmountAtomOk returns a tuple with the AmountAtom field value
// and a boolean to check if the value has been set.
func (o *ChargeExternal) GetAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountAtom, true
}

// SetAmountAtom sets field value
func (o *ChargeExternal) SetAmountAtom(v int32) {
	o.AmountAtom = v
}

// GetCurrency returns the Currency field value
func (o *ChargeExternal) GetCurrency() CurrencyEnum {
	if o == nil {
		var ret CurrencyEnum
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *ChargeExternal) GetCurrencyOk() (*CurrencyEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *ChargeExternal) SetCurrency(v CurrencyEnum) {
	o.Currency = v
}

// GetCustomerId returns the CustomerId field value
func (o *ChargeExternal) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *ChargeExternal) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *ChargeExternal) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetPaymentMethodId returns the PaymentMethodId field value
func (o *ChargeExternal) GetPaymentMethodId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentMethodId
}

// GetPaymentMethodIdOk returns a tuple with the PaymentMethodId field value
// and a boolean to check if the value has been set.
func (o *ChargeExternal) GetPaymentMethodIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentMethodId, true
}

// SetPaymentMethodId sets field value
func (o *ChargeExternal) SetPaymentMethodId(v string) {
	o.PaymentMethodId = v
}

// GetPaymentIntentId returns the PaymentIntentId field value
func (o *ChargeExternal) GetPaymentIntentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentIntentId
}

// GetPaymentIntentIdOk returns a tuple with the PaymentIntentId field value
// and a boolean to check if the value has been set.
func (o *ChargeExternal) GetPaymentIntentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentIntentId, true
}

// SetPaymentIntentId sets field value
func (o *ChargeExternal) SetPaymentIntentId(v string) {
	o.PaymentIntentId = v
}

// GetInvoiceId returns the InvoiceId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ChargeExternal) GetInvoiceId() string {
	if o == nil || o.InvoiceId.Get() == nil {
		var ret string
		return ret
	}

	return *o.InvoiceId.Get()
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChargeExternal) GetInvoiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceId.Get(), o.InvoiceId.IsSet()
}

// SetInvoiceId sets field value
func (o *ChargeExternal) SetInvoiceId(v string) {
	o.InvoiceId.Set(&v)
}

// GetStatus returns the Status field value
func (o *ChargeExternal) GetStatus() ChargeStatusEnum {
	if o == nil {
		var ret ChargeStatusEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ChargeExternal) GetStatusOk() (*ChargeStatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ChargeExternal) SetStatus(v ChargeStatusEnum) {
	o.Status = v
}

// GetRefunded returns the Refunded field value
func (o *ChargeExternal) GetRefunded() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Refunded
}

// GetRefundedOk returns a tuple with the Refunded field value
// and a boolean to check if the value has been set.
func (o *ChargeExternal) GetRefundedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Refunded, true
}

// SetRefunded sets field value
func (o *ChargeExternal) SetRefunded(v bool) {
	o.Refunded = v
}

// GetRefundedAmountAtom returns the RefundedAmountAtom field value
func (o *ChargeExternal) GetRefundedAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RefundedAmountAtom
}

// GetRefundedAmountAtomOk returns a tuple with the RefundedAmountAtom field value
// and a boolean to check if the value has been set.
func (o *ChargeExternal) GetRefundedAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefundedAmountAtom, true
}

// SetRefundedAmountAtom sets field value
func (o *ChargeExternal) SetRefundedAmountAtom(v int32) {
	o.RefundedAmountAtom = v
}

// GetDisputed returns the Disputed field value
func (o *ChargeExternal) GetDisputed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Disputed
}

// GetDisputedOk returns a tuple with the Disputed field value
// and a boolean to check if the value has been set.
func (o *ChargeExternal) GetDisputedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Disputed, true
}

// SetDisputed sets field value
func (o *ChargeExternal) SetDisputed(v bool) {
	o.Disputed = v
}

// GetFailureCode returns the FailureCode field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ChargeExternal) GetFailureCode() string {
	if o == nil || o.FailureCode.Get() == nil {
		var ret string
		return ret
	}

	return *o.FailureCode.Get()
}

// GetFailureCodeOk returns a tuple with the FailureCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChargeExternal) GetFailureCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FailureCode.Get(), o.FailureCode.IsSet()
}

// SetFailureCode sets field value
func (o *ChargeExternal) SetFailureCode(v string) {
	o.FailureCode.Set(&v)
}

// GetFailureMessage returns the FailureMessage field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ChargeExternal) GetFailureMessage() string {
	if o == nil || o.FailureMessage.Get() == nil {
		var ret string
		return ret
	}

	return *o.FailureMessage.Get()
}

// GetFailureMessageOk returns a tuple with the FailureMessage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChargeExternal) GetFailureMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FailureMessage.Get(), o.FailureMessage.IsSet()
}

// SetFailureMessage sets field value
func (o *ChargeExternal) SetFailureMessage(v string) {
	o.FailureMessage.Set(&v)
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChargeExternal) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChargeExternal) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *ChargeExternal) HasCustomFields() bool {
	if o != nil && IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *ChargeExternal) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o ChargeExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChargeExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	toSerialize["amount_atom"] = o.AmountAtom
	toSerialize["currency"] = o.Currency
	toSerialize["customer_id"] = o.CustomerId
	toSerialize["payment_method_id"] = o.PaymentMethodId
	toSerialize["payment_intent_id"] = o.PaymentIntentId
	toSerialize["invoice_id"] = o.InvoiceId.Get()
	toSerialize["status"] = o.Status
	toSerialize["refunded"] = o.Refunded
	toSerialize["refunded_amount_atom"] = o.RefundedAmountAtom
	toSerialize["disputed"] = o.Disputed
	toSerialize["failure_code"] = o.FailureCode.Get()
	toSerialize["failure_message"] = o.FailureMessage.Get()
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

func (o *ChargeExternal) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"updated_at",
		"amount_atom",
		"currency",
		"customer_id",
		"payment_method_id",
		"payment_intent_id",
		"invoice_id",
		"status",
		"refunded",
		"refunded_amount_atom",
		"disputed",
		"failure_code",
		"failure_message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChargeExternal := _ChargeExternal{}

	err = json.Unmarshal(bytes, &varChargeExternal)

	if err != nil {
		return err
	}

	*o = ChargeExternal(varChargeExternal)

	return err
}

type NullableChargeExternal struct {
	value *ChargeExternal
	isSet bool
}

func (v NullableChargeExternal) Get() *ChargeExternal {
	return v.value
}

func (v *NullableChargeExternal) Set(val *ChargeExternal) {
	v.value = val
	v.isSet = true
}

func (v NullableChargeExternal) IsSet() bool {
	return v.isSet
}

func (v *NullableChargeExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChargeExternal(val *ChargeExternal) *NullableChargeExternal {
	return &NullableChargeExternal{value: val, isSet: true}
}

func (v NullableChargeExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChargeExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


