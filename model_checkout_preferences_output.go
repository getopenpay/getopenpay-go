/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
)

// checks if the CheckoutPreferencesOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckoutPreferencesOutput{}

// CheckoutPreferencesOutput struct for CheckoutPreferencesOutput
type CheckoutPreferencesOutput struct {
	// This object contains a list of price groups that will be used to fall back to if the selected product price quantity fails to be created. Processor preferences here will override the processor preferences in the processor_preferences field.
	FallbackCascadePreferences []FallbackConfigurationOutput `json:"fallback_cascade_preferences,omitempty"`
	// This object contains a list of price groups that will be used to fall back to if the selected product price quantity fails to be created.
	FallbackCascadeSelectedProductPriceQuantity [][]SelectedPriceQuantity `json:"fallback_cascade_selected_product_price_quantity,omitempty"`
	ProcessorPreferences NullableCheckoutProcessorsPreferences `json:"processor_preferences,omitempty"`
	Unused NullableString `json:"unused,omitempty"`
}

// NewCheckoutPreferencesOutput instantiates a new CheckoutPreferencesOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckoutPreferencesOutput() *CheckoutPreferencesOutput {
	this := CheckoutPreferencesOutput{}
	return &this
}

// NewCheckoutPreferencesOutputWithDefaults instantiates a new CheckoutPreferencesOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckoutPreferencesOutputWithDefaults() *CheckoutPreferencesOutput {
	this := CheckoutPreferencesOutput{}
	return &this
}

// GetFallbackCascadePreferences returns the FallbackCascadePreferences field value if set, zero value otherwise.
func (o *CheckoutPreferencesOutput) GetFallbackCascadePreferences() []FallbackConfigurationOutput {
	if o == nil || IsNil(o.FallbackCascadePreferences) {
		var ret []FallbackConfigurationOutput
		return ret
	}
	return o.FallbackCascadePreferences
}

// GetFallbackCascadePreferencesOk returns a tuple with the FallbackCascadePreferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckoutPreferencesOutput) GetFallbackCascadePreferencesOk() ([]FallbackConfigurationOutput, bool) {
	if o == nil || IsNil(o.FallbackCascadePreferences) {
		return nil, false
	}
	return o.FallbackCascadePreferences, true
}

// HasFallbackCascadePreferences returns a boolean if a field has been set.
func (o *CheckoutPreferencesOutput) HasFallbackCascadePreferences() bool {
	if o != nil && !IsNil(o.FallbackCascadePreferences) {
		return true
	}

	return false
}

// SetFallbackCascadePreferences gets a reference to the given []FallbackConfigurationOutput and assigns it to the FallbackCascadePreferences field.
func (o *CheckoutPreferencesOutput) SetFallbackCascadePreferences(v []FallbackConfigurationOutput) {
	o.FallbackCascadePreferences = v
}

// GetFallbackCascadeSelectedProductPriceQuantity returns the FallbackCascadeSelectedProductPriceQuantity field value if set, zero value otherwise.
func (o *CheckoutPreferencesOutput) GetFallbackCascadeSelectedProductPriceQuantity() [][]SelectedPriceQuantity {
	if o == nil || IsNil(o.FallbackCascadeSelectedProductPriceQuantity) {
		var ret [][]SelectedPriceQuantity
		return ret
	}
	return o.FallbackCascadeSelectedProductPriceQuantity
}

// GetFallbackCascadeSelectedProductPriceQuantityOk returns a tuple with the FallbackCascadeSelectedProductPriceQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckoutPreferencesOutput) GetFallbackCascadeSelectedProductPriceQuantityOk() ([][]SelectedPriceQuantity, bool) {
	if o == nil || IsNil(o.FallbackCascadeSelectedProductPriceQuantity) {
		return nil, false
	}
	return o.FallbackCascadeSelectedProductPriceQuantity, true
}

// HasFallbackCascadeSelectedProductPriceQuantity returns a boolean if a field has been set.
func (o *CheckoutPreferencesOutput) HasFallbackCascadeSelectedProductPriceQuantity() bool {
	if o != nil && !IsNil(o.FallbackCascadeSelectedProductPriceQuantity) {
		return true
	}

	return false
}

// SetFallbackCascadeSelectedProductPriceQuantity gets a reference to the given [][]SelectedPriceQuantity and assigns it to the FallbackCascadeSelectedProductPriceQuantity field.
func (o *CheckoutPreferencesOutput) SetFallbackCascadeSelectedProductPriceQuantity(v [][]SelectedPriceQuantity) {
	o.FallbackCascadeSelectedProductPriceQuantity = v
}

// GetProcessorPreferences returns the ProcessorPreferences field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CheckoutPreferencesOutput) GetProcessorPreferences() CheckoutProcessorsPreferences {
	if o == nil || IsNil(o.ProcessorPreferences.Get()) {
		var ret CheckoutProcessorsPreferences
		return ret
	}
	return *o.ProcessorPreferences.Get()
}

// GetProcessorPreferencesOk returns a tuple with the ProcessorPreferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutPreferencesOutput) GetProcessorPreferencesOk() (*CheckoutProcessorsPreferences, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProcessorPreferences.Get(), o.ProcessorPreferences.IsSet()
}

// HasProcessorPreferences returns a boolean if a field has been set.
func (o *CheckoutPreferencesOutput) HasProcessorPreferences() bool {
	if o != nil && o.ProcessorPreferences.IsSet() {
		return true
	}

	return false
}

// SetProcessorPreferences gets a reference to the given NullableCheckoutProcessorsPreferences and assigns it to the ProcessorPreferences field.
func (o *CheckoutPreferencesOutput) SetProcessorPreferences(v CheckoutProcessorsPreferences) {
	o.ProcessorPreferences.Set(&v)
}
// SetProcessorPreferencesNil sets the value for ProcessorPreferences to be an explicit nil
func (o *CheckoutPreferencesOutput) SetProcessorPreferencesNil() {
	o.ProcessorPreferences.Set(nil)
}

// UnsetProcessorPreferences ensures that no value is present for ProcessorPreferences, not even an explicit nil
func (o *CheckoutPreferencesOutput) UnsetProcessorPreferences() {
	o.ProcessorPreferences.Unset()
}

// GetUnused returns the Unused field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CheckoutPreferencesOutput) GetUnused() string {
	if o == nil || IsNil(o.Unused.Get()) {
		var ret string
		return ret
	}
	return *o.Unused.Get()
}

// GetUnusedOk returns a tuple with the Unused field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutPreferencesOutput) GetUnusedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Unused.Get(), o.Unused.IsSet()
}

// HasUnused returns a boolean if a field has been set.
func (o *CheckoutPreferencesOutput) HasUnused() bool {
	if o != nil && o.Unused.IsSet() {
		return true
	}

	return false
}

// SetUnused gets a reference to the given NullableString and assigns it to the Unused field.
func (o *CheckoutPreferencesOutput) SetUnused(v string) {
	o.Unused.Set(&v)
}
// SetUnusedNil sets the value for Unused to be an explicit nil
func (o *CheckoutPreferencesOutput) SetUnusedNil() {
	o.Unused.Set(nil)
}

// UnsetUnused ensures that no value is present for Unused, not even an explicit nil
func (o *CheckoutPreferencesOutput) UnsetUnused() {
	o.Unused.Unset()
}

func (o CheckoutPreferencesOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckoutPreferencesOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FallbackCascadePreferences) {
		toSerialize["fallback_cascade_preferences"] = o.FallbackCascadePreferences
	}
	if !IsNil(o.FallbackCascadeSelectedProductPriceQuantity) {
		toSerialize["fallback_cascade_selected_product_price_quantity"] = o.FallbackCascadeSelectedProductPriceQuantity
	}
	if o.ProcessorPreferences.IsSet() {
		toSerialize["processor_preferences"] = o.ProcessorPreferences.Get()
	}
	if o.Unused.IsSet() {
		toSerialize["unused"] = o.Unused.Get()
	}
	return toSerialize, nil
}

type NullableCheckoutPreferencesOutput struct {
	value *CheckoutPreferencesOutput
	isSet bool
}

func (v NullableCheckoutPreferencesOutput) Get() *CheckoutPreferencesOutput {
	return v.value
}

func (v *NullableCheckoutPreferencesOutput) Set(val *CheckoutPreferencesOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckoutPreferencesOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckoutPreferencesOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckoutPreferencesOutput(val *CheckoutPreferencesOutput) *NullableCheckoutPreferencesOutput {
	return &NullableCheckoutPreferencesOutput{value: val, isSet: true}
}

func (v NullableCheckoutPreferencesOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckoutPreferencesOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


