/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateBillingMeterEventAdjustmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBillingMeterEventAdjustmentRequest{}

// CreateBillingMeterEventAdjustmentRequest struct for CreateBillingMeterEventAdjustmentRequest
type CreateBillingMeterEventAdjustmentRequest struct {
	// Unique identifier for the event.
	CancelIdentifier string `json:"cancel_identifier"`
	// The name of the meter event. Corresponds with the event_name field on a meter.
	EventName string `json:"event_name"`
	// Specifies whether to cancel a single event.
	Type *BillingMeterAdjustmentType `json:"type,omitempty"`
}

type _CreateBillingMeterEventAdjustmentRequest CreateBillingMeterEventAdjustmentRequest

// NewCreateBillingMeterEventAdjustmentRequest instantiates a new CreateBillingMeterEventAdjustmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBillingMeterEventAdjustmentRequest(cancelIdentifier string, eventName string) *CreateBillingMeterEventAdjustmentRequest {
	this := CreateBillingMeterEventAdjustmentRequest{}
	this.CancelIdentifier = cancelIdentifier
	this.EventName = eventName
	return &this
}

// NewCreateBillingMeterEventAdjustmentRequestWithDefaults instantiates a new CreateBillingMeterEventAdjustmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBillingMeterEventAdjustmentRequestWithDefaults() *CreateBillingMeterEventAdjustmentRequest {
	this := CreateBillingMeterEventAdjustmentRequest{}
	return &this
}

// GetCancelIdentifier returns the CancelIdentifier field value
func (o *CreateBillingMeterEventAdjustmentRequest) GetCancelIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CancelIdentifier
}

// GetCancelIdentifierOk returns a tuple with the CancelIdentifier field value
// and a boolean to check if the value has been set.
func (o *CreateBillingMeterEventAdjustmentRequest) GetCancelIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CancelIdentifier, true
}

// SetCancelIdentifier sets field value
func (o *CreateBillingMeterEventAdjustmentRequest) SetCancelIdentifier(v string) {
	o.CancelIdentifier = v
}

// GetEventName returns the EventName field value
func (o *CreateBillingMeterEventAdjustmentRequest) GetEventName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventName
}

// GetEventNameOk returns a tuple with the EventName field value
// and a boolean to check if the value has been set.
func (o *CreateBillingMeterEventAdjustmentRequest) GetEventNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventName, true
}

// SetEventName sets field value
func (o *CreateBillingMeterEventAdjustmentRequest) SetEventName(v string) {
	o.EventName = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateBillingMeterEventAdjustmentRequest) GetType() BillingMeterAdjustmentType {
	if o == nil || IsNil(o.Type) {
		var ret BillingMeterAdjustmentType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBillingMeterEventAdjustmentRequest) GetTypeOk() (*BillingMeterAdjustmentType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateBillingMeterEventAdjustmentRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given BillingMeterAdjustmentType and assigns it to the Type field.
func (o *CreateBillingMeterEventAdjustmentRequest) SetType(v BillingMeterAdjustmentType) {
	o.Type = &v
}

func (o CreateBillingMeterEventAdjustmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBillingMeterEventAdjustmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cancel_identifier"] = o.CancelIdentifier
	toSerialize["event_name"] = o.EventName
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

func (o *CreateBillingMeterEventAdjustmentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cancel_identifier",
		"event_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateBillingMeterEventAdjustmentRequest := _CreateBillingMeterEventAdjustmentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateBillingMeterEventAdjustmentRequest)

	if err != nil {
		return err
	}

	*o = CreateBillingMeterEventAdjustmentRequest(varCreateBillingMeterEventAdjustmentRequest)

	return err
}

type NullableCreateBillingMeterEventAdjustmentRequest struct {
	value *CreateBillingMeterEventAdjustmentRequest
	isSet bool
}

func (v NullableCreateBillingMeterEventAdjustmentRequest) Get() *CreateBillingMeterEventAdjustmentRequest {
	return v.value
}

func (v *NullableCreateBillingMeterEventAdjustmentRequest) Set(val *CreateBillingMeterEventAdjustmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBillingMeterEventAdjustmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBillingMeterEventAdjustmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBillingMeterEventAdjustmentRequest(val *CreateBillingMeterEventAdjustmentRequest) *NullableCreateBillingMeterEventAdjustmentRequest {
	return &NullableCreateBillingMeterEventAdjustmentRequest{value: val, isSet: true}
}

func (v NullableCreateBillingMeterEventAdjustmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBillingMeterEventAdjustmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


