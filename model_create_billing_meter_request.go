/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateBillingMeterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBillingMeterRequest{}

// CreateBillingMeterRequest struct for CreateBillingMeterRequest
type CreateBillingMeterRequest struct {
	// Specifies how events are aggregated. Allowed values are count to count the number of events and sum to sum each event’s value.
	AggregationFormula *BillingMeterAggregationFormula `json:"aggregation_formula,omitempty"`
	// The meter’s name.
	DisplayName string `json:"display_name"`
	// The name of the meter event to record usage for. Corresponds with the event_name field on meter events.
	EventName string `json:"event_name" validate:"regexp=^[A-Za-z0-9_-]+$"`
	// The key in the usage event payload to use for mapping the event to a customer.
	EventPayloadCustomerMappingKey *string `json:"event_payload_customer_mapping_key,omitempty"`
	// The key in the usage event payload to use as the value for this meter. For example, if the event payload contains usage on a bytes_used field, then set the event_payload_value_key to “bytes_used”.
	EventPayloadValueKey *string `json:"event_payload_value_key,omitempty"`
}

type _CreateBillingMeterRequest CreateBillingMeterRequest

// NewCreateBillingMeterRequest instantiates a new CreateBillingMeterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBillingMeterRequest(displayName string, eventName string) *CreateBillingMeterRequest {
	this := CreateBillingMeterRequest{}
	this.DisplayName = displayName
	this.EventName = eventName
	var eventPayloadCustomerMappingKey string = "customer_id"
	this.EventPayloadCustomerMappingKey = &eventPayloadCustomerMappingKey
	var eventPayloadValueKey string = "value"
	this.EventPayloadValueKey = &eventPayloadValueKey
	return &this
}

// NewCreateBillingMeterRequestWithDefaults instantiates a new CreateBillingMeterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBillingMeterRequestWithDefaults() *CreateBillingMeterRequest {
	this := CreateBillingMeterRequest{}
	var eventPayloadCustomerMappingKey string = "customer_id"
	this.EventPayloadCustomerMappingKey = &eventPayloadCustomerMappingKey
	var eventPayloadValueKey string = "value"
	this.EventPayloadValueKey = &eventPayloadValueKey
	return &this
}

// GetAggregationFormula returns the AggregationFormula field value if set, zero value otherwise.
func (o *CreateBillingMeterRequest) GetAggregationFormula() BillingMeterAggregationFormula {
	if o == nil || IsNil(o.AggregationFormula) {
		var ret BillingMeterAggregationFormula
		return ret
	}
	return *o.AggregationFormula
}

// GetAggregationFormulaOk returns a tuple with the AggregationFormula field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBillingMeterRequest) GetAggregationFormulaOk() (*BillingMeterAggregationFormula, bool) {
	if o == nil || IsNil(o.AggregationFormula) {
		return nil, false
	}
	return o.AggregationFormula, true
}

// HasAggregationFormula returns a boolean if a field has been set.
func (o *CreateBillingMeterRequest) HasAggregationFormula() bool {
	if o != nil && !IsNil(o.AggregationFormula) {
		return true
	}

	return false
}

// SetAggregationFormula gets a reference to the given BillingMeterAggregationFormula and assigns it to the AggregationFormula field.
func (o *CreateBillingMeterRequest) SetAggregationFormula(v BillingMeterAggregationFormula) {
	o.AggregationFormula = &v
}

// GetDisplayName returns the DisplayName field value
func (o *CreateBillingMeterRequest) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *CreateBillingMeterRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *CreateBillingMeterRequest) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetEventName returns the EventName field value
func (o *CreateBillingMeterRequest) GetEventName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventName
}

// GetEventNameOk returns a tuple with the EventName field value
// and a boolean to check if the value has been set.
func (o *CreateBillingMeterRequest) GetEventNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventName, true
}

// SetEventName sets field value
func (o *CreateBillingMeterRequest) SetEventName(v string) {
	o.EventName = v
}

// GetEventPayloadCustomerMappingKey returns the EventPayloadCustomerMappingKey field value if set, zero value otherwise.
func (o *CreateBillingMeterRequest) GetEventPayloadCustomerMappingKey() string {
	if o == nil || IsNil(o.EventPayloadCustomerMappingKey) {
		var ret string
		return ret
	}
	return *o.EventPayloadCustomerMappingKey
}

// GetEventPayloadCustomerMappingKeyOk returns a tuple with the EventPayloadCustomerMappingKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBillingMeterRequest) GetEventPayloadCustomerMappingKeyOk() (*string, bool) {
	if o == nil || IsNil(o.EventPayloadCustomerMappingKey) {
		return nil, false
	}
	return o.EventPayloadCustomerMappingKey, true
}

// HasEventPayloadCustomerMappingKey returns a boolean if a field has been set.
func (o *CreateBillingMeterRequest) HasEventPayloadCustomerMappingKey() bool {
	if o != nil && !IsNil(o.EventPayloadCustomerMappingKey) {
		return true
	}

	return false
}

// SetEventPayloadCustomerMappingKey gets a reference to the given string and assigns it to the EventPayloadCustomerMappingKey field.
func (o *CreateBillingMeterRequest) SetEventPayloadCustomerMappingKey(v string) {
	o.EventPayloadCustomerMappingKey = &v
}

// GetEventPayloadValueKey returns the EventPayloadValueKey field value if set, zero value otherwise.
func (o *CreateBillingMeterRequest) GetEventPayloadValueKey() string {
	if o == nil || IsNil(o.EventPayloadValueKey) {
		var ret string
		return ret
	}
	return *o.EventPayloadValueKey
}

// GetEventPayloadValueKeyOk returns a tuple with the EventPayloadValueKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBillingMeterRequest) GetEventPayloadValueKeyOk() (*string, bool) {
	if o == nil || IsNil(o.EventPayloadValueKey) {
		return nil, false
	}
	return o.EventPayloadValueKey, true
}

// HasEventPayloadValueKey returns a boolean if a field has been set.
func (o *CreateBillingMeterRequest) HasEventPayloadValueKey() bool {
	if o != nil && !IsNil(o.EventPayloadValueKey) {
		return true
	}

	return false
}

// SetEventPayloadValueKey gets a reference to the given string and assigns it to the EventPayloadValueKey field.
func (o *CreateBillingMeterRequest) SetEventPayloadValueKey(v string) {
	o.EventPayloadValueKey = &v
}

func (o CreateBillingMeterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBillingMeterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AggregationFormula) {
		toSerialize["aggregation_formula"] = o.AggregationFormula
	}
	toSerialize["display_name"] = o.DisplayName
	toSerialize["event_name"] = o.EventName
	if !IsNil(o.EventPayloadCustomerMappingKey) {
		toSerialize["event_payload_customer_mapping_key"] = o.EventPayloadCustomerMappingKey
	}
	if !IsNil(o.EventPayloadValueKey) {
		toSerialize["event_payload_value_key"] = o.EventPayloadValueKey
	}
	return toSerialize, nil
}

func (o *CreateBillingMeterRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"display_name",
		"event_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateBillingMeterRequest := _CreateBillingMeterRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateBillingMeterRequest)

	if err != nil {
		return err
	}

	*o = CreateBillingMeterRequest(varCreateBillingMeterRequest)

	return err
}

type NullableCreateBillingMeterRequest struct {
	value *CreateBillingMeterRequest
	isSet bool
}

func (v NullableCreateBillingMeterRequest) Get() *CreateBillingMeterRequest {
	return v.value
}

func (v *NullableCreateBillingMeterRequest) Set(val *CreateBillingMeterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBillingMeterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBillingMeterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBillingMeterRequest(val *CreateBillingMeterRequest) *NullableCreateBillingMeterRequest {
	return &NullableCreateBillingMeterRequest{value: val, isSet: true}
}

func (v NullableCreateBillingMeterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBillingMeterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


