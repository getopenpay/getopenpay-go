/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateCheckoutLineItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCheckoutLineItem{}

// CreateCheckoutLineItem struct for CreateCheckoutLineItem
type CreateCheckoutLineItem struct {
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Description NullableString `json:"description,omitempty"`
	// Unique ID of the price corresponding to this line item
	PriceId string `json:"price_id"`
	// The quantity of the line item being purchased.
	Quantity int32 `json:"quantity"`
}

type _CreateCheckoutLineItem CreateCheckoutLineItem

// NewCreateCheckoutLineItem instantiates a new CreateCheckoutLineItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCheckoutLineItem(priceId string, quantity int32) *CreateCheckoutLineItem {
	this := CreateCheckoutLineItem{}
	this.PriceId = priceId
	this.Quantity = quantity
	return &this
}

// NewCreateCheckoutLineItemWithDefaults instantiates a new CreateCheckoutLineItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCheckoutLineItemWithDefaults() *CreateCheckoutLineItem {
	this := CreateCheckoutLineItem{}
	return &this
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCheckoutLineItem) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCheckoutLineItem) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *CreateCheckoutLineItem) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *CreateCheckoutLineItem) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCheckoutLineItem) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCheckoutLineItem) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateCheckoutLineItem) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateCheckoutLineItem) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateCheckoutLineItem) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateCheckoutLineItem) UnsetDescription() {
	o.Description.Unset()
}

// GetPriceId returns the PriceId field value
func (o *CreateCheckoutLineItem) GetPriceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PriceId
}

// GetPriceIdOk returns a tuple with the PriceId field value
// and a boolean to check if the value has been set.
func (o *CreateCheckoutLineItem) GetPriceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceId, true
}

// SetPriceId sets field value
func (o *CreateCheckoutLineItem) SetPriceId(v string) {
	o.PriceId = v
}

// GetQuantity returns the Quantity field value
func (o *CreateCheckoutLineItem) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *CreateCheckoutLineItem) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *CreateCheckoutLineItem) SetQuantity(v int32) {
	o.Quantity = v
}

func (o CreateCheckoutLineItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCheckoutLineItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["price_id"] = o.PriceId
	toSerialize["quantity"] = o.Quantity
	return toSerialize, nil
}

func (o *CreateCheckoutLineItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"price_id",
		"quantity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCheckoutLineItem := _CreateCheckoutLineItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateCheckoutLineItem)

	if err != nil {
		return err
	}

	*o = CreateCheckoutLineItem(varCreateCheckoutLineItem)

	return err
}

type NullableCreateCheckoutLineItem struct {
	value *CreateCheckoutLineItem
	isSet bool
}

func (v NullableCreateCheckoutLineItem) Get() *CreateCheckoutLineItem {
	return v.value
}

func (v *NullableCreateCheckoutLineItem) Set(val *CreateCheckoutLineItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCheckoutLineItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCheckoutLineItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCheckoutLineItem(val *CreateCheckoutLineItem) *NullableCreateCheckoutLineItem {
	return &NullableCreateCheckoutLineItem{value: val, isSet: true}
}

func (v NullableCreateCheckoutLineItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCheckoutLineItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


