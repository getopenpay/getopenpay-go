/*
OpenPay API

super charge your subscription management.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateInvoiceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateInvoiceRequest{}

// CreateInvoiceRequest struct for CreateInvoiceRequest
type CreateInvoiceRequest struct {
	// Unique identifier of the subscription. The created invoice will only include pending invoice items for that subscription. The subscription’s billing cycle and regular subscription events won’t be affected.
	SubscriptionId string `json:"subscription_id"`
	PaymentMethodId NullableString `json:"payment_method_id,omitempty"`
	CollectionMethod NullableCollectionMethodEnum `json:"collection_method,omitempty"`
	// Description for newly created invoice
	Description *string `json:"description,omitempty"`
	Discounts NullableDiscounts `json:"discounts,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
}

type _CreateInvoiceRequest CreateInvoiceRequest

// NewCreateInvoiceRequest instantiates a new CreateInvoiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInvoiceRequest(subscriptionId string) *CreateInvoiceRequest {
	this := CreateInvoiceRequest{}
	this.SubscriptionId = subscriptionId
	var description string = "Manual creation of invoice"
	this.Description = &description
	return &this
}

// NewCreateInvoiceRequestWithDefaults instantiates a new CreateInvoiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInvoiceRequestWithDefaults() *CreateInvoiceRequest {
	this := CreateInvoiceRequest{}
	var description string = "Manual creation of invoice"
	this.Description = &description
	return &this
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *CreateInvoiceRequest) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *CreateInvoiceRequest) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *CreateInvoiceRequest) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetPaymentMethodId returns the PaymentMethodId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateInvoiceRequest) GetPaymentMethodId() string {
	if o == nil || IsNil(o.PaymentMethodId.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentMethodId.Get()
}

// GetPaymentMethodIdOk returns a tuple with the PaymentMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateInvoiceRequest) GetPaymentMethodIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentMethodId.Get(), o.PaymentMethodId.IsSet()
}

// HasPaymentMethodId returns a boolean if a field has been set.
func (o *CreateInvoiceRequest) HasPaymentMethodId() bool {
	if o != nil && o.PaymentMethodId.IsSet() {
		return true
	}

	return false
}

// SetPaymentMethodId gets a reference to the given NullableString and assigns it to the PaymentMethodId field.
func (o *CreateInvoiceRequest) SetPaymentMethodId(v string) {
	o.PaymentMethodId.Set(&v)
}
// SetPaymentMethodIdNil sets the value for PaymentMethodId to be an explicit nil
func (o *CreateInvoiceRequest) SetPaymentMethodIdNil() {
	o.PaymentMethodId.Set(nil)
}

// UnsetPaymentMethodId ensures that no value is present for PaymentMethodId, not even an explicit nil
func (o *CreateInvoiceRequest) UnsetPaymentMethodId() {
	o.PaymentMethodId.Unset()
}

// GetCollectionMethod returns the CollectionMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateInvoiceRequest) GetCollectionMethod() CollectionMethodEnum {
	if o == nil || IsNil(o.CollectionMethod.Get()) {
		var ret CollectionMethodEnum
		return ret
	}
	return *o.CollectionMethod.Get()
}

// GetCollectionMethodOk returns a tuple with the CollectionMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateInvoiceRequest) GetCollectionMethodOk() (*CollectionMethodEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.CollectionMethod.Get(), o.CollectionMethod.IsSet()
}

// HasCollectionMethod returns a boolean if a field has been set.
func (o *CreateInvoiceRequest) HasCollectionMethod() bool {
	if o != nil && o.CollectionMethod.IsSet() {
		return true
	}

	return false
}

// SetCollectionMethod gets a reference to the given NullableCollectionMethodEnum and assigns it to the CollectionMethod field.
func (o *CreateInvoiceRequest) SetCollectionMethod(v CollectionMethodEnum) {
	o.CollectionMethod.Set(&v)
}
// SetCollectionMethodNil sets the value for CollectionMethod to be an explicit nil
func (o *CreateInvoiceRequest) SetCollectionMethodNil() {
	o.CollectionMethod.Set(nil)
}

// UnsetCollectionMethod ensures that no value is present for CollectionMethod, not even an explicit nil
func (o *CreateInvoiceRequest) UnsetCollectionMethod() {
	o.CollectionMethod.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateInvoiceRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInvoiceRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateInvoiceRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateInvoiceRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDiscounts returns the Discounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateInvoiceRequest) GetDiscounts() Discounts {
	if o == nil || IsNil(o.Discounts.Get()) {
		var ret Discounts
		return ret
	}
	return *o.Discounts.Get()
}

// GetDiscountsOk returns a tuple with the Discounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateInvoiceRequest) GetDiscountsOk() (*Discounts, bool) {
	if o == nil {
		return nil, false
	}
	return o.Discounts.Get(), o.Discounts.IsSet()
}

// HasDiscounts returns a boolean if a field has been set.
func (o *CreateInvoiceRequest) HasDiscounts() bool {
	if o != nil && o.Discounts.IsSet() {
		return true
	}

	return false
}

// SetDiscounts gets a reference to the given NullableDiscounts and assigns it to the Discounts field.
func (o *CreateInvoiceRequest) SetDiscounts(v Discounts) {
	o.Discounts.Set(&v)
}
// SetDiscountsNil sets the value for Discounts to be an explicit nil
func (o *CreateInvoiceRequest) SetDiscountsNil() {
	o.Discounts.Set(nil)
}

// UnsetDiscounts ensures that no value is present for Discounts, not even an explicit nil
func (o *CreateInvoiceRequest) UnsetDiscounts() {
	o.Discounts.Unset()
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateInvoiceRequest) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateInvoiceRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *CreateInvoiceRequest) HasCustomFields() bool {
	if o != nil && IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *CreateInvoiceRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o CreateInvoiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateInvoiceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subscription_id"] = o.SubscriptionId
	if o.PaymentMethodId.IsSet() {
		toSerialize["payment_method_id"] = o.PaymentMethodId.Get()
	}
	if o.CollectionMethod.IsSet() {
		toSerialize["collection_method"] = o.CollectionMethod.Get()
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if o.Discounts.IsSet() {
		toSerialize["discounts"] = o.Discounts.Get()
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	return toSerialize, nil
}

func (o *CreateInvoiceRequest) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"subscription_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateInvoiceRequest := _CreateInvoiceRequest{}

	err = json.Unmarshal(bytes, &varCreateInvoiceRequest)

	if err != nil {
		return err
	}

	*o = CreateInvoiceRequest(varCreateInvoiceRequest)

	return err
}

type NullableCreateInvoiceRequest struct {
	value *CreateInvoiceRequest
	isSet bool
}

func (v NullableCreateInvoiceRequest) Get() *CreateInvoiceRequest {
	return v.value
}

func (v *NullableCreateInvoiceRequest) Set(val *CreateInvoiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInvoiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInvoiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInvoiceRequest(val *CreateInvoiceRequest) *NullableCreateInvoiceRequest {
	return &NullableCreateInvoiceRequest{value: val, isSet: true}
}

func (v NullableCreateInvoiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInvoiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


