/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateProductRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProductRequest{}

// CreateProductRequest struct for CreateProductRequest
type CreateProductRequest struct {
	AccountSku NullableString `json:"account_sku,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	// Product's description.
	Description string `json:"description"`
	// List of product features.
	Features []string `json:"features,omitempty"`
	// Whether or not this product is accepting new subscriptions.
	IsActive *bool `json:"is_active,omitempty"`
	// Name of product.
	Name string `json:"name"`
	UnitLabel NullableString `json:"unit_label,omitempty"`
}

type _CreateProductRequest CreateProductRequest

// NewCreateProductRequest instantiates a new CreateProductRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProductRequest(description string, name string) *CreateProductRequest {
	this := CreateProductRequest{}
	this.Description = description
	var isActive bool = true
	this.IsActive = &isActive
	this.Name = name
	return &this
}

// NewCreateProductRequestWithDefaults instantiates a new CreateProductRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProductRequestWithDefaults() *CreateProductRequest {
	this := CreateProductRequest{}
	var isActive bool = true
	this.IsActive = &isActive
	return &this
}

// GetAccountSku returns the AccountSku field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProductRequest) GetAccountSku() string {
	if o == nil || IsNil(o.AccountSku.Get()) {
		var ret string
		return ret
	}
	return *o.AccountSku.Get()
}

// GetAccountSkuOk returns a tuple with the AccountSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProductRequest) GetAccountSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountSku.Get(), o.AccountSku.IsSet()
}

// HasAccountSku returns a boolean if a field has been set.
func (o *CreateProductRequest) HasAccountSku() bool {
	if o != nil && o.AccountSku.IsSet() {
		return true
	}

	return false
}

// SetAccountSku gets a reference to the given NullableString and assigns it to the AccountSku field.
func (o *CreateProductRequest) SetAccountSku(v string) {
	o.AccountSku.Set(&v)
}
// SetAccountSkuNil sets the value for AccountSku to be an explicit nil
func (o *CreateProductRequest) SetAccountSkuNil() {
	o.AccountSku.Set(nil)
}

// UnsetAccountSku ensures that no value is present for AccountSku, not even an explicit nil
func (o *CreateProductRequest) UnsetAccountSku() {
	o.AccountSku.Unset()
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProductRequest) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProductRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *CreateProductRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *CreateProductRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetDescription returns the Description field value
func (o *CreateProductRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateProductRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateProductRequest) SetDescription(v string) {
	o.Description = v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *CreateProductRequest) GetFeatures() []string {
	if o == nil || IsNil(o.Features) {
		var ret []string
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductRequest) GetFeaturesOk() ([]string, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *CreateProductRequest) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []string and assigns it to the Features field.
func (o *CreateProductRequest) SetFeatures(v []string) {
	o.Features = v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *CreateProductRequest) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateProductRequest) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *CreateProductRequest) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *CreateProductRequest) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetName returns the Name field value
func (o *CreateProductRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateProductRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateProductRequest) SetName(v string) {
	o.Name = v
}

// GetUnitLabel returns the UnitLabel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProductRequest) GetUnitLabel() string {
	if o == nil || IsNil(o.UnitLabel.Get()) {
		var ret string
		return ret
	}
	return *o.UnitLabel.Get()
}

// GetUnitLabelOk returns a tuple with the UnitLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProductRequest) GetUnitLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitLabel.Get(), o.UnitLabel.IsSet()
}

// HasUnitLabel returns a boolean if a field has been set.
func (o *CreateProductRequest) HasUnitLabel() bool {
	if o != nil && o.UnitLabel.IsSet() {
		return true
	}

	return false
}

// SetUnitLabel gets a reference to the given NullableString and assigns it to the UnitLabel field.
func (o *CreateProductRequest) SetUnitLabel(v string) {
	o.UnitLabel.Set(&v)
}
// SetUnitLabelNil sets the value for UnitLabel to be an explicit nil
func (o *CreateProductRequest) SetUnitLabelNil() {
	o.UnitLabel.Set(nil)
}

// UnsetUnitLabel ensures that no value is present for UnitLabel, not even an explicit nil
func (o *CreateProductRequest) UnsetUnitLabel() {
	o.UnitLabel.Unset()
}

func (o CreateProductRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProductRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountSku.IsSet() {
		toSerialize["account_sku"] = o.AccountSku.Get()
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	toSerialize["description"] = o.Description
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.IsActive) {
		toSerialize["is_active"] = o.IsActive
	}
	toSerialize["name"] = o.Name
	if o.UnitLabel.IsSet() {
		toSerialize["unit_label"] = o.UnitLabel.Get()
	}
	return toSerialize, nil
}

func (o *CreateProductRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateProductRequest := _CreateProductRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateProductRequest)

	if err != nil {
		return err
	}

	*o = CreateProductRequest(varCreateProductRequest)

	return err
}

type NullableCreateProductRequest struct {
	value *CreateProductRequest
	isSet bool
}

func (v NullableCreateProductRequest) Get() *CreateProductRequest {
	return v.value
}

func (v *NullableCreateProductRequest) Set(val *CreateProductRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProductRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProductRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProductRequest(val *CreateProductRequest) *NullableCreateProductRequest {
	return &NullableCreateProductRequest{value: val, isSet: true}
}

func (v NullableCreateProductRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProductRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


