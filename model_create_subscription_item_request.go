/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateSubscriptionItemRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSubscriptionItemRequest{}

// CreateSubscriptionItemRequest struct for CreateSubscriptionItemRequest
type CreateSubscriptionItemRequest struct {
	// If the flag is set to True, item will be added when renewing the subscription at next billing cycle.
	AddAtPeriodEnd *bool `json:"add_at_period_end,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Description NullableString `json:"description,omitempty"`
	// The ID of the price.
	PriceId string `json:"price_id"`
	// Determines how to handle prorations when the billable items changes.In case of subscription is in trialing state, invoice items if any will be for amount_atom 0.
	ProrationBehavior *ProrationEnum `json:"proration_behavior,omitempty"`
	// The quantity you'd like to apply to the subscription item you're creating.
	Quantity *int32 `json:"quantity,omitempty"`
	// The identifier of the subscription to modify
	SubscriptionId string `json:"subscription_id"`
}

type _CreateSubscriptionItemRequest CreateSubscriptionItemRequest

// NewCreateSubscriptionItemRequest instantiates a new CreateSubscriptionItemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubscriptionItemRequest(priceId string, subscriptionId string) *CreateSubscriptionItemRequest {
	this := CreateSubscriptionItemRequest{}
	var addAtPeriodEnd bool = false
	this.AddAtPeriodEnd = &addAtPeriodEnd
	this.PriceId = priceId
	var quantity int32 = 1
	this.Quantity = &quantity
	this.SubscriptionId = subscriptionId
	return &this
}

// NewCreateSubscriptionItemRequestWithDefaults instantiates a new CreateSubscriptionItemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubscriptionItemRequestWithDefaults() *CreateSubscriptionItemRequest {
	this := CreateSubscriptionItemRequest{}
	var addAtPeriodEnd bool = false
	this.AddAtPeriodEnd = &addAtPeriodEnd
	var quantity int32 = 1
	this.Quantity = &quantity
	return &this
}

// GetAddAtPeriodEnd returns the AddAtPeriodEnd field value if set, zero value otherwise.
func (o *CreateSubscriptionItemRequest) GetAddAtPeriodEnd() bool {
	if o == nil || IsNil(o.AddAtPeriodEnd) {
		var ret bool
		return ret
	}
	return *o.AddAtPeriodEnd
}

// GetAddAtPeriodEndOk returns a tuple with the AddAtPeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionItemRequest) GetAddAtPeriodEndOk() (*bool, bool) {
	if o == nil || IsNil(o.AddAtPeriodEnd) {
		return nil, false
	}
	return o.AddAtPeriodEnd, true
}

// HasAddAtPeriodEnd returns a boolean if a field has been set.
func (o *CreateSubscriptionItemRequest) HasAddAtPeriodEnd() bool {
	if o != nil && !IsNil(o.AddAtPeriodEnd) {
		return true
	}

	return false
}

// SetAddAtPeriodEnd gets a reference to the given bool and assigns it to the AddAtPeriodEnd field.
func (o *CreateSubscriptionItemRequest) SetAddAtPeriodEnd(v bool) {
	o.AddAtPeriodEnd = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionItemRequest) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionItemRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *CreateSubscriptionItemRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *CreateSubscriptionItemRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionItemRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionItemRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateSubscriptionItemRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateSubscriptionItemRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateSubscriptionItemRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateSubscriptionItemRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetPriceId returns the PriceId field value
func (o *CreateSubscriptionItemRequest) GetPriceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PriceId
}

// GetPriceIdOk returns a tuple with the PriceId field value
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionItemRequest) GetPriceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceId, true
}

// SetPriceId sets field value
func (o *CreateSubscriptionItemRequest) SetPriceId(v string) {
	o.PriceId = v
}

// GetProrationBehavior returns the ProrationBehavior field value if set, zero value otherwise.
func (o *CreateSubscriptionItemRequest) GetProrationBehavior() ProrationEnum {
	if o == nil || IsNil(o.ProrationBehavior) {
		var ret ProrationEnum
		return ret
	}
	return *o.ProrationBehavior
}

// GetProrationBehaviorOk returns a tuple with the ProrationBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionItemRequest) GetProrationBehaviorOk() (*ProrationEnum, bool) {
	if o == nil || IsNil(o.ProrationBehavior) {
		return nil, false
	}
	return o.ProrationBehavior, true
}

// HasProrationBehavior returns a boolean if a field has been set.
func (o *CreateSubscriptionItemRequest) HasProrationBehavior() bool {
	if o != nil && !IsNil(o.ProrationBehavior) {
		return true
	}

	return false
}

// SetProrationBehavior gets a reference to the given ProrationEnum and assigns it to the ProrationBehavior field.
func (o *CreateSubscriptionItemRequest) SetProrationBehavior(v ProrationEnum) {
	o.ProrationBehavior = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *CreateSubscriptionItemRequest) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionItemRequest) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *CreateSubscriptionItemRequest) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *CreateSubscriptionItemRequest) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *CreateSubscriptionItemRequest) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionItemRequest) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *CreateSubscriptionItemRequest) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

func (o CreateSubscriptionItemRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSubscriptionItemRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddAtPeriodEnd) {
		toSerialize["add_at_period_end"] = o.AddAtPeriodEnd
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["price_id"] = o.PriceId
	if !IsNil(o.ProrationBehavior) {
		toSerialize["proration_behavior"] = o.ProrationBehavior
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	toSerialize["subscription_id"] = o.SubscriptionId
	return toSerialize, nil
}

func (o *CreateSubscriptionItemRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"price_id",
		"subscription_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSubscriptionItemRequest := _CreateSubscriptionItemRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateSubscriptionItemRequest)

	if err != nil {
		return err
	}

	*o = CreateSubscriptionItemRequest(varCreateSubscriptionItemRequest)

	return err
}

type NullableCreateSubscriptionItemRequest struct {
	value *CreateSubscriptionItemRequest
	isSet bool
}

func (v NullableCreateSubscriptionItemRequest) Get() *CreateSubscriptionItemRequest {
	return v.value
}

func (v *NullableCreateSubscriptionItemRequest) Set(val *CreateSubscriptionItemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubscriptionItemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubscriptionItemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubscriptionItemRequest(val *CreateSubscriptionItemRequest) *NullableCreateSubscriptionItemRequest {
	return &NullableCreateSubscriptionItemRequest{value: val, isSet: true}
}

func (v NullableCreateSubscriptionItemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubscriptionItemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


