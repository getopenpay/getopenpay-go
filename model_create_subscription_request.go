/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CreateSubscriptionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSubscriptionRequest{}

// CreateSubscriptionRequest struct for CreateSubscriptionRequest
type CreateSubscriptionRequest struct {
	AttachToCheckoutAttemptId NullableString `json:"attach_to_checkout_attempt_id,omitempty"`
	// Boolean indicating whether this subscription should cancel at the end of the current period.
	CancelAtEnd *bool `json:"cancel_at_end,omitempty"`
	CheckoutPreferences NullableCheckoutPreferences `json:"checkout_preferences,omitempty"`
	// Invoices generated by this subscription can either be charged automatically or can be sent to customer for payment. The latter is not automatically charged.
	CollectionMethod *CollectionMethodEnum `json:"collection_method,omitempty"`
	CouponId NullableString `json:"coupon_id,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	// Unique Identifier of the customer.
	CustomerId string `json:"customer_id"`
	Description NullableString `json:"description,omitempty"`
	// Whether the request is in preview mode (subscriptions won't actually be created)
	IsPreview *bool `json:"is_preview,omitempty"`
	NetD NullableInt32 `json:"net_d,omitempty"`
	PaymentMethodId NullableString `json:"payment_method_id,omitempty"`
	PaymentRouteId NullableString `json:"payment_route_id,omitempty"`
	PromotionCode NullableString `json:"promotion_code,omitempty"`
	// This object contains details of selected product' price and quantity.
	SelectedProductPriceQuantity []SelectedPriceQuantity `json:"selected_product_price_quantity"`
	// Whether to skip invoice payment for this subscription. Setting this to true will leave the invoices open.
	SkipInvoicePayment *bool `json:"skip_invoice_payment,omitempty"`
	StartsAt NullableTime `json:"starts_at,omitempty"`
	SubscriptionItemDetails map[string]SubscriptionItemDetails `json:"subscription_item_details,omitempty"`
	TotalAmountAtom NullableInt32 `json:"total_amount_atom,omitempty"`
	TrialEnd NullableTime `json:"trial_end,omitempty"`
	// Indicates if a price's trial_period_days should be applied to the subscription. Setting trial_end per subscription is preferred, and this defaults to false. Setting this flag to true together with trial_end is not allowed. In case of subscription containing multiple prices and the trial period of them are not same, minimum of trial days will be used.
	TrialFromPrice *bool `json:"trial_from_price,omitempty"`
	TrialPeriodDays NullableInt32 `json:"trial_period_days,omitempty"`
}

type _CreateSubscriptionRequest CreateSubscriptionRequest

// NewCreateSubscriptionRequest instantiates a new CreateSubscriptionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubscriptionRequest(customerId string, selectedProductPriceQuantity []SelectedPriceQuantity) *CreateSubscriptionRequest {
	this := CreateSubscriptionRequest{}
	var cancelAtEnd bool = false
	this.CancelAtEnd = &cancelAtEnd
	this.CustomerId = customerId
	var isPreview bool = false
	this.IsPreview = &isPreview
	this.SelectedProductPriceQuantity = selectedProductPriceQuantity
	var skipInvoicePayment bool = false
	this.SkipInvoicePayment = &skipInvoicePayment
	var trialFromPrice bool = true
	this.TrialFromPrice = &trialFromPrice
	return &this
}

// NewCreateSubscriptionRequestWithDefaults instantiates a new CreateSubscriptionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubscriptionRequestWithDefaults() *CreateSubscriptionRequest {
	this := CreateSubscriptionRequest{}
	var cancelAtEnd bool = false
	this.CancelAtEnd = &cancelAtEnd
	var isPreview bool = false
	this.IsPreview = &isPreview
	var skipInvoicePayment bool = false
	this.SkipInvoicePayment = &skipInvoicePayment
	var trialFromPrice bool = true
	this.TrialFromPrice = &trialFromPrice
	return &this
}

// GetAttachToCheckoutAttemptId returns the AttachToCheckoutAttemptId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionRequest) GetAttachToCheckoutAttemptId() string {
	if o == nil || IsNil(o.AttachToCheckoutAttemptId.Get()) {
		var ret string
		return ret
	}
	return *o.AttachToCheckoutAttemptId.Get()
}

// GetAttachToCheckoutAttemptIdOk returns a tuple with the AttachToCheckoutAttemptId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionRequest) GetAttachToCheckoutAttemptIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttachToCheckoutAttemptId.Get(), o.AttachToCheckoutAttemptId.IsSet()
}

// HasAttachToCheckoutAttemptId returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasAttachToCheckoutAttemptId() bool {
	if o != nil && o.AttachToCheckoutAttemptId.IsSet() {
		return true
	}

	return false
}

// SetAttachToCheckoutAttemptId gets a reference to the given NullableString and assigns it to the AttachToCheckoutAttemptId field.
func (o *CreateSubscriptionRequest) SetAttachToCheckoutAttemptId(v string) {
	o.AttachToCheckoutAttemptId.Set(&v)
}
// SetAttachToCheckoutAttemptIdNil sets the value for AttachToCheckoutAttemptId to be an explicit nil
func (o *CreateSubscriptionRequest) SetAttachToCheckoutAttemptIdNil() {
	o.AttachToCheckoutAttemptId.Set(nil)
}

// UnsetAttachToCheckoutAttemptId ensures that no value is present for AttachToCheckoutAttemptId, not even an explicit nil
func (o *CreateSubscriptionRequest) UnsetAttachToCheckoutAttemptId() {
	o.AttachToCheckoutAttemptId.Unset()
}

// GetCancelAtEnd returns the CancelAtEnd field value if set, zero value otherwise.
func (o *CreateSubscriptionRequest) GetCancelAtEnd() bool {
	if o == nil || IsNil(o.CancelAtEnd) {
		var ret bool
		return ret
	}
	return *o.CancelAtEnd
}

// GetCancelAtEndOk returns a tuple with the CancelAtEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionRequest) GetCancelAtEndOk() (*bool, bool) {
	if o == nil || IsNil(o.CancelAtEnd) {
		return nil, false
	}
	return o.CancelAtEnd, true
}

// HasCancelAtEnd returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasCancelAtEnd() bool {
	if o != nil && !IsNil(o.CancelAtEnd) {
		return true
	}

	return false
}

// SetCancelAtEnd gets a reference to the given bool and assigns it to the CancelAtEnd field.
func (o *CreateSubscriptionRequest) SetCancelAtEnd(v bool) {
	o.CancelAtEnd = &v
}

// GetCheckoutPreferences returns the CheckoutPreferences field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionRequest) GetCheckoutPreferences() CheckoutPreferences {
	if o == nil || IsNil(o.CheckoutPreferences.Get()) {
		var ret CheckoutPreferences
		return ret
	}
	return *o.CheckoutPreferences.Get()
}

// GetCheckoutPreferencesOk returns a tuple with the CheckoutPreferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionRequest) GetCheckoutPreferencesOk() (*CheckoutPreferences, bool) {
	if o == nil {
		return nil, false
	}
	return o.CheckoutPreferences.Get(), o.CheckoutPreferences.IsSet()
}

// HasCheckoutPreferences returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasCheckoutPreferences() bool {
	if o != nil && o.CheckoutPreferences.IsSet() {
		return true
	}

	return false
}

// SetCheckoutPreferences gets a reference to the given NullableCheckoutPreferences and assigns it to the CheckoutPreferences field.
func (o *CreateSubscriptionRequest) SetCheckoutPreferences(v CheckoutPreferences) {
	o.CheckoutPreferences.Set(&v)
}
// SetCheckoutPreferencesNil sets the value for CheckoutPreferences to be an explicit nil
func (o *CreateSubscriptionRequest) SetCheckoutPreferencesNil() {
	o.CheckoutPreferences.Set(nil)
}

// UnsetCheckoutPreferences ensures that no value is present for CheckoutPreferences, not even an explicit nil
func (o *CreateSubscriptionRequest) UnsetCheckoutPreferences() {
	o.CheckoutPreferences.Unset()
}

// GetCollectionMethod returns the CollectionMethod field value if set, zero value otherwise.
func (o *CreateSubscriptionRequest) GetCollectionMethod() CollectionMethodEnum {
	if o == nil || IsNil(o.CollectionMethod) {
		var ret CollectionMethodEnum
		return ret
	}
	return *o.CollectionMethod
}

// GetCollectionMethodOk returns a tuple with the CollectionMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionRequest) GetCollectionMethodOk() (*CollectionMethodEnum, bool) {
	if o == nil || IsNil(o.CollectionMethod) {
		return nil, false
	}
	return o.CollectionMethod, true
}

// HasCollectionMethod returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasCollectionMethod() bool {
	if o != nil && !IsNil(o.CollectionMethod) {
		return true
	}

	return false
}

// SetCollectionMethod gets a reference to the given CollectionMethodEnum and assigns it to the CollectionMethod field.
func (o *CreateSubscriptionRequest) SetCollectionMethod(v CollectionMethodEnum) {
	o.CollectionMethod = &v
}

// GetCouponId returns the CouponId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionRequest) GetCouponId() string {
	if o == nil || IsNil(o.CouponId.Get()) {
		var ret string
		return ret
	}
	return *o.CouponId.Get()
}

// GetCouponIdOk returns a tuple with the CouponId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionRequest) GetCouponIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CouponId.Get(), o.CouponId.IsSet()
}

// HasCouponId returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasCouponId() bool {
	if o != nil && o.CouponId.IsSet() {
		return true
	}

	return false
}

// SetCouponId gets a reference to the given NullableString and assigns it to the CouponId field.
func (o *CreateSubscriptionRequest) SetCouponId(v string) {
	o.CouponId.Set(&v)
}
// SetCouponIdNil sets the value for CouponId to be an explicit nil
func (o *CreateSubscriptionRequest) SetCouponIdNil() {
	o.CouponId.Set(nil)
}

// UnsetCouponId ensures that no value is present for CouponId, not even an explicit nil
func (o *CreateSubscriptionRequest) UnsetCouponId() {
	o.CouponId.Unset()
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionRequest) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *CreateSubscriptionRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetCustomerId returns the CustomerId field value
func (o *CreateSubscriptionRequest) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionRequest) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *CreateSubscriptionRequest) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateSubscriptionRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateSubscriptionRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateSubscriptionRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetIsPreview returns the IsPreview field value if set, zero value otherwise.
func (o *CreateSubscriptionRequest) GetIsPreview() bool {
	if o == nil || IsNil(o.IsPreview) {
		var ret bool
		return ret
	}
	return *o.IsPreview
}

// GetIsPreviewOk returns a tuple with the IsPreview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionRequest) GetIsPreviewOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPreview) {
		return nil, false
	}
	return o.IsPreview, true
}

// HasIsPreview returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasIsPreview() bool {
	if o != nil && !IsNil(o.IsPreview) {
		return true
	}

	return false
}

// SetIsPreview gets a reference to the given bool and assigns it to the IsPreview field.
func (o *CreateSubscriptionRequest) SetIsPreview(v bool) {
	o.IsPreview = &v
}

// GetNetD returns the NetD field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionRequest) GetNetD() int32 {
	if o == nil || IsNil(o.NetD.Get()) {
		var ret int32
		return ret
	}
	return *o.NetD.Get()
}

// GetNetDOk returns a tuple with the NetD field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionRequest) GetNetDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetD.Get(), o.NetD.IsSet()
}

// HasNetD returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasNetD() bool {
	if o != nil && o.NetD.IsSet() {
		return true
	}

	return false
}

// SetNetD gets a reference to the given NullableInt32 and assigns it to the NetD field.
func (o *CreateSubscriptionRequest) SetNetD(v int32) {
	o.NetD.Set(&v)
}
// SetNetDNil sets the value for NetD to be an explicit nil
func (o *CreateSubscriptionRequest) SetNetDNil() {
	o.NetD.Set(nil)
}

// UnsetNetD ensures that no value is present for NetD, not even an explicit nil
func (o *CreateSubscriptionRequest) UnsetNetD() {
	o.NetD.Unset()
}

// GetPaymentMethodId returns the PaymentMethodId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionRequest) GetPaymentMethodId() string {
	if o == nil || IsNil(o.PaymentMethodId.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentMethodId.Get()
}

// GetPaymentMethodIdOk returns a tuple with the PaymentMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionRequest) GetPaymentMethodIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentMethodId.Get(), o.PaymentMethodId.IsSet()
}

// HasPaymentMethodId returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasPaymentMethodId() bool {
	if o != nil && o.PaymentMethodId.IsSet() {
		return true
	}

	return false
}

// SetPaymentMethodId gets a reference to the given NullableString and assigns it to the PaymentMethodId field.
func (o *CreateSubscriptionRequest) SetPaymentMethodId(v string) {
	o.PaymentMethodId.Set(&v)
}
// SetPaymentMethodIdNil sets the value for PaymentMethodId to be an explicit nil
func (o *CreateSubscriptionRequest) SetPaymentMethodIdNil() {
	o.PaymentMethodId.Set(nil)
}

// UnsetPaymentMethodId ensures that no value is present for PaymentMethodId, not even an explicit nil
func (o *CreateSubscriptionRequest) UnsetPaymentMethodId() {
	o.PaymentMethodId.Unset()
}

// GetPaymentRouteId returns the PaymentRouteId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionRequest) GetPaymentRouteId() string {
	if o == nil || IsNil(o.PaymentRouteId.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentRouteId.Get()
}

// GetPaymentRouteIdOk returns a tuple with the PaymentRouteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionRequest) GetPaymentRouteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentRouteId.Get(), o.PaymentRouteId.IsSet()
}

// HasPaymentRouteId returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasPaymentRouteId() bool {
	if o != nil && o.PaymentRouteId.IsSet() {
		return true
	}

	return false
}

// SetPaymentRouteId gets a reference to the given NullableString and assigns it to the PaymentRouteId field.
func (o *CreateSubscriptionRequest) SetPaymentRouteId(v string) {
	o.PaymentRouteId.Set(&v)
}
// SetPaymentRouteIdNil sets the value for PaymentRouteId to be an explicit nil
func (o *CreateSubscriptionRequest) SetPaymentRouteIdNil() {
	o.PaymentRouteId.Set(nil)
}

// UnsetPaymentRouteId ensures that no value is present for PaymentRouteId, not even an explicit nil
func (o *CreateSubscriptionRequest) UnsetPaymentRouteId() {
	o.PaymentRouteId.Unset()
}

// GetPromotionCode returns the PromotionCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionRequest) GetPromotionCode() string {
	if o == nil || IsNil(o.PromotionCode.Get()) {
		var ret string
		return ret
	}
	return *o.PromotionCode.Get()
}

// GetPromotionCodeOk returns a tuple with the PromotionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionRequest) GetPromotionCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PromotionCode.Get(), o.PromotionCode.IsSet()
}

// HasPromotionCode returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasPromotionCode() bool {
	if o != nil && o.PromotionCode.IsSet() {
		return true
	}

	return false
}

// SetPromotionCode gets a reference to the given NullableString and assigns it to the PromotionCode field.
func (o *CreateSubscriptionRequest) SetPromotionCode(v string) {
	o.PromotionCode.Set(&v)
}
// SetPromotionCodeNil sets the value for PromotionCode to be an explicit nil
func (o *CreateSubscriptionRequest) SetPromotionCodeNil() {
	o.PromotionCode.Set(nil)
}

// UnsetPromotionCode ensures that no value is present for PromotionCode, not even an explicit nil
func (o *CreateSubscriptionRequest) UnsetPromotionCode() {
	o.PromotionCode.Unset()
}

// GetSelectedProductPriceQuantity returns the SelectedProductPriceQuantity field value
func (o *CreateSubscriptionRequest) GetSelectedProductPriceQuantity() []SelectedPriceQuantity {
	if o == nil {
		var ret []SelectedPriceQuantity
		return ret
	}

	return o.SelectedProductPriceQuantity
}

// GetSelectedProductPriceQuantityOk returns a tuple with the SelectedProductPriceQuantity field value
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionRequest) GetSelectedProductPriceQuantityOk() ([]SelectedPriceQuantity, bool) {
	if o == nil {
		return nil, false
	}
	return o.SelectedProductPriceQuantity, true
}

// SetSelectedProductPriceQuantity sets field value
func (o *CreateSubscriptionRequest) SetSelectedProductPriceQuantity(v []SelectedPriceQuantity) {
	o.SelectedProductPriceQuantity = v
}

// GetSkipInvoicePayment returns the SkipInvoicePayment field value if set, zero value otherwise.
func (o *CreateSubscriptionRequest) GetSkipInvoicePayment() bool {
	if o == nil || IsNil(o.SkipInvoicePayment) {
		var ret bool
		return ret
	}
	return *o.SkipInvoicePayment
}

// GetSkipInvoicePaymentOk returns a tuple with the SkipInvoicePayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionRequest) GetSkipInvoicePaymentOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipInvoicePayment) {
		return nil, false
	}
	return o.SkipInvoicePayment, true
}

// HasSkipInvoicePayment returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasSkipInvoicePayment() bool {
	if o != nil && !IsNil(o.SkipInvoicePayment) {
		return true
	}

	return false
}

// SetSkipInvoicePayment gets a reference to the given bool and assigns it to the SkipInvoicePayment field.
func (o *CreateSubscriptionRequest) SetSkipInvoicePayment(v bool) {
	o.SkipInvoicePayment = &v
}

// GetStartsAt returns the StartsAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionRequest) GetStartsAt() time.Time {
	if o == nil || IsNil(o.StartsAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartsAt.Get()
}

// GetStartsAtOk returns a tuple with the StartsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionRequest) GetStartsAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartsAt.Get(), o.StartsAt.IsSet()
}

// HasStartsAt returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasStartsAt() bool {
	if o != nil && o.StartsAt.IsSet() {
		return true
	}

	return false
}

// SetStartsAt gets a reference to the given NullableTime and assigns it to the StartsAt field.
func (o *CreateSubscriptionRequest) SetStartsAt(v time.Time) {
	o.StartsAt.Set(&v)
}
// SetStartsAtNil sets the value for StartsAt to be an explicit nil
func (o *CreateSubscriptionRequest) SetStartsAtNil() {
	o.StartsAt.Set(nil)
}

// UnsetStartsAt ensures that no value is present for StartsAt, not even an explicit nil
func (o *CreateSubscriptionRequest) UnsetStartsAt() {
	o.StartsAt.Unset()
}

// GetSubscriptionItemDetails returns the SubscriptionItemDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionRequest) GetSubscriptionItemDetails() map[string]SubscriptionItemDetails {
	if o == nil {
		var ret map[string]SubscriptionItemDetails
		return ret
	}
	return o.SubscriptionItemDetails
}

// GetSubscriptionItemDetailsOk returns a tuple with the SubscriptionItemDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionRequest) GetSubscriptionItemDetailsOk() (map[string]SubscriptionItemDetails, bool) {
	if o == nil || IsNil(o.SubscriptionItemDetails) {
		return map[string]SubscriptionItemDetails{}, false
	}
	return o.SubscriptionItemDetails, true
}

// HasSubscriptionItemDetails returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasSubscriptionItemDetails() bool {
	if o != nil && !IsNil(o.SubscriptionItemDetails) {
		return true
	}

	return false
}

// SetSubscriptionItemDetails gets a reference to the given map[string]SubscriptionItemDetails and assigns it to the SubscriptionItemDetails field.
func (o *CreateSubscriptionRequest) SetSubscriptionItemDetails(v map[string]SubscriptionItemDetails) {
	o.SubscriptionItemDetails = v
}

// GetTotalAmountAtom returns the TotalAmountAtom field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionRequest) GetTotalAmountAtom() int32 {
	if o == nil || IsNil(o.TotalAmountAtom.Get()) {
		var ret int32
		return ret
	}
	return *o.TotalAmountAtom.Get()
}

// GetTotalAmountAtomOk returns a tuple with the TotalAmountAtom field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionRequest) GetTotalAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalAmountAtom.Get(), o.TotalAmountAtom.IsSet()
}

// HasTotalAmountAtom returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasTotalAmountAtom() bool {
	if o != nil && o.TotalAmountAtom.IsSet() {
		return true
	}

	return false
}

// SetTotalAmountAtom gets a reference to the given NullableInt32 and assigns it to the TotalAmountAtom field.
func (o *CreateSubscriptionRequest) SetTotalAmountAtom(v int32) {
	o.TotalAmountAtom.Set(&v)
}
// SetTotalAmountAtomNil sets the value for TotalAmountAtom to be an explicit nil
func (o *CreateSubscriptionRequest) SetTotalAmountAtomNil() {
	o.TotalAmountAtom.Set(nil)
}

// UnsetTotalAmountAtom ensures that no value is present for TotalAmountAtom, not even an explicit nil
func (o *CreateSubscriptionRequest) UnsetTotalAmountAtom() {
	o.TotalAmountAtom.Unset()
}

// GetTrialEnd returns the TrialEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionRequest) GetTrialEnd() time.Time {
	if o == nil || IsNil(o.TrialEnd.Get()) {
		var ret time.Time
		return ret
	}
	return *o.TrialEnd.Get()
}

// GetTrialEndOk returns a tuple with the TrialEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionRequest) GetTrialEndOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialEnd.Get(), o.TrialEnd.IsSet()
}

// HasTrialEnd returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasTrialEnd() bool {
	if o != nil && o.TrialEnd.IsSet() {
		return true
	}

	return false
}

// SetTrialEnd gets a reference to the given NullableTime and assigns it to the TrialEnd field.
func (o *CreateSubscriptionRequest) SetTrialEnd(v time.Time) {
	o.TrialEnd.Set(&v)
}
// SetTrialEndNil sets the value for TrialEnd to be an explicit nil
func (o *CreateSubscriptionRequest) SetTrialEndNil() {
	o.TrialEnd.Set(nil)
}

// UnsetTrialEnd ensures that no value is present for TrialEnd, not even an explicit nil
func (o *CreateSubscriptionRequest) UnsetTrialEnd() {
	o.TrialEnd.Unset()
}

// GetTrialFromPrice returns the TrialFromPrice field value if set, zero value otherwise.
func (o *CreateSubscriptionRequest) GetTrialFromPrice() bool {
	if o == nil || IsNil(o.TrialFromPrice) {
		var ret bool
		return ret
	}
	return *o.TrialFromPrice
}

// GetTrialFromPriceOk returns a tuple with the TrialFromPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionRequest) GetTrialFromPriceOk() (*bool, bool) {
	if o == nil || IsNil(o.TrialFromPrice) {
		return nil, false
	}
	return o.TrialFromPrice, true
}

// HasTrialFromPrice returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasTrialFromPrice() bool {
	if o != nil && !IsNil(o.TrialFromPrice) {
		return true
	}

	return false
}

// SetTrialFromPrice gets a reference to the given bool and assigns it to the TrialFromPrice field.
func (o *CreateSubscriptionRequest) SetTrialFromPrice(v bool) {
	o.TrialFromPrice = &v
}

// GetTrialPeriodDays returns the TrialPeriodDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSubscriptionRequest) GetTrialPeriodDays() int32 {
	if o == nil || IsNil(o.TrialPeriodDays.Get()) {
		var ret int32
		return ret
	}
	return *o.TrialPeriodDays.Get()
}

// GetTrialPeriodDaysOk returns a tuple with the TrialPeriodDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSubscriptionRequest) GetTrialPeriodDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialPeriodDays.Get(), o.TrialPeriodDays.IsSet()
}

// HasTrialPeriodDays returns a boolean if a field has been set.
func (o *CreateSubscriptionRequest) HasTrialPeriodDays() bool {
	if o != nil && o.TrialPeriodDays.IsSet() {
		return true
	}

	return false
}

// SetTrialPeriodDays gets a reference to the given NullableInt32 and assigns it to the TrialPeriodDays field.
func (o *CreateSubscriptionRequest) SetTrialPeriodDays(v int32) {
	o.TrialPeriodDays.Set(&v)
}
// SetTrialPeriodDaysNil sets the value for TrialPeriodDays to be an explicit nil
func (o *CreateSubscriptionRequest) SetTrialPeriodDaysNil() {
	o.TrialPeriodDays.Set(nil)
}

// UnsetTrialPeriodDays ensures that no value is present for TrialPeriodDays, not even an explicit nil
func (o *CreateSubscriptionRequest) UnsetTrialPeriodDays() {
	o.TrialPeriodDays.Unset()
}

func (o CreateSubscriptionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSubscriptionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AttachToCheckoutAttemptId.IsSet() {
		toSerialize["attach_to_checkout_attempt_id"] = o.AttachToCheckoutAttemptId.Get()
	}
	if !IsNil(o.CancelAtEnd) {
		toSerialize["cancel_at_end"] = o.CancelAtEnd
	}
	if o.CheckoutPreferences.IsSet() {
		toSerialize["checkout_preferences"] = o.CheckoutPreferences.Get()
	}
	if !IsNil(o.CollectionMethod) {
		toSerialize["collection_method"] = o.CollectionMethod
	}
	if o.CouponId.IsSet() {
		toSerialize["coupon_id"] = o.CouponId.Get()
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	toSerialize["customer_id"] = o.CustomerId
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.IsPreview) {
		toSerialize["is_preview"] = o.IsPreview
	}
	if o.NetD.IsSet() {
		toSerialize["net_d"] = o.NetD.Get()
	}
	if o.PaymentMethodId.IsSet() {
		toSerialize["payment_method_id"] = o.PaymentMethodId.Get()
	}
	if o.PaymentRouteId.IsSet() {
		toSerialize["payment_route_id"] = o.PaymentRouteId.Get()
	}
	if o.PromotionCode.IsSet() {
		toSerialize["promotion_code"] = o.PromotionCode.Get()
	}
	toSerialize["selected_product_price_quantity"] = o.SelectedProductPriceQuantity
	if !IsNil(o.SkipInvoicePayment) {
		toSerialize["skip_invoice_payment"] = o.SkipInvoicePayment
	}
	if o.StartsAt.IsSet() {
		toSerialize["starts_at"] = o.StartsAt.Get()
	}
	if o.SubscriptionItemDetails != nil {
		toSerialize["subscription_item_details"] = o.SubscriptionItemDetails
	}
	if o.TotalAmountAtom.IsSet() {
		toSerialize["total_amount_atom"] = o.TotalAmountAtom.Get()
	}
	if o.TrialEnd.IsSet() {
		toSerialize["trial_end"] = o.TrialEnd.Get()
	}
	if !IsNil(o.TrialFromPrice) {
		toSerialize["trial_from_price"] = o.TrialFromPrice
	}
	if o.TrialPeriodDays.IsSet() {
		toSerialize["trial_period_days"] = o.TrialPeriodDays.Get()
	}
	return toSerialize, nil
}

func (o *CreateSubscriptionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customer_id",
		"selected_product_price_quantity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSubscriptionRequest := _CreateSubscriptionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateSubscriptionRequest)

	if err != nil {
		return err
	}

	*o = CreateSubscriptionRequest(varCreateSubscriptionRequest)

	return err
}

type NullableCreateSubscriptionRequest struct {
	value *CreateSubscriptionRequest
	isSet bool
}

func (v NullableCreateSubscriptionRequest) Get() *CreateSubscriptionRequest {
	return v.value
}

func (v *NullableCreateSubscriptionRequest) Set(val *CreateSubscriptionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubscriptionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubscriptionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubscriptionRequest(val *CreateSubscriptionRequest) *NullableCreateSubscriptionRequest {
	return &NullableCreateSubscriptionRequest{value: val, isSet: true}
}

func (v NullableCreateSubscriptionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubscriptionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


