/*
OpenPay API

super charge your subscription management.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateSubscriptionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSubscriptionResponse{}

// CreateSubscriptionResponse struct for CreateSubscriptionResponse
type CreateSubscriptionResponse struct {
	Created []SubscriptionExternal `json:"created"`
	Invoices []InvoiceExternal `json:"invoices"`
}

type _CreateSubscriptionResponse CreateSubscriptionResponse

// NewCreateSubscriptionResponse instantiates a new CreateSubscriptionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubscriptionResponse(created []SubscriptionExternal, invoices []InvoiceExternal) *CreateSubscriptionResponse {
	this := CreateSubscriptionResponse{}
	this.Created = created
	this.Invoices = invoices
	return &this
}

// NewCreateSubscriptionResponseWithDefaults instantiates a new CreateSubscriptionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubscriptionResponseWithDefaults() *CreateSubscriptionResponse {
	this := CreateSubscriptionResponse{}
	return &this
}

// GetCreated returns the Created field value
func (o *CreateSubscriptionResponse) GetCreated() []SubscriptionExternal {
	if o == nil {
		var ret []SubscriptionExternal
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionResponse) GetCreatedOk() ([]SubscriptionExternal, bool) {
	if o == nil {
		return nil, false
	}
	return o.Created, true
}

// SetCreated sets field value
func (o *CreateSubscriptionResponse) SetCreated(v []SubscriptionExternal) {
	o.Created = v
}

// GetInvoices returns the Invoices field value
func (o *CreateSubscriptionResponse) GetInvoices() []InvoiceExternal {
	if o == nil {
		var ret []InvoiceExternal
		return ret
	}

	return o.Invoices
}

// GetInvoicesOk returns a tuple with the Invoices field value
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionResponse) GetInvoicesOk() ([]InvoiceExternal, bool) {
	if o == nil {
		return nil, false
	}
	return o.Invoices, true
}

// SetInvoices sets field value
func (o *CreateSubscriptionResponse) SetInvoices(v []InvoiceExternal) {
	o.Invoices = v
}

func (o CreateSubscriptionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSubscriptionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created"] = o.Created
	toSerialize["invoices"] = o.Invoices
	return toSerialize, nil
}

func (o *CreateSubscriptionResponse) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created",
		"invoices",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSubscriptionResponse := _CreateSubscriptionResponse{}

	err = json.Unmarshal(bytes, &varCreateSubscriptionResponse)

	if err != nil {
		return err
	}

	*o = CreateSubscriptionResponse(varCreateSubscriptionResponse)

	return err
}

type NullableCreateSubscriptionResponse struct {
	value *CreateSubscriptionResponse
	isSet bool
}

func (v NullableCreateSubscriptionResponse) Get() *CreateSubscriptionResponse {
	return v.value
}

func (v *NullableCreateSubscriptionResponse) Set(val *CreateSubscriptionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubscriptionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubscriptionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubscriptionResponse(val *CreateSubscriptionResponse) *NullableCreateSubscriptionResponse {
	return &NullableCreateSubscriptionResponse{value: val, isSet: true}
}

func (v NullableCreateSubscriptionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubscriptionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


