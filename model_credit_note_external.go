/*
OpenPay API

super charge your subscription management.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the CreditNoteExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditNoteExternal{}

// CreditNoteExternal struct for CreditNoteExternal
type CreditNoteExternal struct {
	// Unique Identifier of the credit_note.
	Id string `json:"id"`
	Object *ObjectName `json:"object,omitempty"`
	// DateTime at which the object was created, in 'ISO 8601' format.
	CreatedAt time.Time `json:"created_at"`
	// DateTime at which the object was updated, in 'ISO 8601' format.
	UpdatedAt time.Time `json:"updated_at"`
	// If true, indicates that this object has been deleted
	IsDeleted *bool `json:"is_deleted,omitempty"`
	// The integer amount representing the total amount of the credit note. It is in atomic units (in USD this is cents).
	TotalAmountAtom int32 `json:"total_amount_atom"`
	Currency CurrencyEnum `json:"currency"`
	Reason NullableCreditNoteReason `json:"reason"`
	// Unique ID of the invoice.
	InvoiceId string `json:"invoice_id"`
	Items []CreditNoteItemExternal `json:"items"`
	// The integer amount representing the amount to credit the customerâ€™s balance, which will be automatically applied to their next invoice. It is in atomic units (in USD this is cents).
	CreditAmountAtom int32 `json:"credit_amount_atom"`
	// The integer amount representing the amount to refund. If set, a refund will be created for the charge associated with the invoice. It is in atomic units (in USD this is cents).
	RefundAmountAtom int32 `json:"refund_amount_atom"`
}

type _CreditNoteExternal CreditNoteExternal

// NewCreditNoteExternal instantiates a new CreditNoteExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditNoteExternal(id string, createdAt time.Time, updatedAt time.Time, totalAmountAtom int32, currency CurrencyEnum, reason NullableCreditNoteReason, invoiceId string, items []CreditNoteItemExternal, creditAmountAtom int32, refundAmountAtom int32) *CreditNoteExternal {
	this := CreditNoteExternal{}
	this.Id = id
	var object ObjectName = OBJECTNAME_CREDIT_NOTE
	this.Object = &object
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	this.TotalAmountAtom = totalAmountAtom
	this.Currency = currency
	this.Reason = reason
	this.InvoiceId = invoiceId
	this.Items = items
	this.CreditAmountAtom = creditAmountAtom
	this.RefundAmountAtom = refundAmountAtom
	return &this
}

// NewCreditNoteExternalWithDefaults instantiates a new CreditNoteExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditNoteExternalWithDefaults() *CreditNoteExternal {
	this := CreditNoteExternal{}
	var object ObjectName = OBJECTNAME_CREDIT_NOTE
	this.Object = &object
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	return &this
}

// GetId returns the Id field value
func (o *CreditNoteExternal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreditNoteExternal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreditNoteExternal) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *CreditNoteExternal) GetObject() ObjectName {
	if o == nil || IsNil(o.Object) {
		var ret ObjectName
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteExternal) GetObjectOk() (*ObjectName, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *CreditNoteExternal) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given ObjectName and assigns it to the Object field.
func (o *CreditNoteExternal) SetObject(v ObjectName) {
	o.Object = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CreditNoteExternal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CreditNoteExternal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CreditNoteExternal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CreditNoteExternal) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CreditNoteExternal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CreditNoteExternal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *CreditNoteExternal) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteExternal) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *CreditNoteExternal) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *CreditNoteExternal) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetTotalAmountAtom returns the TotalAmountAtom field value
func (o *CreditNoteExternal) GetTotalAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalAmountAtom
}

// GetTotalAmountAtomOk returns a tuple with the TotalAmountAtom field value
// and a boolean to check if the value has been set.
func (o *CreditNoteExternal) GetTotalAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAmountAtom, true
}

// SetTotalAmountAtom sets field value
func (o *CreditNoteExternal) SetTotalAmountAtom(v int32) {
	o.TotalAmountAtom = v
}

// GetCurrency returns the Currency field value
func (o *CreditNoteExternal) GetCurrency() CurrencyEnum {
	if o == nil {
		var ret CurrencyEnum
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *CreditNoteExternal) GetCurrencyOk() (*CurrencyEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *CreditNoteExternal) SetCurrency(v CurrencyEnum) {
	o.Currency = v
}

// GetReason returns the Reason field value
// If the value is explicit nil, the zero value for CreditNoteReason will be returned
func (o *CreditNoteExternal) GetReason() CreditNoteReason {
	if o == nil || o.Reason.Get() == nil {
		var ret CreditNoteReason
		return ret
	}

	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditNoteExternal) GetReasonOk() (*CreditNoteReason, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// SetReason sets field value
func (o *CreditNoteExternal) SetReason(v CreditNoteReason) {
	o.Reason.Set(&v)
}

// GetInvoiceId returns the InvoiceId field value
func (o *CreditNoteExternal) GetInvoiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvoiceId
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value
// and a boolean to check if the value has been set.
func (o *CreditNoteExternal) GetInvoiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceId, true
}

// SetInvoiceId sets field value
func (o *CreditNoteExternal) SetInvoiceId(v string) {
	o.InvoiceId = v
}

// GetItems returns the Items field value
func (o *CreditNoteExternal) GetItems() []CreditNoteItemExternal {
	if o == nil {
		var ret []CreditNoteItemExternal
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *CreditNoteExternal) GetItemsOk() ([]CreditNoteItemExternal, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *CreditNoteExternal) SetItems(v []CreditNoteItemExternal) {
	o.Items = v
}

// GetCreditAmountAtom returns the CreditAmountAtom field value
func (o *CreditNoteExternal) GetCreditAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreditAmountAtom
}

// GetCreditAmountAtomOk returns a tuple with the CreditAmountAtom field value
// and a boolean to check if the value has been set.
func (o *CreditNoteExternal) GetCreditAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreditAmountAtom, true
}

// SetCreditAmountAtom sets field value
func (o *CreditNoteExternal) SetCreditAmountAtom(v int32) {
	o.CreditAmountAtom = v
}

// GetRefundAmountAtom returns the RefundAmountAtom field value
func (o *CreditNoteExternal) GetRefundAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RefundAmountAtom
}

// GetRefundAmountAtomOk returns a tuple with the RefundAmountAtom field value
// and a boolean to check if the value has been set.
func (o *CreditNoteExternal) GetRefundAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefundAmountAtom, true
}

// SetRefundAmountAtom sets field value
func (o *CreditNoteExternal) SetRefundAmountAtom(v int32) {
	o.RefundAmountAtom = v
}

func (o CreditNoteExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditNoteExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	toSerialize["total_amount_atom"] = o.TotalAmountAtom
	toSerialize["currency"] = o.Currency
	toSerialize["reason"] = o.Reason.Get()
	toSerialize["invoice_id"] = o.InvoiceId
	toSerialize["items"] = o.Items
	toSerialize["credit_amount_atom"] = o.CreditAmountAtom
	toSerialize["refund_amount_atom"] = o.RefundAmountAtom
	return toSerialize, nil
}

func (o *CreditNoteExternal) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"updated_at",
		"total_amount_atom",
		"currency",
		"reason",
		"invoice_id",
		"items",
		"credit_amount_atom",
		"refund_amount_atom",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreditNoteExternal := _CreditNoteExternal{}

	err = json.Unmarshal(bytes, &varCreditNoteExternal)

	if err != nil {
		return err
	}

	*o = CreditNoteExternal(varCreditNoteExternal)

	return err
}

type NullableCreditNoteExternal struct {
	value *CreditNoteExternal
	isSet bool
}

func (v NullableCreditNoteExternal) Get() *CreditNoteExternal {
	return v.value
}

func (v *NullableCreditNoteExternal) Set(val *CreditNoteExternal) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditNoteExternal) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditNoteExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditNoteExternal(val *CreditNoteExternal) *NullableCreditNoteExternal {
	return &NullableCreditNoteExternal{value: val, isSet: true}
}

func (v NullableCreditNoteExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditNoteExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


