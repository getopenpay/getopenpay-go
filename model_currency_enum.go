/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"fmt"
)

// CurrencyEnum the model 'CurrencyEnum'
type CurrencyEnum string

// List of CurrencyEnum
const (
	CURRENCYENUM_USD CurrencyEnum = "usd"
	CURRENCYENUM_BRL CurrencyEnum = "brl"
	CURRENCYENUM_EUR CurrencyEnum = "eur"
	CURRENCYENUM_GBP CurrencyEnum = "gbp"
	CURRENCYENUM_AUD CurrencyEnum = "aud"
	CURRENCYENUM_CAD CurrencyEnum = "cad"
	CURRENCYENUM_NOK CurrencyEnum = "nok"
	CURRENCYENUM_SEK CurrencyEnum = "sek"
	CURRENCYENUM_MXN CurrencyEnum = "mxn"
	CURRENCYENUM_INR CurrencyEnum = "inr"
	CURRENCYENUM_ARS CurrencyEnum = "ars"
	CURRENCYENUM_COP CurrencyEnum = "cop"
	CURRENCYENUM_CLP CurrencyEnum = "clp"
	CURRENCYENUM_NZD CurrencyEnum = "nzd"
	CURRENCYENUM_JPY CurrencyEnum = "jpy"
	CURRENCYENUM_CHF CurrencyEnum = "chf"
	CURRENCYENUM_CNY CurrencyEnum = "cny"
	CURRENCYENUM_HKD CurrencyEnum = "hkd"
	CURRENCYENUM_SGD CurrencyEnum = "sgd"
	CURRENCYENUM_PLN CurrencyEnum = "pln"
	CURRENCYENUM_DKK CurrencyEnum = "dkk"
	CURRENCYENUM_ZAR CurrencyEnum = "zar"
	CURRENCYENUM_THB CurrencyEnum = "thb"
	CURRENCYENUM_MYR CurrencyEnum = "myr"
	CURRENCYENUM_ILS CurrencyEnum = "ils"
	CURRENCYENUM_PHP CurrencyEnum = "php"
	CURRENCYENUM_TRY CurrencyEnum = "try"
	CURRENCYENUM_IDR CurrencyEnum = "idr"
	CURRENCYENUM_CZK CurrencyEnum = "czk"
	CURRENCYENUM_AED CurrencyEnum = "aed"
	CURRENCYENUM_SAR CurrencyEnum = "sar"
	CURRENCYENUM_RUB CurrencyEnum = "rub"
	CURRENCYENUM_ALL CurrencyEnum = "all"
	CURRENCYENUM_AMD CurrencyEnum = "amd"
	CURRENCYENUM_ANG CurrencyEnum = "ang"
	CURRENCYENUM_AOA CurrencyEnum = "aoa"
	CURRENCYENUM_AWG CurrencyEnum = "awg"
	CURRENCYENUM_AZN CurrencyEnum = "azn"
	CURRENCYENUM_BAM CurrencyEnum = "bam"
	CURRENCYENUM_BBD CurrencyEnum = "bbd"
	CURRENCYENUM_BDT CurrencyEnum = "bdt"
	CURRENCYENUM_BGN CurrencyEnum = "bgn"
	CURRENCYENUM_BIF CurrencyEnum = "bif"
	CURRENCYENUM_BMD CurrencyEnum = "bmd"
	CURRENCYENUM_BND CurrencyEnum = "bnd"
	CURRENCYENUM_BOB CurrencyEnum = "bob"
	CURRENCYENUM_BSD CurrencyEnum = "bsd"
	CURRENCYENUM_BWP CurrencyEnum = "bwp"
	CURRENCYENUM_BZD CurrencyEnum = "bzd"
	CURRENCYENUM_CRC CurrencyEnum = "crc"
	CURRENCYENUM_CVE CurrencyEnum = "cve"
	CURRENCYENUM_DJF CurrencyEnum = "djf"
	CURRENCYENUM_DOP CurrencyEnum = "dop"
	CURRENCYENUM_DZD CurrencyEnum = "dzd"
	CURRENCYENUM_EGP CurrencyEnum = "egp"
	CURRENCYENUM_ETB CurrencyEnum = "etb"
	CURRENCYENUM_FJD CurrencyEnum = "fjd"
	CURRENCYENUM_FKP CurrencyEnum = "fkp"
	CURRENCYENUM_GEL CurrencyEnum = "gel"
	CURRENCYENUM_GIP CurrencyEnum = "gip"
	CURRENCYENUM_GMD CurrencyEnum = "gmd"
	CURRENCYENUM_GNF CurrencyEnum = "gnf"
	CURRENCYENUM_GTQ CurrencyEnum = "gtq"
	CURRENCYENUM_GYD CurrencyEnum = "gyd"
	CURRENCYENUM_HNL CurrencyEnum = "hnl"
	CURRENCYENUM_HUF CurrencyEnum = "huf"
	CURRENCYENUM_JMD CurrencyEnum = "jmd"
	CURRENCYENUM_KES CurrencyEnum = "kes"
	CURRENCYENUM_KGS CurrencyEnum = "kgs"
	CURRENCYENUM_KHR CurrencyEnum = "khr"
	CURRENCYENUM_KMF CurrencyEnum = "kmf"
	CURRENCYENUM_KRW CurrencyEnum = "krw"
	CURRENCYENUM_KYD CurrencyEnum = "kyd"
	CURRENCYENUM_KZT CurrencyEnum = "kzt"
	CURRENCYENUM_LAK CurrencyEnum = "lak"
	CURRENCYENUM_LBP CurrencyEnum = "lbp"
	CURRENCYENUM_LKR CurrencyEnum = "lkr"
	CURRENCYENUM_LRD CurrencyEnum = "lrd"
	CURRENCYENUM_LSL CurrencyEnum = "lsl"
	CURRENCYENUM_MAD CurrencyEnum = "mad"
	CURRENCYENUM_MDL CurrencyEnum = "mdl"
	CURRENCYENUM_MKD CurrencyEnum = "mkd"
	CURRENCYENUM_MNT CurrencyEnum = "mnt"
	CURRENCYENUM_MOP CurrencyEnum = "mop"
	CURRENCYENUM_MUR CurrencyEnum = "mur"
	CURRENCYENUM_MVR CurrencyEnum = "mvr"
	CURRENCYENUM_MWK CurrencyEnum = "mwk"
	CURRENCYENUM_NAD CurrencyEnum = "nad"
	CURRENCYENUM_NGN CurrencyEnum = "ngn"
	CURRENCYENUM_NIO CurrencyEnum = "nio"
	CURRENCYENUM_NPR CurrencyEnum = "npr"
	CURRENCYENUM_PAB CurrencyEnum = "pab"
	CURRENCYENUM_PEN CurrencyEnum = "pen"
	CURRENCYENUM_PGK CurrencyEnum = "pgk"
	CURRENCYENUM_PKR CurrencyEnum = "pkr"
	CURRENCYENUM_PYG CurrencyEnum = "pyg"
	CURRENCYENUM_QAR CurrencyEnum = "qar"
	CURRENCYENUM_RON CurrencyEnum = "ron"
	CURRENCYENUM_RSD CurrencyEnum = "rsd"
	CURRENCYENUM_RWF CurrencyEnum = "rwf"
	CURRENCYENUM_SBD CurrencyEnum = "sbd"
	CURRENCYENUM_SCR CurrencyEnum = "scr"
	CURRENCYENUM_SHP CurrencyEnum = "shp"
	CURRENCYENUM_SRD CurrencyEnum = "srd"
	CURRENCYENUM_STD CurrencyEnum = "std"
	CURRENCYENUM_SZL CurrencyEnum = "szl"
	CURRENCYENUM_TJS CurrencyEnum = "tjs"
	CURRENCYENUM_TOP CurrencyEnum = "top"
	CURRENCYENUM_TTD CurrencyEnum = "ttd"
	CURRENCYENUM_TWD CurrencyEnum = "twd"
	CURRENCYENUM_TZS CurrencyEnum = "tzs"
	CURRENCYENUM_UAH CurrencyEnum = "uah"
	CURRENCYENUM_UGX CurrencyEnum = "ugx"
	CURRENCYENUM_UYU CurrencyEnum = "uyu"
	CURRENCYENUM_UZS CurrencyEnum = "uzs"
	CURRENCYENUM_VND CurrencyEnum = "vnd"
	CURRENCYENUM_VUV CurrencyEnum = "vuv"
	CURRENCYENUM_WST CurrencyEnum = "wst"
	CURRENCYENUM_XAF CurrencyEnum = "xaf"
	CURRENCYENUM_XCD CurrencyEnum = "xcd"
	CURRENCYENUM_XOF CurrencyEnum = "xof"
	CURRENCYENUM_XPF CurrencyEnum = "xpf"
	CURRENCYENUM_ZMW CurrencyEnum = "zmw"
)

// All allowed values of CurrencyEnum enum
var AllowedCurrencyEnumEnumValues = []CurrencyEnum{
	"usd",
	"brl",
	"eur",
	"gbp",
	"aud",
	"cad",
	"nok",
	"sek",
	"mxn",
	"inr",
	"ars",
	"cop",
	"clp",
	"nzd",
	"jpy",
	"chf",
	"cny",
	"hkd",
	"sgd",
	"pln",
	"dkk",
	"zar",
	"thb",
	"myr",
	"ils",
	"php",
	"try",
	"idr",
	"czk",
	"aed",
	"sar",
	"rub",
	"all",
	"amd",
	"ang",
	"aoa",
	"awg",
	"azn",
	"bam",
	"bbd",
	"bdt",
	"bgn",
	"bif",
	"bmd",
	"bnd",
	"bob",
	"bsd",
	"bwp",
	"bzd",
	"crc",
	"cve",
	"djf",
	"dop",
	"dzd",
	"egp",
	"etb",
	"fjd",
	"fkp",
	"gel",
	"gip",
	"gmd",
	"gnf",
	"gtq",
	"gyd",
	"hnl",
	"huf",
	"jmd",
	"kes",
	"kgs",
	"khr",
	"kmf",
	"krw",
	"kyd",
	"kzt",
	"lak",
	"lbp",
	"lkr",
	"lrd",
	"lsl",
	"mad",
	"mdl",
	"mkd",
	"mnt",
	"mop",
	"mur",
	"mvr",
	"mwk",
	"nad",
	"ngn",
	"nio",
	"npr",
	"pab",
	"pen",
	"pgk",
	"pkr",
	"pyg",
	"qar",
	"ron",
	"rsd",
	"rwf",
	"sbd",
	"scr",
	"shp",
	"srd",
	"std",
	"szl",
	"tjs",
	"top",
	"ttd",
	"twd",
	"tzs",
	"uah",
	"ugx",
	"uyu",
	"uzs",
	"vnd",
	"vuv",
	"wst",
	"xaf",
	"xcd",
	"xof",
	"xpf",
	"zmw",
}

func (v *CurrencyEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CurrencyEnum(value)
	for _, existing := range AllowedCurrencyEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CurrencyEnum", value)
}

// NewCurrencyEnumFromValue returns a pointer to a valid CurrencyEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCurrencyEnumFromValue(v string) (*CurrencyEnum, error) {
	ev := CurrencyEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CurrencyEnum: valid values are %v", v, AllowedCurrencyEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CurrencyEnum) IsValid() bool {
	for _, existing := range AllowedCurrencyEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CurrencyEnum value
func (v CurrencyEnum) Ptr() *CurrencyEnum {
	return &v
}

type NullableCurrencyEnum struct {
	value *CurrencyEnum
	isSet bool
}

func (v NullableCurrencyEnum) Get() *CurrencyEnum {
	return v.value
}

func (v *NullableCurrencyEnum) Set(val *CurrencyEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableCurrencyEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableCurrencyEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCurrencyEnum(val *CurrencyEnum) *NullableCurrencyEnum {
	return &NullableCurrencyEnum{value: val, isSet: true}
}

func (v NullableCurrencyEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCurrencyEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

