/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DeletePaymentRouteResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeletePaymentRouteResponse{}

// DeletePaymentRouteResponse struct for DeletePaymentRouteResponse
type DeletePaymentRouteResponse struct {
	// Message describing result of API call.
	Message *string `json:"message,omitempty"`
	// Unique identifier of the payment route.
	PaymentRouteId string `json:"payment_route_id"`
}

type _DeletePaymentRouteResponse DeletePaymentRouteResponse

// NewDeletePaymentRouteResponse instantiates a new DeletePaymentRouteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeletePaymentRouteResponse(paymentRouteId string) *DeletePaymentRouteResponse {
	this := DeletePaymentRouteResponse{}
	var message string = "Payment route deleted successfully"
	this.Message = &message
	this.PaymentRouteId = paymentRouteId
	return &this
}

// NewDeletePaymentRouteResponseWithDefaults instantiates a new DeletePaymentRouteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeletePaymentRouteResponseWithDefaults() *DeletePaymentRouteResponse {
	this := DeletePaymentRouteResponse{}
	var message string = "Payment route deleted successfully"
	this.Message = &message
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *DeletePaymentRouteResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePaymentRouteResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *DeletePaymentRouteResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *DeletePaymentRouteResponse) SetMessage(v string) {
	o.Message = &v
}

// GetPaymentRouteId returns the PaymentRouteId field value
func (o *DeletePaymentRouteResponse) GetPaymentRouteId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentRouteId
}

// GetPaymentRouteIdOk returns a tuple with the PaymentRouteId field value
// and a boolean to check if the value has been set.
func (o *DeletePaymentRouteResponse) GetPaymentRouteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentRouteId, true
}

// SetPaymentRouteId sets field value
func (o *DeletePaymentRouteResponse) SetPaymentRouteId(v string) {
	o.PaymentRouteId = v
}

func (o DeletePaymentRouteResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeletePaymentRouteResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	toSerialize["payment_route_id"] = o.PaymentRouteId
	return toSerialize, nil
}

func (o *DeletePaymentRouteResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"payment_route_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeletePaymentRouteResponse := _DeletePaymentRouteResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeletePaymentRouteResponse)

	if err != nil {
		return err
	}

	*o = DeletePaymentRouteResponse(varDeletePaymentRouteResponse)

	return err
}

type NullableDeletePaymentRouteResponse struct {
	value *DeletePaymentRouteResponse
	isSet bool
}

func (v NullableDeletePaymentRouteResponse) Get() *DeletePaymentRouteResponse {
	return v.value
}

func (v *NullableDeletePaymentRouteResponse) Set(val *DeletePaymentRouteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeletePaymentRouteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeletePaymentRouteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeletePaymentRouteResponse(val *DeletePaymentRouteResponse) *NullableDeletePaymentRouteResponse {
	return &NullableDeletePaymentRouteResponse{value: val, isSet: true}
}

func (v NullableDeletePaymentRouteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeletePaymentRouteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


