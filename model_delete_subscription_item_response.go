/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the DeleteSubscriptionItemResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteSubscriptionItemResponse{}

// DeleteSubscriptionItemResponse struct for DeleteSubscriptionItemResponse
type DeleteSubscriptionItemResponse struct {
	DeletedAt NullableTime `json:"deleted_at"`
	// Whether or not this item will be dropped from subscription before next renewal
	DropAtEnd *bool `json:"drop_at_end,omitempty"`
	// Message describing result of API call.
	Message *string `json:"message,omitempty"`
	// Unique identifier of the subscription_item.
	SubscriptionItemId string `json:"subscription_item_id"`
}

type _DeleteSubscriptionItemResponse DeleteSubscriptionItemResponse

// NewDeleteSubscriptionItemResponse instantiates a new DeleteSubscriptionItemResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteSubscriptionItemResponse(deletedAt NullableTime, subscriptionItemId string) *DeleteSubscriptionItemResponse {
	this := DeleteSubscriptionItemResponse{}
	this.DeletedAt = deletedAt
	var dropAtEnd bool = false
	this.DropAtEnd = &dropAtEnd
	var message string = "SubscriptionItem deleted successfully."
	this.Message = &message
	this.SubscriptionItemId = subscriptionItemId
	return &this
}

// NewDeleteSubscriptionItemResponseWithDefaults instantiates a new DeleteSubscriptionItemResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteSubscriptionItemResponseWithDefaults() *DeleteSubscriptionItemResponse {
	this := DeleteSubscriptionItemResponse{}
	var dropAtEnd bool = false
	this.DropAtEnd = &dropAtEnd
	var message string = "SubscriptionItem deleted successfully."
	this.Message = &message
	return &this
}

// GetDeletedAt returns the DeletedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *DeleteSubscriptionItemResponse) GetDeletedAt() time.Time {
	if o == nil || o.DeletedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.DeletedAt.Get()
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeleteSubscriptionItemResponse) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedAt.Get(), o.DeletedAt.IsSet()
}

// SetDeletedAt sets field value
func (o *DeleteSubscriptionItemResponse) SetDeletedAt(v time.Time) {
	o.DeletedAt.Set(&v)
}

// GetDropAtEnd returns the DropAtEnd field value if set, zero value otherwise.
func (o *DeleteSubscriptionItemResponse) GetDropAtEnd() bool {
	if o == nil || IsNil(o.DropAtEnd) {
		var ret bool
		return ret
	}
	return *o.DropAtEnd
}

// GetDropAtEndOk returns a tuple with the DropAtEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSubscriptionItemResponse) GetDropAtEndOk() (*bool, bool) {
	if o == nil || IsNil(o.DropAtEnd) {
		return nil, false
	}
	return o.DropAtEnd, true
}

// HasDropAtEnd returns a boolean if a field has been set.
func (o *DeleteSubscriptionItemResponse) HasDropAtEnd() bool {
	if o != nil && !IsNil(o.DropAtEnd) {
		return true
	}

	return false
}

// SetDropAtEnd gets a reference to the given bool and assigns it to the DropAtEnd field.
func (o *DeleteSubscriptionItemResponse) SetDropAtEnd(v bool) {
	o.DropAtEnd = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *DeleteSubscriptionItemResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteSubscriptionItemResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *DeleteSubscriptionItemResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *DeleteSubscriptionItemResponse) SetMessage(v string) {
	o.Message = &v
}

// GetSubscriptionItemId returns the SubscriptionItemId field value
func (o *DeleteSubscriptionItemResponse) GetSubscriptionItemId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionItemId
}

// GetSubscriptionItemIdOk returns a tuple with the SubscriptionItemId field value
// and a boolean to check if the value has been set.
func (o *DeleteSubscriptionItemResponse) GetSubscriptionItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionItemId, true
}

// SetSubscriptionItemId sets field value
func (o *DeleteSubscriptionItemResponse) SetSubscriptionItemId(v string) {
	o.SubscriptionItemId = v
}

func (o DeleteSubscriptionItemResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteSubscriptionItemResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deleted_at"] = o.DeletedAt.Get()
	if !IsNil(o.DropAtEnd) {
		toSerialize["drop_at_end"] = o.DropAtEnd
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	toSerialize["subscription_item_id"] = o.SubscriptionItemId
	return toSerialize, nil
}

func (o *DeleteSubscriptionItemResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"deleted_at",
		"subscription_item_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteSubscriptionItemResponse := _DeleteSubscriptionItemResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteSubscriptionItemResponse)

	if err != nil {
		return err
	}

	*o = DeleteSubscriptionItemResponse(varDeleteSubscriptionItemResponse)

	return err
}

type NullableDeleteSubscriptionItemResponse struct {
	value *DeleteSubscriptionItemResponse
	isSet bool
}

func (v NullableDeleteSubscriptionItemResponse) Get() *DeleteSubscriptionItemResponse {
	return v.value
}

func (v *NullableDeleteSubscriptionItemResponse) Set(val *DeleteSubscriptionItemResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteSubscriptionItemResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteSubscriptionItemResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteSubscriptionItemResponse(val *DeleteSubscriptionItemResponse) *NullableDeleteSubscriptionItemResponse {
	return &NullableDeleteSubscriptionItemResponse{value: val, isSet: true}
}

func (v NullableDeleteSubscriptionItemResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteSubscriptionItemResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


