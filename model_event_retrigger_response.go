/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"fmt"
)

// checks if the EventRetriggerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventRetriggerResponse{}

// EventRetriggerResponse struct for EventRetriggerResponse
type EventRetriggerResponse struct {
	// Mapping from webhook id to the delivery results
	WebhookDeliveryResults map[string]WebhookDeliveryResult `json:"webhook_delivery_results"`
	AdditionalProperties map[string]interface{}
}

type _EventRetriggerResponse EventRetriggerResponse

// NewEventRetriggerResponse instantiates a new EventRetriggerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventRetriggerResponse(webhookDeliveryResults map[string]WebhookDeliveryResult) *EventRetriggerResponse {
	this := EventRetriggerResponse{}
	this.WebhookDeliveryResults = webhookDeliveryResults
	return &this
}

// NewEventRetriggerResponseWithDefaults instantiates a new EventRetriggerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventRetriggerResponseWithDefaults() *EventRetriggerResponse {
	this := EventRetriggerResponse{}
	return &this
}

// GetWebhookDeliveryResults returns the WebhookDeliveryResults field value
func (o *EventRetriggerResponse) GetWebhookDeliveryResults() map[string]WebhookDeliveryResult {
	if o == nil {
		var ret map[string]WebhookDeliveryResult
		return ret
	}

	return o.WebhookDeliveryResults
}

// GetWebhookDeliveryResultsOk returns a tuple with the WebhookDeliveryResults field value
// and a boolean to check if the value has been set.
func (o *EventRetriggerResponse) GetWebhookDeliveryResultsOk() (map[string]WebhookDeliveryResult, bool) {
	if o == nil {
		return map[string]WebhookDeliveryResult{}, false
	}
	return o.WebhookDeliveryResults, true
}

// SetWebhookDeliveryResults sets field value
func (o *EventRetriggerResponse) SetWebhookDeliveryResults(v map[string]WebhookDeliveryResult) {
	o.WebhookDeliveryResults = v
}

func (o EventRetriggerResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventRetriggerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["webhook_delivery_results"] = o.WebhookDeliveryResults

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EventRetriggerResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"webhook_delivery_results",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEventRetriggerResponse := _EventRetriggerResponse{}

	err = json.Unmarshal(data, &varEventRetriggerResponse)

	if err != nil {
		return err
	}

	*o = EventRetriggerResponse(varEventRetriggerResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "webhook_delivery_results")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEventRetriggerResponse struct {
	value *EventRetriggerResponse
	isSet bool
}

func (v NullableEventRetriggerResponse) Get() *EventRetriggerResponse {
	return v.value
}

func (v *NullableEventRetriggerResponse) Set(val *EventRetriggerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEventRetriggerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEventRetriggerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventRetriggerResponse(val *EventRetriggerResponse) *NullableEventRetriggerResponse {
	return &NullableEventRetriggerResponse{value: val, isSet: true}
}

func (v NullableEventRetriggerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventRetriggerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


