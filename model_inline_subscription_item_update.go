/*
OpenPay API

super charge your subscription management.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
)

// checks if the InlineSubscriptionItemUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InlineSubscriptionItemUpdate{}

// InlineSubscriptionItemUpdate struct for InlineSubscriptionItemUpdate
type InlineSubscriptionItemUpdate struct {
	Id NullableString `json:"id,omitempty"`
	// A flag that, if set to true, will delete the specified item immediately from subscription. drop_at_end flag cannot be used while using this behaviour
	Delete *bool `json:"delete,omitempty"`
	AddAtPeriodEnd NullableBool `json:"add_at_period_end,omitempty"`
	DropAtEnd NullableBool `json:"drop_at_end,omitempty"`
	PriceId NullableString `json:"price_id,omitempty"`
	Quantity NullableInt32 `json:"quantity,omitempty"`
	StartsAt NullableTime `json:"starts_at,omitempty"`
}

// NewInlineSubscriptionItemUpdate instantiates a new InlineSubscriptionItemUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineSubscriptionItemUpdate() *InlineSubscriptionItemUpdate {
	this := InlineSubscriptionItemUpdate{}
	var delete bool = false
	this.Delete = &delete
	return &this
}

// NewInlineSubscriptionItemUpdateWithDefaults instantiates a new InlineSubscriptionItemUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineSubscriptionItemUpdateWithDefaults() *InlineSubscriptionItemUpdate {
	this := InlineSubscriptionItemUpdate{}
	var delete bool = false
	this.Delete = &delete
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineSubscriptionItemUpdate) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineSubscriptionItemUpdate) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *InlineSubscriptionItemUpdate) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *InlineSubscriptionItemUpdate) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *InlineSubscriptionItemUpdate) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *InlineSubscriptionItemUpdate) UnsetId() {
	o.Id.Unset()
}

// GetDelete returns the Delete field value if set, zero value otherwise.
func (o *InlineSubscriptionItemUpdate) GetDelete() bool {
	if o == nil || IsNil(o.Delete) {
		var ret bool
		return ret
	}
	return *o.Delete
}

// GetDeleteOk returns a tuple with the Delete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineSubscriptionItemUpdate) GetDeleteOk() (*bool, bool) {
	if o == nil || IsNil(o.Delete) {
		return nil, false
	}
	return o.Delete, true
}

// HasDelete returns a boolean if a field has been set.
func (o *InlineSubscriptionItemUpdate) HasDelete() bool {
	if o != nil && !IsNil(o.Delete) {
		return true
	}

	return false
}

// SetDelete gets a reference to the given bool and assigns it to the Delete field.
func (o *InlineSubscriptionItemUpdate) SetDelete(v bool) {
	o.Delete = &v
}

// GetAddAtPeriodEnd returns the AddAtPeriodEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineSubscriptionItemUpdate) GetAddAtPeriodEnd() bool {
	if o == nil || IsNil(o.AddAtPeriodEnd.Get()) {
		var ret bool
		return ret
	}
	return *o.AddAtPeriodEnd.Get()
}

// GetAddAtPeriodEndOk returns a tuple with the AddAtPeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineSubscriptionItemUpdate) GetAddAtPeriodEndOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddAtPeriodEnd.Get(), o.AddAtPeriodEnd.IsSet()
}

// HasAddAtPeriodEnd returns a boolean if a field has been set.
func (o *InlineSubscriptionItemUpdate) HasAddAtPeriodEnd() bool {
	if o != nil && o.AddAtPeriodEnd.IsSet() {
		return true
	}

	return false
}

// SetAddAtPeriodEnd gets a reference to the given NullableBool and assigns it to the AddAtPeriodEnd field.
func (o *InlineSubscriptionItemUpdate) SetAddAtPeriodEnd(v bool) {
	o.AddAtPeriodEnd.Set(&v)
}
// SetAddAtPeriodEndNil sets the value for AddAtPeriodEnd to be an explicit nil
func (o *InlineSubscriptionItemUpdate) SetAddAtPeriodEndNil() {
	o.AddAtPeriodEnd.Set(nil)
}

// UnsetAddAtPeriodEnd ensures that no value is present for AddAtPeriodEnd, not even an explicit nil
func (o *InlineSubscriptionItemUpdate) UnsetAddAtPeriodEnd() {
	o.AddAtPeriodEnd.Unset()
}

// GetDropAtEnd returns the DropAtEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineSubscriptionItemUpdate) GetDropAtEnd() bool {
	if o == nil || IsNil(o.DropAtEnd.Get()) {
		var ret bool
		return ret
	}
	return *o.DropAtEnd.Get()
}

// GetDropAtEndOk returns a tuple with the DropAtEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineSubscriptionItemUpdate) GetDropAtEndOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DropAtEnd.Get(), o.DropAtEnd.IsSet()
}

// HasDropAtEnd returns a boolean if a field has been set.
func (o *InlineSubscriptionItemUpdate) HasDropAtEnd() bool {
	if o != nil && o.DropAtEnd.IsSet() {
		return true
	}

	return false
}

// SetDropAtEnd gets a reference to the given NullableBool and assigns it to the DropAtEnd field.
func (o *InlineSubscriptionItemUpdate) SetDropAtEnd(v bool) {
	o.DropAtEnd.Set(&v)
}
// SetDropAtEndNil sets the value for DropAtEnd to be an explicit nil
func (o *InlineSubscriptionItemUpdate) SetDropAtEndNil() {
	o.DropAtEnd.Set(nil)
}

// UnsetDropAtEnd ensures that no value is present for DropAtEnd, not even an explicit nil
func (o *InlineSubscriptionItemUpdate) UnsetDropAtEnd() {
	o.DropAtEnd.Unset()
}

// GetPriceId returns the PriceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineSubscriptionItemUpdate) GetPriceId() string {
	if o == nil || IsNil(o.PriceId.Get()) {
		var ret string
		return ret
	}
	return *o.PriceId.Get()
}

// GetPriceIdOk returns a tuple with the PriceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineSubscriptionItemUpdate) GetPriceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceId.Get(), o.PriceId.IsSet()
}

// HasPriceId returns a boolean if a field has been set.
func (o *InlineSubscriptionItemUpdate) HasPriceId() bool {
	if o != nil && o.PriceId.IsSet() {
		return true
	}

	return false
}

// SetPriceId gets a reference to the given NullableString and assigns it to the PriceId field.
func (o *InlineSubscriptionItemUpdate) SetPriceId(v string) {
	o.PriceId.Set(&v)
}
// SetPriceIdNil sets the value for PriceId to be an explicit nil
func (o *InlineSubscriptionItemUpdate) SetPriceIdNil() {
	o.PriceId.Set(nil)
}

// UnsetPriceId ensures that no value is present for PriceId, not even an explicit nil
func (o *InlineSubscriptionItemUpdate) UnsetPriceId() {
	o.PriceId.Unset()
}

// GetQuantity returns the Quantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineSubscriptionItemUpdate) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity.Get()) {
		var ret int32
		return ret
	}
	return *o.Quantity.Get()
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineSubscriptionItemUpdate) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Quantity.Get(), o.Quantity.IsSet()
}

// HasQuantity returns a boolean if a field has been set.
func (o *InlineSubscriptionItemUpdate) HasQuantity() bool {
	if o != nil && o.Quantity.IsSet() {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given NullableInt32 and assigns it to the Quantity field.
func (o *InlineSubscriptionItemUpdate) SetQuantity(v int32) {
	o.Quantity.Set(&v)
}
// SetQuantityNil sets the value for Quantity to be an explicit nil
func (o *InlineSubscriptionItemUpdate) SetQuantityNil() {
	o.Quantity.Set(nil)
}

// UnsetQuantity ensures that no value is present for Quantity, not even an explicit nil
func (o *InlineSubscriptionItemUpdate) UnsetQuantity() {
	o.Quantity.Unset()
}

// GetStartsAt returns the StartsAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineSubscriptionItemUpdate) GetStartsAt() time.Time {
	if o == nil || IsNil(o.StartsAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartsAt.Get()
}

// GetStartsAtOk returns a tuple with the StartsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineSubscriptionItemUpdate) GetStartsAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartsAt.Get(), o.StartsAt.IsSet()
}

// HasStartsAt returns a boolean if a field has been set.
func (o *InlineSubscriptionItemUpdate) HasStartsAt() bool {
	if o != nil && o.StartsAt.IsSet() {
		return true
	}

	return false
}

// SetStartsAt gets a reference to the given NullableTime and assigns it to the StartsAt field.
func (o *InlineSubscriptionItemUpdate) SetStartsAt(v time.Time) {
	o.StartsAt.Set(&v)
}
// SetStartsAtNil sets the value for StartsAt to be an explicit nil
func (o *InlineSubscriptionItemUpdate) SetStartsAtNil() {
	o.StartsAt.Set(nil)
}

// UnsetStartsAt ensures that no value is present for StartsAt, not even an explicit nil
func (o *InlineSubscriptionItemUpdate) UnsetStartsAt() {
	o.StartsAt.Unset()
}

func (o InlineSubscriptionItemUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InlineSubscriptionItemUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.Delete) {
		toSerialize["delete"] = o.Delete
	}
	if o.AddAtPeriodEnd.IsSet() {
		toSerialize["add_at_period_end"] = o.AddAtPeriodEnd.Get()
	}
	if o.DropAtEnd.IsSet() {
		toSerialize["drop_at_end"] = o.DropAtEnd.Get()
	}
	if o.PriceId.IsSet() {
		toSerialize["price_id"] = o.PriceId.Get()
	}
	if o.Quantity.IsSet() {
		toSerialize["quantity"] = o.Quantity.Get()
	}
	if o.StartsAt.IsSet() {
		toSerialize["starts_at"] = o.StartsAt.Get()
	}
	return toSerialize, nil
}

type NullableInlineSubscriptionItemUpdate struct {
	value *InlineSubscriptionItemUpdate
	isSet bool
}

func (v NullableInlineSubscriptionItemUpdate) Get() *InlineSubscriptionItemUpdate {
	return v.value
}

func (v *NullableInlineSubscriptionItemUpdate) Set(val *InlineSubscriptionItemUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineSubscriptionItemUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineSubscriptionItemUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineSubscriptionItemUpdate(val *InlineSubscriptionItemUpdate) *NullableInlineSubscriptionItemUpdate {
	return &NullableInlineSubscriptionItemUpdate{value: val, isSet: true}
}

func (v NullableInlineSubscriptionItemUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineSubscriptionItemUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


