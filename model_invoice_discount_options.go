/*
OpenPay API

super charge your subscription management.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
)

// checks if the InvoiceDiscountOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceDiscountOptions{}

// InvoiceDiscountOptions struct for InvoiceDiscountOptions
type InvoiceDiscountOptions struct {
	Coupons []string `json:"coupons,omitempty"`
	Discount NullableString `json:"discount,omitempty"`
}

// NewInvoiceDiscountOptions instantiates a new InvoiceDiscountOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceDiscountOptions() *InvoiceDiscountOptions {
	this := InvoiceDiscountOptions{}
	return &this
}

// NewInvoiceDiscountOptionsWithDefaults instantiates a new InvoiceDiscountOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceDiscountOptionsWithDefaults() *InvoiceDiscountOptions {
	this := InvoiceDiscountOptions{}
	return &this
}

// GetCoupons returns the Coupons field value if set, zero value otherwise.
func (o *InvoiceDiscountOptions) GetCoupons() []string {
	if o == nil || IsNil(o.Coupons) {
		var ret []string
		return ret
	}
	return o.Coupons
}

// GetCouponsOk returns a tuple with the Coupons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceDiscountOptions) GetCouponsOk() ([]string, bool) {
	if o == nil || IsNil(o.Coupons) {
		return nil, false
	}
	return o.Coupons, true
}

// HasCoupons returns a boolean if a field has been set.
func (o *InvoiceDiscountOptions) HasCoupons() bool {
	if o != nil && !IsNil(o.Coupons) {
		return true
	}

	return false
}

// SetCoupons gets a reference to the given []string and assigns it to the Coupons field.
func (o *InvoiceDiscountOptions) SetCoupons(v []string) {
	o.Coupons = v
}

// GetDiscount returns the Discount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceDiscountOptions) GetDiscount() string {
	if o == nil || IsNil(o.Discount.Get()) {
		var ret string
		return ret
	}
	return *o.Discount.Get()
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceDiscountOptions) GetDiscountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Discount.Get(), o.Discount.IsSet()
}

// HasDiscount returns a boolean if a field has been set.
func (o *InvoiceDiscountOptions) HasDiscount() bool {
	if o != nil && o.Discount.IsSet() {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given NullableString and assigns it to the Discount field.
func (o *InvoiceDiscountOptions) SetDiscount(v string) {
	o.Discount.Set(&v)
}
// SetDiscountNil sets the value for Discount to be an explicit nil
func (o *InvoiceDiscountOptions) SetDiscountNil() {
	o.Discount.Set(nil)
}

// UnsetDiscount ensures that no value is present for Discount, not even an explicit nil
func (o *InvoiceDiscountOptions) UnsetDiscount() {
	o.Discount.Unset()
}

func (o InvoiceDiscountOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceDiscountOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Coupons) {
		toSerialize["coupons"] = o.Coupons
	}
	if o.Discount.IsSet() {
		toSerialize["discount"] = o.Discount.Get()
	}
	return toSerialize, nil
}

type NullableInvoiceDiscountOptions struct {
	value *InvoiceDiscountOptions
	isSet bool
}

func (v NullableInvoiceDiscountOptions) Get() *InvoiceDiscountOptions {
	return v.value
}

func (v *NullableInvoiceDiscountOptions) Set(val *InvoiceDiscountOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceDiscountOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceDiscountOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceDiscountOptions(val *InvoiceDiscountOptions) *NullableInvoiceDiscountOptions {
	return &NullableInvoiceDiscountOptions{value: val, isSet: true}
}

func (v NullableInvoiceDiscountOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceDiscountOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


