/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the InvoiceExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceExternal{}

// InvoiceExternal struct for InvoiceExternal
type InvoiceExternal struct {
	// Unique identifier of the account.
	AccountId string `json:"account_id"`
	// Amount applied from customer balance either from credit or debit. It is in atomic units (in USD this is cents).
	AppliedBalanceAmountAtom int32 `json:"applied_balance_amount_atom"`
	// Indicates the reason why the invoice was created.
	BillingReason BillingReasonEnum `json:"billing_reason"`
	// Indicates method of payment collection of the invoice.
	CollectionMethod CollectionMethodEnum `json:"collection_method"`
	// The history of the status updates.
	Comments []InvoiceComment `json:"comments,omitempty"`
	// DateTime at which the object was created, in 'ISO 8601' format.
	CreatedAt time.Time `json:"created_at"`
	// List of unique identifiers of all the credit notes issued for this invoice.
	CreditNoteIds []*string `json:"credit_note_ids,omitempty"`
	// Three-letter ISO currency code, in lowercase.
	Currency CurrencyEnum `json:"currency"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Customer NullableCustomerExternal `json:"customer,omitempty"`
	// Unique identifier of the customer.
	CustomerId string `json:"customer_id"`
	// The tax ID settings of the customer.
	CustomerTaxIds []TaxIdSetting `json:"customer_tax_ids,omitempty"`
	DefaultPaymentMethodId NullableString `json:"default_payment_method_id,omitempty"`
	Description NullableString `json:"description,omitempty"`
	// The discounts applied to the invoice.
	Discounts []DiscountExternal `json:"discounts,omitempty"`
	// Final amount due at this time for this invoice. It isin atomic units (in USD this is cents).
	DueAmountAtom int32 `json:"due_amount_atom"`
	// Due date to pay the invoice.
	DueDate time.Time `json:"due_date"`
	// Whether invoice should be sent to the customer upon finalizing the invoice
	EmailInvoiceOnFinalization *bool `json:"email_invoice_on_finalization,omitempty"`
	HostedInvoiceUrl NullableString `json:"hosted_invoice_url,omitempty"`
	// Unique identifier of the invoice.
	Id string `json:"id"`
	// Invoice number
	InvoiceNumber int32 `json:"invoice_number"`
	// The URL for the Invoice PDF
	InvoicePdfUrl string `json:"invoice_pdf_url"`
	// If true, indicates that this object has been deleted
	IsDeleted *bool `json:"is_deleted,omitempty"`
	// Whether this is the first invoice for a trial subscription.
	IsInitialInvoiceForTrialSub bool `json:"is_initial_invoice_for_trial_sub"`
	LatestPaymentAttemptFailureMessage NullableString `json:"latest_payment_attempt_failure_message,omitempty"`
	LatestPaymentIntentId NullableString `json:"latest_payment_intent_id,omitempty"`
	// List of individual line items that make up the invoice.
	Lines []InvoiceItemExternal `json:"lines"`
	// The tax ID settings of the merchant.
	MerchantTaxIds []MerchantTaxIdSetting `json:"merchant_tax_ids,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Number of days the customer has to pay the invoice, from 0 to 365, where -1 indicates due immediately.
	NetD *int32 `json:"net_d,omitempty"`
	Object *ObjectName `json:"object,omitempty"`
	// The amount that was paid in atomic units (in USD this is cents).
	PaidAmountAtom int32 `json:"paid_amount_atom"`
	PaidAt NullableTime `json:"paid_at,omitempty"`
	PaidOutOfBand NullableBool `json:"paid_out_of_band"`
	// End of the usage period during which invoice_items were added to this invoice. It is in 'ISO 8601' format.
	PeriodEnd time.Time `json:"period_end"`
	// Start of the usage period during which invoice_items were added to this invoice. It is in 'ISO 8601' format.
	PeriodStart time.Time `json:"period_start"`
	PostPaymentCreditNotesAmount NullableInt32 `json:"post_payment_credit_notes_amount,omitempty"`
	PrePaymentCreditNotesAmount NullableInt32 `json:"pre_payment_credit_notes_amount,omitempty"`
	// Total fee amount charged for the payment provider type in atomic units.
	ProviderTypeFeeAmountAtom int32 `json:"provider_type_fee_amount_atom"`
	// The URL for the Receipt PDF
	ReceiptPdfUrl string `json:"receipt_pdf_url"`
	// Ids of refund object for this invoice.
	RefundIds []string `json:"refund_ids"`
	RefundedAmountAtom NullableInt32 `json:"refunded_amount_atom"`
	// Remaining amount of the invoice to be paid. It is in atomic units (in USD this is cents).
	RemainingAmountAtom int32 `json:"remaining_amount_atom"`
	// Status of the invoice.
	Status InvoiceStatusEnum `json:"status"`
	Subscription NullableSubscriptionExternal `json:"subscription,omitempty"`
	SubscriptionId NullableString `json:"subscription_id,omitempty"`
	// Total tax amount in atomic units.
	TaxAmountAtom int32 `json:"tax_amount_atom"`
	TaxProcessorUpdatedAt NullableTime `json:"tax_processor_updated_at,omitempty"`
	// Total amount of the invoice. Sum of invoice_items' total amount. It is in atomic units (in USD this is cents).
	TotalAmountAtom int32 `json:"total_amount_atom"`
	// The aggregate amount_atoms calculated per discount across all line items.
	TotalDiscountAmountAtoms []InvoiceDiscountAmountsExternal `json:"total_discount_amount_atoms,omitempty"`
	// Total amount excluding taxes. It is in atomic units (in USD this is cents).
	TotalExcludingTaxesAmountAtom int32 `json:"total_excluding_taxes_amount_atom"`
	// DateTime at which the object was updated, in 'ISO 8601' format.
	UpdatedAt time.Time `json:"updated_at"`
	AdditionalProperties map[string]interface{}
}

type _InvoiceExternal InvoiceExternal

// NewInvoiceExternal instantiates a new InvoiceExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceExternal(accountId string, appliedBalanceAmountAtom int32, billingReason BillingReasonEnum, collectionMethod CollectionMethodEnum, createdAt time.Time, currency CurrencyEnum, customerId string, dueAmountAtom int32, dueDate time.Time, id string, invoiceNumber int32, invoicePdfUrl string, isInitialInvoiceForTrialSub bool, lines []InvoiceItemExternal, paidAmountAtom int32, paidOutOfBand NullableBool, periodEnd time.Time, periodStart time.Time, providerTypeFeeAmountAtom int32, receiptPdfUrl string, refundIds []string, refundedAmountAtom NullableInt32, remainingAmountAtom int32, status InvoiceStatusEnum, taxAmountAtom int32, totalAmountAtom int32, totalExcludingTaxesAmountAtom int32, updatedAt time.Time) *InvoiceExternal {
	this := InvoiceExternal{}
	this.AccountId = accountId
	this.AppliedBalanceAmountAtom = appliedBalanceAmountAtom
	this.BillingReason = billingReason
	this.CollectionMethod = collectionMethod
	this.CreatedAt = createdAt
	this.Currency = currency
	this.CustomerId = customerId
	this.DueAmountAtom = dueAmountAtom
	this.DueDate = dueDate
	var emailInvoiceOnFinalization bool = false
	this.EmailInvoiceOnFinalization = &emailInvoiceOnFinalization
	this.Id = id
	this.InvoiceNumber = invoiceNumber
	this.InvoicePdfUrl = invoicePdfUrl
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	this.IsInitialInvoiceForTrialSub = isInitialInvoiceForTrialSub
	this.Lines = lines
	var netD int32 = -1
	this.NetD = &netD
	this.PaidAmountAtom = paidAmountAtom
	this.PaidOutOfBand = paidOutOfBand
	this.PeriodEnd = periodEnd
	this.PeriodStart = periodStart
	this.ProviderTypeFeeAmountAtom = providerTypeFeeAmountAtom
	this.ReceiptPdfUrl = receiptPdfUrl
	this.RefundIds = refundIds
	this.RefundedAmountAtom = refundedAmountAtom
	this.RemainingAmountAtom = remainingAmountAtom
	this.Status = status
	this.TaxAmountAtom = taxAmountAtom
	this.TotalAmountAtom = totalAmountAtom
	this.TotalExcludingTaxesAmountAtom = totalExcludingTaxesAmountAtom
	this.UpdatedAt = updatedAt
	return &this
}

// NewInvoiceExternalWithDefaults instantiates a new InvoiceExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceExternalWithDefaults() *InvoiceExternal {
	this := InvoiceExternal{}
	var emailInvoiceOnFinalization bool = false
	this.EmailInvoiceOnFinalization = &emailInvoiceOnFinalization
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	var netD int32 = -1
	this.NetD = &netD
	return &this
}

// GetAccountId returns the AccountId field value
func (o *InvoiceExternal) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *InvoiceExternal) SetAccountId(v string) {
	o.AccountId = v
}

// GetAppliedBalanceAmountAtom returns the AppliedBalanceAmountAtom field value
func (o *InvoiceExternal) GetAppliedBalanceAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AppliedBalanceAmountAtom
}

// GetAppliedBalanceAmountAtomOk returns a tuple with the AppliedBalanceAmountAtom field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetAppliedBalanceAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppliedBalanceAmountAtom, true
}

// SetAppliedBalanceAmountAtom sets field value
func (o *InvoiceExternal) SetAppliedBalanceAmountAtom(v int32) {
	o.AppliedBalanceAmountAtom = v
}

// GetBillingReason returns the BillingReason field value
func (o *InvoiceExternal) GetBillingReason() BillingReasonEnum {
	if o == nil {
		var ret BillingReasonEnum
		return ret
	}

	return o.BillingReason
}

// GetBillingReasonOk returns a tuple with the BillingReason field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetBillingReasonOk() (*BillingReasonEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingReason, true
}

// SetBillingReason sets field value
func (o *InvoiceExternal) SetBillingReason(v BillingReasonEnum) {
	o.BillingReason = v
}

// GetCollectionMethod returns the CollectionMethod field value
func (o *InvoiceExternal) GetCollectionMethod() CollectionMethodEnum {
	if o == nil {
		var ret CollectionMethodEnum
		return ret
	}

	return o.CollectionMethod
}

// GetCollectionMethodOk returns a tuple with the CollectionMethod field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetCollectionMethodOk() (*CollectionMethodEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionMethod, true
}

// SetCollectionMethod sets field value
func (o *InvoiceExternal) SetCollectionMethod(v CollectionMethodEnum) {
	o.CollectionMethod = v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *InvoiceExternal) GetComments() []InvoiceComment {
	if o == nil || IsNil(o.Comments) {
		var ret []InvoiceComment
		return ret
	}
	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetCommentsOk() ([]InvoiceComment, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *InvoiceExternal) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given []InvoiceComment and assigns it to the Comments field.
func (o *InvoiceExternal) SetComments(v []InvoiceComment) {
	o.Comments = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *InvoiceExternal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *InvoiceExternal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreditNoteIds returns the CreditNoteIds field value if set, zero value otherwise.
func (o *InvoiceExternal) GetCreditNoteIds() []*string {
	if o == nil || IsNil(o.CreditNoteIds) {
		var ret []*string
		return ret
	}
	return o.CreditNoteIds
}

// GetCreditNoteIdsOk returns a tuple with the CreditNoteIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetCreditNoteIdsOk() ([]*string, bool) {
	if o == nil || IsNil(o.CreditNoteIds) {
		return nil, false
	}
	return o.CreditNoteIds, true
}

// HasCreditNoteIds returns a boolean if a field has been set.
func (o *InvoiceExternal) HasCreditNoteIds() bool {
	if o != nil && !IsNil(o.CreditNoteIds) {
		return true
	}

	return false
}

// SetCreditNoteIds gets a reference to the given []*string and assigns it to the CreditNoteIds field.
func (o *InvoiceExternal) SetCreditNoteIds(v []*string) {
	o.CreditNoteIds = v
}

// GetCurrency returns the Currency field value
func (o *InvoiceExternal) GetCurrency() CurrencyEnum {
	if o == nil {
		var ret CurrencyEnum
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetCurrencyOk() (*CurrencyEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *InvoiceExternal) SetCurrency(v CurrencyEnum) {
	o.Currency = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceExternal) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *InvoiceExternal) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *InvoiceExternal) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetCustomer returns the Customer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceExternal) GetCustomer() CustomerExternal {
	if o == nil || IsNil(o.Customer.Get()) {
		var ret CustomerExternal
		return ret
	}
	return *o.Customer.Get()
}

// GetCustomerOk returns a tuple with the Customer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetCustomerOk() (*CustomerExternal, bool) {
	if o == nil {
		return nil, false
	}
	return o.Customer.Get(), o.Customer.IsSet()
}

// HasCustomer returns a boolean if a field has been set.
func (o *InvoiceExternal) HasCustomer() bool {
	if o != nil && o.Customer.IsSet() {
		return true
	}

	return false
}

// SetCustomer gets a reference to the given NullableCustomerExternal and assigns it to the Customer field.
func (o *InvoiceExternal) SetCustomer(v CustomerExternal) {
	o.Customer.Set(&v)
}
// SetCustomerNil sets the value for Customer to be an explicit nil
func (o *InvoiceExternal) SetCustomerNil() {
	o.Customer.Set(nil)
}

// UnsetCustomer ensures that no value is present for Customer, not even an explicit nil
func (o *InvoiceExternal) UnsetCustomer() {
	o.Customer.Unset()
}

// GetCustomerId returns the CustomerId field value
func (o *InvoiceExternal) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *InvoiceExternal) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetCustomerTaxIds returns the CustomerTaxIds field value if set, zero value otherwise.
func (o *InvoiceExternal) GetCustomerTaxIds() []TaxIdSetting {
	if o == nil || IsNil(o.CustomerTaxIds) {
		var ret []TaxIdSetting
		return ret
	}
	return o.CustomerTaxIds
}

// GetCustomerTaxIdsOk returns a tuple with the CustomerTaxIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetCustomerTaxIdsOk() ([]TaxIdSetting, bool) {
	if o == nil || IsNil(o.CustomerTaxIds) {
		return nil, false
	}
	return o.CustomerTaxIds, true
}

// HasCustomerTaxIds returns a boolean if a field has been set.
func (o *InvoiceExternal) HasCustomerTaxIds() bool {
	if o != nil && !IsNil(o.CustomerTaxIds) {
		return true
	}

	return false
}

// SetCustomerTaxIds gets a reference to the given []TaxIdSetting and assigns it to the CustomerTaxIds field.
func (o *InvoiceExternal) SetCustomerTaxIds(v []TaxIdSetting) {
	o.CustomerTaxIds = v
}

// GetDefaultPaymentMethodId returns the DefaultPaymentMethodId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceExternal) GetDefaultPaymentMethodId() string {
	if o == nil || IsNil(o.DefaultPaymentMethodId.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultPaymentMethodId.Get()
}

// GetDefaultPaymentMethodIdOk returns a tuple with the DefaultPaymentMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetDefaultPaymentMethodIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultPaymentMethodId.Get(), o.DefaultPaymentMethodId.IsSet()
}

// HasDefaultPaymentMethodId returns a boolean if a field has been set.
func (o *InvoiceExternal) HasDefaultPaymentMethodId() bool {
	if o != nil && o.DefaultPaymentMethodId.IsSet() {
		return true
	}

	return false
}

// SetDefaultPaymentMethodId gets a reference to the given NullableString and assigns it to the DefaultPaymentMethodId field.
func (o *InvoiceExternal) SetDefaultPaymentMethodId(v string) {
	o.DefaultPaymentMethodId.Set(&v)
}
// SetDefaultPaymentMethodIdNil sets the value for DefaultPaymentMethodId to be an explicit nil
func (o *InvoiceExternal) SetDefaultPaymentMethodIdNil() {
	o.DefaultPaymentMethodId.Set(nil)
}

// UnsetDefaultPaymentMethodId ensures that no value is present for DefaultPaymentMethodId, not even an explicit nil
func (o *InvoiceExternal) UnsetDefaultPaymentMethodId() {
	o.DefaultPaymentMethodId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceExternal) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *InvoiceExternal) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *InvoiceExternal) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *InvoiceExternal) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *InvoiceExternal) UnsetDescription() {
	o.Description.Unset()
}

// GetDiscounts returns the Discounts field value if set, zero value otherwise.
func (o *InvoiceExternal) GetDiscounts() []DiscountExternal {
	if o == nil || IsNil(o.Discounts) {
		var ret []DiscountExternal
		return ret
	}
	return o.Discounts
}

// GetDiscountsOk returns a tuple with the Discounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetDiscountsOk() ([]DiscountExternal, bool) {
	if o == nil || IsNil(o.Discounts) {
		return nil, false
	}
	return o.Discounts, true
}

// HasDiscounts returns a boolean if a field has been set.
func (o *InvoiceExternal) HasDiscounts() bool {
	if o != nil && !IsNil(o.Discounts) {
		return true
	}

	return false
}

// SetDiscounts gets a reference to the given []DiscountExternal and assigns it to the Discounts field.
func (o *InvoiceExternal) SetDiscounts(v []DiscountExternal) {
	o.Discounts = v
}

// GetDueAmountAtom returns the DueAmountAtom field value
func (o *InvoiceExternal) GetDueAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DueAmountAtom
}

// GetDueAmountAtomOk returns a tuple with the DueAmountAtom field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetDueAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DueAmountAtom, true
}

// SetDueAmountAtom sets field value
func (o *InvoiceExternal) SetDueAmountAtom(v int32) {
	o.DueAmountAtom = v
}

// GetDueDate returns the DueDate field value
func (o *InvoiceExternal) GetDueDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetDueDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DueDate, true
}

// SetDueDate sets field value
func (o *InvoiceExternal) SetDueDate(v time.Time) {
	o.DueDate = v
}

// GetEmailInvoiceOnFinalization returns the EmailInvoiceOnFinalization field value if set, zero value otherwise.
func (o *InvoiceExternal) GetEmailInvoiceOnFinalization() bool {
	if o == nil || IsNil(o.EmailInvoiceOnFinalization) {
		var ret bool
		return ret
	}
	return *o.EmailInvoiceOnFinalization
}

// GetEmailInvoiceOnFinalizationOk returns a tuple with the EmailInvoiceOnFinalization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetEmailInvoiceOnFinalizationOk() (*bool, bool) {
	if o == nil || IsNil(o.EmailInvoiceOnFinalization) {
		return nil, false
	}
	return o.EmailInvoiceOnFinalization, true
}

// HasEmailInvoiceOnFinalization returns a boolean if a field has been set.
func (o *InvoiceExternal) HasEmailInvoiceOnFinalization() bool {
	if o != nil && !IsNil(o.EmailInvoiceOnFinalization) {
		return true
	}

	return false
}

// SetEmailInvoiceOnFinalization gets a reference to the given bool and assigns it to the EmailInvoiceOnFinalization field.
func (o *InvoiceExternal) SetEmailInvoiceOnFinalization(v bool) {
	o.EmailInvoiceOnFinalization = &v
}

// GetHostedInvoiceUrl returns the HostedInvoiceUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceExternal) GetHostedInvoiceUrl() string {
	if o == nil || IsNil(o.HostedInvoiceUrl.Get()) {
		var ret string
		return ret
	}
	return *o.HostedInvoiceUrl.Get()
}

// GetHostedInvoiceUrlOk returns a tuple with the HostedInvoiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetHostedInvoiceUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HostedInvoiceUrl.Get(), o.HostedInvoiceUrl.IsSet()
}

// HasHostedInvoiceUrl returns a boolean if a field has been set.
func (o *InvoiceExternal) HasHostedInvoiceUrl() bool {
	if o != nil && o.HostedInvoiceUrl.IsSet() {
		return true
	}

	return false
}

// SetHostedInvoiceUrl gets a reference to the given NullableString and assigns it to the HostedInvoiceUrl field.
func (o *InvoiceExternal) SetHostedInvoiceUrl(v string) {
	o.HostedInvoiceUrl.Set(&v)
}
// SetHostedInvoiceUrlNil sets the value for HostedInvoiceUrl to be an explicit nil
func (o *InvoiceExternal) SetHostedInvoiceUrlNil() {
	o.HostedInvoiceUrl.Set(nil)
}

// UnsetHostedInvoiceUrl ensures that no value is present for HostedInvoiceUrl, not even an explicit nil
func (o *InvoiceExternal) UnsetHostedInvoiceUrl() {
	o.HostedInvoiceUrl.Unset()
}

// GetId returns the Id field value
func (o *InvoiceExternal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InvoiceExternal) SetId(v string) {
	o.Id = v
}

// GetInvoiceNumber returns the InvoiceNumber field value
func (o *InvoiceExternal) GetInvoiceNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InvoiceNumber
}

// GetInvoiceNumberOk returns a tuple with the InvoiceNumber field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetInvoiceNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceNumber, true
}

// SetInvoiceNumber sets field value
func (o *InvoiceExternal) SetInvoiceNumber(v int32) {
	o.InvoiceNumber = v
}

// GetInvoicePdfUrl returns the InvoicePdfUrl field value
func (o *InvoiceExternal) GetInvoicePdfUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvoicePdfUrl
}

// GetInvoicePdfUrlOk returns a tuple with the InvoicePdfUrl field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetInvoicePdfUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoicePdfUrl, true
}

// SetInvoicePdfUrl sets field value
func (o *InvoiceExternal) SetInvoicePdfUrl(v string) {
	o.InvoicePdfUrl = v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *InvoiceExternal) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *InvoiceExternal) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *InvoiceExternal) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetIsInitialInvoiceForTrialSub returns the IsInitialInvoiceForTrialSub field value
func (o *InvoiceExternal) GetIsInitialInvoiceForTrialSub() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsInitialInvoiceForTrialSub
}

// GetIsInitialInvoiceForTrialSubOk returns a tuple with the IsInitialInvoiceForTrialSub field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetIsInitialInvoiceForTrialSubOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsInitialInvoiceForTrialSub, true
}

// SetIsInitialInvoiceForTrialSub sets field value
func (o *InvoiceExternal) SetIsInitialInvoiceForTrialSub(v bool) {
	o.IsInitialInvoiceForTrialSub = v
}

// GetLatestPaymentAttemptFailureMessage returns the LatestPaymentAttemptFailureMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceExternal) GetLatestPaymentAttemptFailureMessage() string {
	if o == nil || IsNil(o.LatestPaymentAttemptFailureMessage.Get()) {
		var ret string
		return ret
	}
	return *o.LatestPaymentAttemptFailureMessage.Get()
}

// GetLatestPaymentAttemptFailureMessageOk returns a tuple with the LatestPaymentAttemptFailureMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetLatestPaymentAttemptFailureMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestPaymentAttemptFailureMessage.Get(), o.LatestPaymentAttemptFailureMessage.IsSet()
}

// HasLatestPaymentAttemptFailureMessage returns a boolean if a field has been set.
func (o *InvoiceExternal) HasLatestPaymentAttemptFailureMessage() bool {
	if o != nil && o.LatestPaymentAttemptFailureMessage.IsSet() {
		return true
	}

	return false
}

// SetLatestPaymentAttemptFailureMessage gets a reference to the given NullableString and assigns it to the LatestPaymentAttemptFailureMessage field.
func (o *InvoiceExternal) SetLatestPaymentAttemptFailureMessage(v string) {
	o.LatestPaymentAttemptFailureMessage.Set(&v)
}
// SetLatestPaymentAttemptFailureMessageNil sets the value for LatestPaymentAttemptFailureMessage to be an explicit nil
func (o *InvoiceExternal) SetLatestPaymentAttemptFailureMessageNil() {
	o.LatestPaymentAttemptFailureMessage.Set(nil)
}

// UnsetLatestPaymentAttemptFailureMessage ensures that no value is present for LatestPaymentAttemptFailureMessage, not even an explicit nil
func (o *InvoiceExternal) UnsetLatestPaymentAttemptFailureMessage() {
	o.LatestPaymentAttemptFailureMessage.Unset()
}

// GetLatestPaymentIntentId returns the LatestPaymentIntentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceExternal) GetLatestPaymentIntentId() string {
	if o == nil || IsNil(o.LatestPaymentIntentId.Get()) {
		var ret string
		return ret
	}
	return *o.LatestPaymentIntentId.Get()
}

// GetLatestPaymentIntentIdOk returns a tuple with the LatestPaymentIntentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetLatestPaymentIntentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LatestPaymentIntentId.Get(), o.LatestPaymentIntentId.IsSet()
}

// HasLatestPaymentIntentId returns a boolean if a field has been set.
func (o *InvoiceExternal) HasLatestPaymentIntentId() bool {
	if o != nil && o.LatestPaymentIntentId.IsSet() {
		return true
	}

	return false
}

// SetLatestPaymentIntentId gets a reference to the given NullableString and assigns it to the LatestPaymentIntentId field.
func (o *InvoiceExternal) SetLatestPaymentIntentId(v string) {
	o.LatestPaymentIntentId.Set(&v)
}
// SetLatestPaymentIntentIdNil sets the value for LatestPaymentIntentId to be an explicit nil
func (o *InvoiceExternal) SetLatestPaymentIntentIdNil() {
	o.LatestPaymentIntentId.Set(nil)
}

// UnsetLatestPaymentIntentId ensures that no value is present for LatestPaymentIntentId, not even an explicit nil
func (o *InvoiceExternal) UnsetLatestPaymentIntentId() {
	o.LatestPaymentIntentId.Unset()
}

// GetLines returns the Lines field value
func (o *InvoiceExternal) GetLines() []InvoiceItemExternal {
	if o == nil {
		var ret []InvoiceItemExternal
		return ret
	}

	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetLinesOk() ([]InvoiceItemExternal, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lines, true
}

// SetLines sets field value
func (o *InvoiceExternal) SetLines(v []InvoiceItemExternal) {
	o.Lines = v
}

// GetMerchantTaxIds returns the MerchantTaxIds field value if set, zero value otherwise.
func (o *InvoiceExternal) GetMerchantTaxIds() []MerchantTaxIdSetting {
	if o == nil || IsNil(o.MerchantTaxIds) {
		var ret []MerchantTaxIdSetting
		return ret
	}
	return o.MerchantTaxIds
}

// GetMerchantTaxIdsOk returns a tuple with the MerchantTaxIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetMerchantTaxIdsOk() ([]MerchantTaxIdSetting, bool) {
	if o == nil || IsNil(o.MerchantTaxIds) {
		return nil, false
	}
	return o.MerchantTaxIds, true
}

// HasMerchantTaxIds returns a boolean if a field has been set.
func (o *InvoiceExternal) HasMerchantTaxIds() bool {
	if o != nil && !IsNil(o.MerchantTaxIds) {
		return true
	}

	return false
}

// SetMerchantTaxIds gets a reference to the given []MerchantTaxIdSetting and assigns it to the MerchantTaxIds field.
func (o *InvoiceExternal) SetMerchantTaxIds(v []MerchantTaxIdSetting) {
	o.MerchantTaxIds = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceExternal) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *InvoiceExternal) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *InvoiceExternal) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetNetD returns the NetD field value if set, zero value otherwise.
func (o *InvoiceExternal) GetNetD() int32 {
	if o == nil || IsNil(o.NetD) {
		var ret int32
		return ret
	}
	return *o.NetD
}

// GetNetDOk returns a tuple with the NetD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetNetDOk() (*int32, bool) {
	if o == nil || IsNil(o.NetD) {
		return nil, false
	}
	return o.NetD, true
}

// HasNetD returns a boolean if a field has been set.
func (o *InvoiceExternal) HasNetD() bool {
	if o != nil && !IsNil(o.NetD) {
		return true
	}

	return false
}

// SetNetD gets a reference to the given int32 and assigns it to the NetD field.
func (o *InvoiceExternal) SetNetD(v int32) {
	o.NetD = &v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *InvoiceExternal) GetObject() ObjectName {
	if o == nil || IsNil(o.Object) {
		var ret ObjectName
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetObjectOk() (*ObjectName, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *InvoiceExternal) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given ObjectName and assigns it to the Object field.
func (o *InvoiceExternal) SetObject(v ObjectName) {
	o.Object = &v
}

// GetPaidAmountAtom returns the PaidAmountAtom field value
func (o *InvoiceExternal) GetPaidAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PaidAmountAtom
}

// GetPaidAmountAtomOk returns a tuple with the PaidAmountAtom field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetPaidAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaidAmountAtom, true
}

// SetPaidAmountAtom sets field value
func (o *InvoiceExternal) SetPaidAmountAtom(v int32) {
	o.PaidAmountAtom = v
}

// GetPaidAt returns the PaidAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceExternal) GetPaidAt() time.Time {
	if o == nil || IsNil(o.PaidAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PaidAt.Get()
}

// GetPaidAtOk returns a tuple with the PaidAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetPaidAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaidAt.Get(), o.PaidAt.IsSet()
}

// HasPaidAt returns a boolean if a field has been set.
func (o *InvoiceExternal) HasPaidAt() bool {
	if o != nil && o.PaidAt.IsSet() {
		return true
	}

	return false
}

// SetPaidAt gets a reference to the given NullableTime and assigns it to the PaidAt field.
func (o *InvoiceExternal) SetPaidAt(v time.Time) {
	o.PaidAt.Set(&v)
}
// SetPaidAtNil sets the value for PaidAt to be an explicit nil
func (o *InvoiceExternal) SetPaidAtNil() {
	o.PaidAt.Set(nil)
}

// UnsetPaidAt ensures that no value is present for PaidAt, not even an explicit nil
func (o *InvoiceExternal) UnsetPaidAt() {
	o.PaidAt.Unset()
}

// GetPaidOutOfBand returns the PaidOutOfBand field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *InvoiceExternal) GetPaidOutOfBand() bool {
	if o == nil || o.PaidOutOfBand.Get() == nil {
		var ret bool
		return ret
	}

	return *o.PaidOutOfBand.Get()
}

// GetPaidOutOfBandOk returns a tuple with the PaidOutOfBand field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetPaidOutOfBandOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaidOutOfBand.Get(), o.PaidOutOfBand.IsSet()
}

// SetPaidOutOfBand sets field value
func (o *InvoiceExternal) SetPaidOutOfBand(v bool) {
	o.PaidOutOfBand.Set(&v)
}

// GetPeriodEnd returns the PeriodEnd field value
func (o *InvoiceExternal) GetPeriodEnd() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.PeriodEnd
}

// GetPeriodEndOk returns a tuple with the PeriodEnd field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetPeriodEndOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PeriodEnd, true
}

// SetPeriodEnd sets field value
func (o *InvoiceExternal) SetPeriodEnd(v time.Time) {
	o.PeriodEnd = v
}

// GetPeriodStart returns the PeriodStart field value
func (o *InvoiceExternal) GetPeriodStart() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.PeriodStart
}

// GetPeriodStartOk returns a tuple with the PeriodStart field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetPeriodStartOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PeriodStart, true
}

// SetPeriodStart sets field value
func (o *InvoiceExternal) SetPeriodStart(v time.Time) {
	o.PeriodStart = v
}

// GetPostPaymentCreditNotesAmount returns the PostPaymentCreditNotesAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceExternal) GetPostPaymentCreditNotesAmount() int32 {
	if o == nil || IsNil(o.PostPaymentCreditNotesAmount.Get()) {
		var ret int32
		return ret
	}
	return *o.PostPaymentCreditNotesAmount.Get()
}

// GetPostPaymentCreditNotesAmountOk returns a tuple with the PostPaymentCreditNotesAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetPostPaymentCreditNotesAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostPaymentCreditNotesAmount.Get(), o.PostPaymentCreditNotesAmount.IsSet()
}

// HasPostPaymentCreditNotesAmount returns a boolean if a field has been set.
func (o *InvoiceExternal) HasPostPaymentCreditNotesAmount() bool {
	if o != nil && o.PostPaymentCreditNotesAmount.IsSet() {
		return true
	}

	return false
}

// SetPostPaymentCreditNotesAmount gets a reference to the given NullableInt32 and assigns it to the PostPaymentCreditNotesAmount field.
func (o *InvoiceExternal) SetPostPaymentCreditNotesAmount(v int32) {
	o.PostPaymentCreditNotesAmount.Set(&v)
}
// SetPostPaymentCreditNotesAmountNil sets the value for PostPaymentCreditNotesAmount to be an explicit nil
func (o *InvoiceExternal) SetPostPaymentCreditNotesAmountNil() {
	o.PostPaymentCreditNotesAmount.Set(nil)
}

// UnsetPostPaymentCreditNotesAmount ensures that no value is present for PostPaymentCreditNotesAmount, not even an explicit nil
func (o *InvoiceExternal) UnsetPostPaymentCreditNotesAmount() {
	o.PostPaymentCreditNotesAmount.Unset()
}

// GetPrePaymentCreditNotesAmount returns the PrePaymentCreditNotesAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceExternal) GetPrePaymentCreditNotesAmount() int32 {
	if o == nil || IsNil(o.PrePaymentCreditNotesAmount.Get()) {
		var ret int32
		return ret
	}
	return *o.PrePaymentCreditNotesAmount.Get()
}

// GetPrePaymentCreditNotesAmountOk returns a tuple with the PrePaymentCreditNotesAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetPrePaymentCreditNotesAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrePaymentCreditNotesAmount.Get(), o.PrePaymentCreditNotesAmount.IsSet()
}

// HasPrePaymentCreditNotesAmount returns a boolean if a field has been set.
func (o *InvoiceExternal) HasPrePaymentCreditNotesAmount() bool {
	if o != nil && o.PrePaymentCreditNotesAmount.IsSet() {
		return true
	}

	return false
}

// SetPrePaymentCreditNotesAmount gets a reference to the given NullableInt32 and assigns it to the PrePaymentCreditNotesAmount field.
func (o *InvoiceExternal) SetPrePaymentCreditNotesAmount(v int32) {
	o.PrePaymentCreditNotesAmount.Set(&v)
}
// SetPrePaymentCreditNotesAmountNil sets the value for PrePaymentCreditNotesAmount to be an explicit nil
func (o *InvoiceExternal) SetPrePaymentCreditNotesAmountNil() {
	o.PrePaymentCreditNotesAmount.Set(nil)
}

// UnsetPrePaymentCreditNotesAmount ensures that no value is present for PrePaymentCreditNotesAmount, not even an explicit nil
func (o *InvoiceExternal) UnsetPrePaymentCreditNotesAmount() {
	o.PrePaymentCreditNotesAmount.Unset()
}

// GetProviderTypeFeeAmountAtom returns the ProviderTypeFeeAmountAtom field value
func (o *InvoiceExternal) GetProviderTypeFeeAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProviderTypeFeeAmountAtom
}

// GetProviderTypeFeeAmountAtomOk returns a tuple with the ProviderTypeFeeAmountAtom field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetProviderTypeFeeAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderTypeFeeAmountAtom, true
}

// SetProviderTypeFeeAmountAtom sets field value
func (o *InvoiceExternal) SetProviderTypeFeeAmountAtom(v int32) {
	o.ProviderTypeFeeAmountAtom = v
}

// GetReceiptPdfUrl returns the ReceiptPdfUrl field value
func (o *InvoiceExternal) GetReceiptPdfUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReceiptPdfUrl
}

// GetReceiptPdfUrlOk returns a tuple with the ReceiptPdfUrl field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetReceiptPdfUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceiptPdfUrl, true
}

// SetReceiptPdfUrl sets field value
func (o *InvoiceExternal) SetReceiptPdfUrl(v string) {
	o.ReceiptPdfUrl = v
}

// GetRefundIds returns the RefundIds field value
func (o *InvoiceExternal) GetRefundIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RefundIds
}

// GetRefundIdsOk returns a tuple with the RefundIds field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetRefundIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RefundIds, true
}

// SetRefundIds sets field value
func (o *InvoiceExternal) SetRefundIds(v []string) {
	o.RefundIds = v
}

// GetRefundedAmountAtom returns the RefundedAmountAtom field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *InvoiceExternal) GetRefundedAmountAtom() int32 {
	if o == nil || o.RefundedAmountAtom.Get() == nil {
		var ret int32
		return ret
	}

	return *o.RefundedAmountAtom.Get()
}

// GetRefundedAmountAtomOk returns a tuple with the RefundedAmountAtom field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetRefundedAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RefundedAmountAtom.Get(), o.RefundedAmountAtom.IsSet()
}

// SetRefundedAmountAtom sets field value
func (o *InvoiceExternal) SetRefundedAmountAtom(v int32) {
	o.RefundedAmountAtom.Set(&v)
}

// GetRemainingAmountAtom returns the RemainingAmountAtom field value
func (o *InvoiceExternal) GetRemainingAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RemainingAmountAtom
}

// GetRemainingAmountAtomOk returns a tuple with the RemainingAmountAtom field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetRemainingAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemainingAmountAtom, true
}

// SetRemainingAmountAtom sets field value
func (o *InvoiceExternal) SetRemainingAmountAtom(v int32) {
	o.RemainingAmountAtom = v
}

// GetStatus returns the Status field value
func (o *InvoiceExternal) GetStatus() InvoiceStatusEnum {
	if o == nil {
		var ret InvoiceStatusEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetStatusOk() (*InvoiceStatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InvoiceExternal) SetStatus(v InvoiceStatusEnum) {
	o.Status = v
}

// GetSubscription returns the Subscription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceExternal) GetSubscription() SubscriptionExternal {
	if o == nil || IsNil(o.Subscription.Get()) {
		var ret SubscriptionExternal
		return ret
	}
	return *o.Subscription.Get()
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetSubscriptionOk() (*SubscriptionExternal, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subscription.Get(), o.Subscription.IsSet()
}

// HasSubscription returns a boolean if a field has been set.
func (o *InvoiceExternal) HasSubscription() bool {
	if o != nil && o.Subscription.IsSet() {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given NullableSubscriptionExternal and assigns it to the Subscription field.
func (o *InvoiceExternal) SetSubscription(v SubscriptionExternal) {
	o.Subscription.Set(&v)
}
// SetSubscriptionNil sets the value for Subscription to be an explicit nil
func (o *InvoiceExternal) SetSubscriptionNil() {
	o.Subscription.Set(nil)
}

// UnsetSubscription ensures that no value is present for Subscription, not even an explicit nil
func (o *InvoiceExternal) UnsetSubscription() {
	o.Subscription.Unset()
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceExternal) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId.Get()) {
		var ret string
		return ret
	}
	return *o.SubscriptionId.Get()
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriptionId.Get(), o.SubscriptionId.IsSet()
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *InvoiceExternal) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given NullableString and assigns it to the SubscriptionId field.
func (o *InvoiceExternal) SetSubscriptionId(v string) {
	o.SubscriptionId.Set(&v)
}
// SetSubscriptionIdNil sets the value for SubscriptionId to be an explicit nil
func (o *InvoiceExternal) SetSubscriptionIdNil() {
	o.SubscriptionId.Set(nil)
}

// UnsetSubscriptionId ensures that no value is present for SubscriptionId, not even an explicit nil
func (o *InvoiceExternal) UnsetSubscriptionId() {
	o.SubscriptionId.Unset()
}

// GetTaxAmountAtom returns the TaxAmountAtom field value
func (o *InvoiceExternal) GetTaxAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TaxAmountAtom
}

// GetTaxAmountAtomOk returns a tuple with the TaxAmountAtom field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetTaxAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaxAmountAtom, true
}

// SetTaxAmountAtom sets field value
func (o *InvoiceExternal) SetTaxAmountAtom(v int32) {
	o.TaxAmountAtom = v
}

// GetTaxProcessorUpdatedAt returns the TaxProcessorUpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceExternal) GetTaxProcessorUpdatedAt() time.Time {
	if o == nil || IsNil(o.TaxProcessorUpdatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.TaxProcessorUpdatedAt.Get()
}

// GetTaxProcessorUpdatedAtOk returns a tuple with the TaxProcessorUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceExternal) GetTaxProcessorUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxProcessorUpdatedAt.Get(), o.TaxProcessorUpdatedAt.IsSet()
}

// HasTaxProcessorUpdatedAt returns a boolean if a field has been set.
func (o *InvoiceExternal) HasTaxProcessorUpdatedAt() bool {
	if o != nil && o.TaxProcessorUpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetTaxProcessorUpdatedAt gets a reference to the given NullableTime and assigns it to the TaxProcessorUpdatedAt field.
func (o *InvoiceExternal) SetTaxProcessorUpdatedAt(v time.Time) {
	o.TaxProcessorUpdatedAt.Set(&v)
}
// SetTaxProcessorUpdatedAtNil sets the value for TaxProcessorUpdatedAt to be an explicit nil
func (o *InvoiceExternal) SetTaxProcessorUpdatedAtNil() {
	o.TaxProcessorUpdatedAt.Set(nil)
}

// UnsetTaxProcessorUpdatedAt ensures that no value is present for TaxProcessorUpdatedAt, not even an explicit nil
func (o *InvoiceExternal) UnsetTaxProcessorUpdatedAt() {
	o.TaxProcessorUpdatedAt.Unset()
}

// GetTotalAmountAtom returns the TotalAmountAtom field value
func (o *InvoiceExternal) GetTotalAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalAmountAtom
}

// GetTotalAmountAtomOk returns a tuple with the TotalAmountAtom field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetTotalAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAmountAtom, true
}

// SetTotalAmountAtom sets field value
func (o *InvoiceExternal) SetTotalAmountAtom(v int32) {
	o.TotalAmountAtom = v
}

// GetTotalDiscountAmountAtoms returns the TotalDiscountAmountAtoms field value if set, zero value otherwise.
func (o *InvoiceExternal) GetTotalDiscountAmountAtoms() []InvoiceDiscountAmountsExternal {
	if o == nil || IsNil(o.TotalDiscountAmountAtoms) {
		var ret []InvoiceDiscountAmountsExternal
		return ret
	}
	return o.TotalDiscountAmountAtoms
}

// GetTotalDiscountAmountAtomsOk returns a tuple with the TotalDiscountAmountAtoms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetTotalDiscountAmountAtomsOk() ([]InvoiceDiscountAmountsExternal, bool) {
	if o == nil || IsNil(o.TotalDiscountAmountAtoms) {
		return nil, false
	}
	return o.TotalDiscountAmountAtoms, true
}

// HasTotalDiscountAmountAtoms returns a boolean if a field has been set.
func (o *InvoiceExternal) HasTotalDiscountAmountAtoms() bool {
	if o != nil && !IsNil(o.TotalDiscountAmountAtoms) {
		return true
	}

	return false
}

// SetTotalDiscountAmountAtoms gets a reference to the given []InvoiceDiscountAmountsExternal and assigns it to the TotalDiscountAmountAtoms field.
func (o *InvoiceExternal) SetTotalDiscountAmountAtoms(v []InvoiceDiscountAmountsExternal) {
	o.TotalDiscountAmountAtoms = v
}

// GetTotalExcludingTaxesAmountAtom returns the TotalExcludingTaxesAmountAtom field value
func (o *InvoiceExternal) GetTotalExcludingTaxesAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalExcludingTaxesAmountAtom
}

// GetTotalExcludingTaxesAmountAtomOk returns a tuple with the TotalExcludingTaxesAmountAtom field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetTotalExcludingTaxesAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalExcludingTaxesAmountAtom, true
}

// SetTotalExcludingTaxesAmountAtom sets field value
func (o *InvoiceExternal) SetTotalExcludingTaxesAmountAtom(v int32) {
	o.TotalExcludingTaxesAmountAtom = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *InvoiceExternal) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *InvoiceExternal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *InvoiceExternal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o InvoiceExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["applied_balance_amount_atom"] = o.AppliedBalanceAmountAtom
	toSerialize["billing_reason"] = o.BillingReason
	toSerialize["collection_method"] = o.CollectionMethod
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	toSerialize["created_at"] = o.CreatedAt
	if !IsNil(o.CreditNoteIds) {
		toSerialize["credit_note_ids"] = o.CreditNoteIds
	}
	toSerialize["currency"] = o.Currency
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if o.Customer.IsSet() {
		toSerialize["customer"] = o.Customer.Get()
	}
	toSerialize["customer_id"] = o.CustomerId
	if !IsNil(o.CustomerTaxIds) {
		toSerialize["customer_tax_ids"] = o.CustomerTaxIds
	}
	if o.DefaultPaymentMethodId.IsSet() {
		toSerialize["default_payment_method_id"] = o.DefaultPaymentMethodId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.Discounts) {
		toSerialize["discounts"] = o.Discounts
	}
	toSerialize["due_amount_atom"] = o.DueAmountAtom
	toSerialize["due_date"] = o.DueDate
	if !IsNil(o.EmailInvoiceOnFinalization) {
		toSerialize["email_invoice_on_finalization"] = o.EmailInvoiceOnFinalization
	}
	if o.HostedInvoiceUrl.IsSet() {
		toSerialize["hosted_invoice_url"] = o.HostedInvoiceUrl.Get()
	}
	toSerialize["id"] = o.Id
	toSerialize["invoice_number"] = o.InvoiceNumber
	toSerialize["invoice_pdf_url"] = o.InvoicePdfUrl
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	toSerialize["is_initial_invoice_for_trial_sub"] = o.IsInitialInvoiceForTrialSub
	if o.LatestPaymentAttemptFailureMessage.IsSet() {
		toSerialize["latest_payment_attempt_failure_message"] = o.LatestPaymentAttemptFailureMessage.Get()
	}
	if o.LatestPaymentIntentId.IsSet() {
		toSerialize["latest_payment_intent_id"] = o.LatestPaymentIntentId.Get()
	}
	toSerialize["lines"] = o.Lines
	if !IsNil(o.MerchantTaxIds) {
		toSerialize["merchant_tax_ids"] = o.MerchantTaxIds
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.NetD) {
		toSerialize["net_d"] = o.NetD
	}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["paid_amount_atom"] = o.PaidAmountAtom
	if o.PaidAt.IsSet() {
		toSerialize["paid_at"] = o.PaidAt.Get()
	}
	toSerialize["paid_out_of_band"] = o.PaidOutOfBand.Get()
	toSerialize["period_end"] = o.PeriodEnd
	toSerialize["period_start"] = o.PeriodStart
	if o.PostPaymentCreditNotesAmount.IsSet() {
		toSerialize["post_payment_credit_notes_amount"] = o.PostPaymentCreditNotesAmount.Get()
	}
	if o.PrePaymentCreditNotesAmount.IsSet() {
		toSerialize["pre_payment_credit_notes_amount"] = o.PrePaymentCreditNotesAmount.Get()
	}
	toSerialize["provider_type_fee_amount_atom"] = o.ProviderTypeFeeAmountAtom
	toSerialize["receipt_pdf_url"] = o.ReceiptPdfUrl
	toSerialize["refund_ids"] = o.RefundIds
	toSerialize["refunded_amount_atom"] = o.RefundedAmountAtom.Get()
	toSerialize["remaining_amount_atom"] = o.RemainingAmountAtom
	toSerialize["status"] = o.Status
	if o.Subscription.IsSet() {
		toSerialize["subscription"] = o.Subscription.Get()
	}
	if o.SubscriptionId.IsSet() {
		toSerialize["subscription_id"] = o.SubscriptionId.Get()
	}
	toSerialize["tax_amount_atom"] = o.TaxAmountAtom
	if o.TaxProcessorUpdatedAt.IsSet() {
		toSerialize["tax_processor_updated_at"] = o.TaxProcessorUpdatedAt.Get()
	}
	toSerialize["total_amount_atom"] = o.TotalAmountAtom
	if !IsNil(o.TotalDiscountAmountAtoms) {
		toSerialize["total_discount_amount_atoms"] = o.TotalDiscountAmountAtoms
	}
	toSerialize["total_excluding_taxes_amount_atom"] = o.TotalExcludingTaxesAmountAtom
	toSerialize["updated_at"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InvoiceExternal) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"applied_balance_amount_atom",
		"billing_reason",
		"collection_method",
		"created_at",
		"currency",
		"customer_id",
		"due_amount_atom",
		"due_date",
		"id",
		"invoice_number",
		"invoice_pdf_url",
		"is_initial_invoice_for_trial_sub",
		"lines",
		"paid_amount_atom",
		"paid_out_of_band",
		"period_end",
		"period_start",
		"provider_type_fee_amount_atom",
		"receipt_pdf_url",
		"refund_ids",
		"refunded_amount_atom",
		"remaining_amount_atom",
		"status",
		"tax_amount_atom",
		"total_amount_atom",
		"total_excluding_taxes_amount_atom",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoiceExternal := _InvoiceExternal{}

	err = json.Unmarshal(data, &varInvoiceExternal)

	if err != nil {
		return err
	}

	*o = InvoiceExternal(varInvoiceExternal)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "applied_balance_amount_atom")
		delete(additionalProperties, "billing_reason")
		delete(additionalProperties, "collection_method")
		delete(additionalProperties, "comments")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "credit_note_ids")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "custom_fields")
		delete(additionalProperties, "customer")
		delete(additionalProperties, "customer_id")
		delete(additionalProperties, "customer_tax_ids")
		delete(additionalProperties, "default_payment_method_id")
		delete(additionalProperties, "description")
		delete(additionalProperties, "discounts")
		delete(additionalProperties, "due_amount_atom")
		delete(additionalProperties, "due_date")
		delete(additionalProperties, "email_invoice_on_finalization")
		delete(additionalProperties, "hosted_invoice_url")
		delete(additionalProperties, "id")
		delete(additionalProperties, "invoice_number")
		delete(additionalProperties, "invoice_pdf_url")
		delete(additionalProperties, "is_deleted")
		delete(additionalProperties, "is_initial_invoice_for_trial_sub")
		delete(additionalProperties, "latest_payment_attempt_failure_message")
		delete(additionalProperties, "latest_payment_intent_id")
		delete(additionalProperties, "lines")
		delete(additionalProperties, "merchant_tax_ids")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "net_d")
		delete(additionalProperties, "object")
		delete(additionalProperties, "paid_amount_atom")
		delete(additionalProperties, "paid_at")
		delete(additionalProperties, "paid_out_of_band")
		delete(additionalProperties, "period_end")
		delete(additionalProperties, "period_start")
		delete(additionalProperties, "post_payment_credit_notes_amount")
		delete(additionalProperties, "pre_payment_credit_notes_amount")
		delete(additionalProperties, "provider_type_fee_amount_atom")
		delete(additionalProperties, "receipt_pdf_url")
		delete(additionalProperties, "refund_ids")
		delete(additionalProperties, "refunded_amount_atom")
		delete(additionalProperties, "remaining_amount_atom")
		delete(additionalProperties, "status")
		delete(additionalProperties, "subscription")
		delete(additionalProperties, "subscription_id")
		delete(additionalProperties, "tax_amount_atom")
		delete(additionalProperties, "tax_processor_updated_at")
		delete(additionalProperties, "total_amount_atom")
		delete(additionalProperties, "total_discount_amount_atoms")
		delete(additionalProperties, "total_excluding_taxes_amount_atom")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInvoiceExternal struct {
	value *InvoiceExternal
	isSet bool
}

func (v NullableInvoiceExternal) Get() *InvoiceExternal {
	return v.value
}

func (v *NullableInvoiceExternal) Set(val *InvoiceExternal) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceExternal) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceExternal(val *InvoiceExternal) *NullableInvoiceExternal {
	return &NullableInvoiceExternal{value: val, isSet: true}
}

func (v NullableInvoiceExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


