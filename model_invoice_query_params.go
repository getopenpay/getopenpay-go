/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
)

// checks if the InvoiceQueryParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceQueryParams{}

// InvoiceQueryParams struct for InvoiceQueryParams
type InvoiceQueryParams struct {
	BillingReason NullableBillingReasonEnum `json:"billing_reason,omitempty"`
	CollectionMethod NullableCollectionMethodEnum `json:"collection_method,omitempty"`
	CouponId NullableString `json:"coupon_id,omitempty"`
	CreatedAt NullableDateTimeFilter `json:"created_at,omitempty"`
	Currency NullableCurrencyEnum `json:"currency,omitempty"`
	CustomerId NullableString `json:"customer_id,omitempty"`
	// Specifies which fields in the response should be expanded.
	Expand []string `json:"expand,omitempty"`
	// Page number
	PageNumber *int32 `json:"page_number,omitempty"`
	// Page size
	PageSize *int32 `json:"page_size,omitempty"`
	PeriodEnd NullableDateTimeFilter `json:"period_end,omitempty"`
	PeriodStart NullableDateTimeFilter `json:"period_start,omitempty"`
	Search NullableSearchFilter `json:"search,omitempty"`
	// Sort direction.
	SortDescending *bool `json:"sort_descending,omitempty"`
	// Key name based on which data is sorted.
	SortKey *string `json:"sort_key,omitempty"`
	Status NullableInvoiceStatusEnum `json:"status,omitempty"`
	SubscriptionId NullableString `json:"subscription_id,omitempty"`
	TotalAmountAtom NullableIntRangeFilter `json:"total_amount_atom,omitempty"`
	UpdatedAt NullableDateTimeFilter `json:"updated_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InvoiceQueryParams InvoiceQueryParams

// NewInvoiceQueryParams instantiates a new InvoiceQueryParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceQueryParams() *InvoiceQueryParams {
	this := InvoiceQueryParams{}
	var pageNumber int32 = 1
	this.PageNumber = &pageNumber
	var pageSize int32 = 100
	this.PageSize = &pageSize
	var sortDescending bool = false
	this.SortDescending = &sortDescending
	var sortKey string = "created_at"
	this.SortKey = &sortKey
	return &this
}

// NewInvoiceQueryParamsWithDefaults instantiates a new InvoiceQueryParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceQueryParamsWithDefaults() *InvoiceQueryParams {
	this := InvoiceQueryParams{}
	var pageNumber int32 = 1
	this.PageNumber = &pageNumber
	var pageSize int32 = 100
	this.PageSize = &pageSize
	var sortDescending bool = false
	this.SortDescending = &sortDescending
	var sortKey string = "created_at"
	this.SortKey = &sortKey
	return &this
}

// GetBillingReason returns the BillingReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceQueryParams) GetBillingReason() BillingReasonEnum {
	if o == nil || IsNil(o.BillingReason.Get()) {
		var ret BillingReasonEnum
		return ret
	}
	return *o.BillingReason.Get()
}

// GetBillingReasonOk returns a tuple with the BillingReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceQueryParams) GetBillingReasonOk() (*BillingReasonEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingReason.Get(), o.BillingReason.IsSet()
}

// HasBillingReason returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasBillingReason() bool {
	if o != nil && o.BillingReason.IsSet() {
		return true
	}

	return false
}

// SetBillingReason gets a reference to the given NullableBillingReasonEnum and assigns it to the BillingReason field.
func (o *InvoiceQueryParams) SetBillingReason(v BillingReasonEnum) {
	o.BillingReason.Set(&v)
}
// SetBillingReasonNil sets the value for BillingReason to be an explicit nil
func (o *InvoiceQueryParams) SetBillingReasonNil() {
	o.BillingReason.Set(nil)
}

// UnsetBillingReason ensures that no value is present for BillingReason, not even an explicit nil
func (o *InvoiceQueryParams) UnsetBillingReason() {
	o.BillingReason.Unset()
}

// GetCollectionMethod returns the CollectionMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceQueryParams) GetCollectionMethod() CollectionMethodEnum {
	if o == nil || IsNil(o.CollectionMethod.Get()) {
		var ret CollectionMethodEnum
		return ret
	}
	return *o.CollectionMethod.Get()
}

// GetCollectionMethodOk returns a tuple with the CollectionMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceQueryParams) GetCollectionMethodOk() (*CollectionMethodEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.CollectionMethod.Get(), o.CollectionMethod.IsSet()
}

// HasCollectionMethod returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasCollectionMethod() bool {
	if o != nil && o.CollectionMethod.IsSet() {
		return true
	}

	return false
}

// SetCollectionMethod gets a reference to the given NullableCollectionMethodEnum and assigns it to the CollectionMethod field.
func (o *InvoiceQueryParams) SetCollectionMethod(v CollectionMethodEnum) {
	o.CollectionMethod.Set(&v)
}
// SetCollectionMethodNil sets the value for CollectionMethod to be an explicit nil
func (o *InvoiceQueryParams) SetCollectionMethodNil() {
	o.CollectionMethod.Set(nil)
}

// UnsetCollectionMethod ensures that no value is present for CollectionMethod, not even an explicit nil
func (o *InvoiceQueryParams) UnsetCollectionMethod() {
	o.CollectionMethod.Unset()
}

// GetCouponId returns the CouponId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceQueryParams) GetCouponId() string {
	if o == nil || IsNil(o.CouponId.Get()) {
		var ret string
		return ret
	}
	return *o.CouponId.Get()
}

// GetCouponIdOk returns a tuple with the CouponId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceQueryParams) GetCouponIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CouponId.Get(), o.CouponId.IsSet()
}

// HasCouponId returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasCouponId() bool {
	if o != nil && o.CouponId.IsSet() {
		return true
	}

	return false
}

// SetCouponId gets a reference to the given NullableString and assigns it to the CouponId field.
func (o *InvoiceQueryParams) SetCouponId(v string) {
	o.CouponId.Set(&v)
}
// SetCouponIdNil sets the value for CouponId to be an explicit nil
func (o *InvoiceQueryParams) SetCouponIdNil() {
	o.CouponId.Set(nil)
}

// UnsetCouponId ensures that no value is present for CouponId, not even an explicit nil
func (o *InvoiceQueryParams) UnsetCouponId() {
	o.CouponId.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceQueryParams) GetCreatedAt() DateTimeFilter {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret DateTimeFilter
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceQueryParams) GetCreatedAtOk() (*DateTimeFilter, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableDateTimeFilter and assigns it to the CreatedAt field.
func (o *InvoiceQueryParams) SetCreatedAt(v DateTimeFilter) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *InvoiceQueryParams) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *InvoiceQueryParams) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetCurrency returns the Currency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceQueryParams) GetCurrency() CurrencyEnum {
	if o == nil || IsNil(o.Currency.Get()) {
		var ret CurrencyEnum
		return ret
	}
	return *o.Currency.Get()
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceQueryParams) GetCurrencyOk() (*CurrencyEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.Currency.Get(), o.Currency.IsSet()
}

// HasCurrency returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasCurrency() bool {
	if o != nil && o.Currency.IsSet() {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given NullableCurrencyEnum and assigns it to the Currency field.
func (o *InvoiceQueryParams) SetCurrency(v CurrencyEnum) {
	o.Currency.Set(&v)
}
// SetCurrencyNil sets the value for Currency to be an explicit nil
func (o *InvoiceQueryParams) SetCurrencyNil() {
	o.Currency.Set(nil)
}

// UnsetCurrency ensures that no value is present for Currency, not even an explicit nil
func (o *InvoiceQueryParams) UnsetCurrency() {
	o.Currency.Unset()
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceQueryParams) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerId.Get()
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceQueryParams) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerId.Get(), o.CustomerId.IsSet()
}

// HasCustomerId returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasCustomerId() bool {
	if o != nil && o.CustomerId.IsSet() {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given NullableString and assigns it to the CustomerId field.
func (o *InvoiceQueryParams) SetCustomerId(v string) {
	o.CustomerId.Set(&v)
}
// SetCustomerIdNil sets the value for CustomerId to be an explicit nil
func (o *InvoiceQueryParams) SetCustomerIdNil() {
	o.CustomerId.Set(nil)
}

// UnsetCustomerId ensures that no value is present for CustomerId, not even an explicit nil
func (o *InvoiceQueryParams) UnsetCustomerId() {
	o.CustomerId.Unset()
}

// GetExpand returns the Expand field value if set, zero value otherwise.
func (o *InvoiceQueryParams) GetExpand() []string {
	if o == nil || IsNil(o.Expand) {
		var ret []string
		return ret
	}
	return o.Expand
}

// GetExpandOk returns a tuple with the Expand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceQueryParams) GetExpandOk() ([]string, bool) {
	if o == nil || IsNil(o.Expand) {
		return nil, false
	}
	return o.Expand, true
}

// HasExpand returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasExpand() bool {
	if o != nil && !IsNil(o.Expand) {
		return true
	}

	return false
}

// SetExpand gets a reference to the given []string and assigns it to the Expand field.
func (o *InvoiceQueryParams) SetExpand(v []string) {
	o.Expand = v
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *InvoiceQueryParams) GetPageNumber() int32 {
	if o == nil || IsNil(o.PageNumber) {
		var ret int32
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceQueryParams) GetPageNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasPageNumber() bool {
	if o != nil && !IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int32 and assigns it to the PageNumber field.
func (o *InvoiceQueryParams) SetPageNumber(v int32) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *InvoiceQueryParams) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceQueryParams) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *InvoiceQueryParams) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetPeriodEnd returns the PeriodEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceQueryParams) GetPeriodEnd() DateTimeFilter {
	if o == nil || IsNil(o.PeriodEnd.Get()) {
		var ret DateTimeFilter
		return ret
	}
	return *o.PeriodEnd.Get()
}

// GetPeriodEndOk returns a tuple with the PeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceQueryParams) GetPeriodEndOk() (*DateTimeFilter, bool) {
	if o == nil {
		return nil, false
	}
	return o.PeriodEnd.Get(), o.PeriodEnd.IsSet()
}

// HasPeriodEnd returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasPeriodEnd() bool {
	if o != nil && o.PeriodEnd.IsSet() {
		return true
	}

	return false
}

// SetPeriodEnd gets a reference to the given NullableDateTimeFilter and assigns it to the PeriodEnd field.
func (o *InvoiceQueryParams) SetPeriodEnd(v DateTimeFilter) {
	o.PeriodEnd.Set(&v)
}
// SetPeriodEndNil sets the value for PeriodEnd to be an explicit nil
func (o *InvoiceQueryParams) SetPeriodEndNil() {
	o.PeriodEnd.Set(nil)
}

// UnsetPeriodEnd ensures that no value is present for PeriodEnd, not even an explicit nil
func (o *InvoiceQueryParams) UnsetPeriodEnd() {
	o.PeriodEnd.Unset()
}

// GetPeriodStart returns the PeriodStart field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceQueryParams) GetPeriodStart() DateTimeFilter {
	if o == nil || IsNil(o.PeriodStart.Get()) {
		var ret DateTimeFilter
		return ret
	}
	return *o.PeriodStart.Get()
}

// GetPeriodStartOk returns a tuple with the PeriodStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceQueryParams) GetPeriodStartOk() (*DateTimeFilter, bool) {
	if o == nil {
		return nil, false
	}
	return o.PeriodStart.Get(), o.PeriodStart.IsSet()
}

// HasPeriodStart returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasPeriodStart() bool {
	if o != nil && o.PeriodStart.IsSet() {
		return true
	}

	return false
}

// SetPeriodStart gets a reference to the given NullableDateTimeFilter and assigns it to the PeriodStart field.
func (o *InvoiceQueryParams) SetPeriodStart(v DateTimeFilter) {
	o.PeriodStart.Set(&v)
}
// SetPeriodStartNil sets the value for PeriodStart to be an explicit nil
func (o *InvoiceQueryParams) SetPeriodStartNil() {
	o.PeriodStart.Set(nil)
}

// UnsetPeriodStart ensures that no value is present for PeriodStart, not even an explicit nil
func (o *InvoiceQueryParams) UnsetPeriodStart() {
	o.PeriodStart.Unset()
}

// GetSearch returns the Search field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceQueryParams) GetSearch() SearchFilter {
	if o == nil || IsNil(o.Search.Get()) {
		var ret SearchFilter
		return ret
	}
	return *o.Search.Get()
}

// GetSearchOk returns a tuple with the Search field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceQueryParams) GetSearchOk() (*SearchFilter, bool) {
	if o == nil {
		return nil, false
	}
	return o.Search.Get(), o.Search.IsSet()
}

// HasSearch returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasSearch() bool {
	if o != nil && o.Search.IsSet() {
		return true
	}

	return false
}

// SetSearch gets a reference to the given NullableSearchFilter and assigns it to the Search field.
func (o *InvoiceQueryParams) SetSearch(v SearchFilter) {
	o.Search.Set(&v)
}
// SetSearchNil sets the value for Search to be an explicit nil
func (o *InvoiceQueryParams) SetSearchNil() {
	o.Search.Set(nil)
}

// UnsetSearch ensures that no value is present for Search, not even an explicit nil
func (o *InvoiceQueryParams) UnsetSearch() {
	o.Search.Unset()
}

// GetSortDescending returns the SortDescending field value if set, zero value otherwise.
func (o *InvoiceQueryParams) GetSortDescending() bool {
	if o == nil || IsNil(o.SortDescending) {
		var ret bool
		return ret
	}
	return *o.SortDescending
}

// GetSortDescendingOk returns a tuple with the SortDescending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceQueryParams) GetSortDescendingOk() (*bool, bool) {
	if o == nil || IsNil(o.SortDescending) {
		return nil, false
	}
	return o.SortDescending, true
}

// HasSortDescending returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasSortDescending() bool {
	if o != nil && !IsNil(o.SortDescending) {
		return true
	}

	return false
}

// SetSortDescending gets a reference to the given bool and assigns it to the SortDescending field.
func (o *InvoiceQueryParams) SetSortDescending(v bool) {
	o.SortDescending = &v
}

// GetSortKey returns the SortKey field value if set, zero value otherwise.
func (o *InvoiceQueryParams) GetSortKey() string {
	if o == nil || IsNil(o.SortKey) {
		var ret string
		return ret
	}
	return *o.SortKey
}

// GetSortKeyOk returns a tuple with the SortKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceQueryParams) GetSortKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SortKey) {
		return nil, false
	}
	return o.SortKey, true
}

// HasSortKey returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasSortKey() bool {
	if o != nil && !IsNil(o.SortKey) {
		return true
	}

	return false
}

// SetSortKey gets a reference to the given string and assigns it to the SortKey field.
func (o *InvoiceQueryParams) SetSortKey(v string) {
	o.SortKey = &v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceQueryParams) GetStatus() InvoiceStatusEnum {
	if o == nil || IsNil(o.Status.Get()) {
		var ret InvoiceStatusEnum
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceQueryParams) GetStatusOk() (*InvoiceStatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableInvoiceStatusEnum and assigns it to the Status field.
func (o *InvoiceQueryParams) SetStatus(v InvoiceStatusEnum) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *InvoiceQueryParams) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *InvoiceQueryParams) UnsetStatus() {
	o.Status.Unset()
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceQueryParams) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId.Get()) {
		var ret string
		return ret
	}
	return *o.SubscriptionId.Get()
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceQueryParams) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriptionId.Get(), o.SubscriptionId.IsSet()
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given NullableString and assigns it to the SubscriptionId field.
func (o *InvoiceQueryParams) SetSubscriptionId(v string) {
	o.SubscriptionId.Set(&v)
}
// SetSubscriptionIdNil sets the value for SubscriptionId to be an explicit nil
func (o *InvoiceQueryParams) SetSubscriptionIdNil() {
	o.SubscriptionId.Set(nil)
}

// UnsetSubscriptionId ensures that no value is present for SubscriptionId, not even an explicit nil
func (o *InvoiceQueryParams) UnsetSubscriptionId() {
	o.SubscriptionId.Unset()
}

// GetTotalAmountAtom returns the TotalAmountAtom field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceQueryParams) GetTotalAmountAtom() IntRangeFilter {
	if o == nil || IsNil(o.TotalAmountAtom.Get()) {
		var ret IntRangeFilter
		return ret
	}
	return *o.TotalAmountAtom.Get()
}

// GetTotalAmountAtomOk returns a tuple with the TotalAmountAtom field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceQueryParams) GetTotalAmountAtomOk() (*IntRangeFilter, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalAmountAtom.Get(), o.TotalAmountAtom.IsSet()
}

// HasTotalAmountAtom returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasTotalAmountAtom() bool {
	if o != nil && o.TotalAmountAtom.IsSet() {
		return true
	}

	return false
}

// SetTotalAmountAtom gets a reference to the given NullableIntRangeFilter and assigns it to the TotalAmountAtom field.
func (o *InvoiceQueryParams) SetTotalAmountAtom(v IntRangeFilter) {
	o.TotalAmountAtom.Set(&v)
}
// SetTotalAmountAtomNil sets the value for TotalAmountAtom to be an explicit nil
func (o *InvoiceQueryParams) SetTotalAmountAtomNil() {
	o.TotalAmountAtom.Set(nil)
}

// UnsetTotalAmountAtom ensures that no value is present for TotalAmountAtom, not even an explicit nil
func (o *InvoiceQueryParams) UnsetTotalAmountAtom() {
	o.TotalAmountAtom.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InvoiceQueryParams) GetUpdatedAt() DateTimeFilter {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret DateTimeFilter
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InvoiceQueryParams) GetUpdatedAtOk() (*DateTimeFilter, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *InvoiceQueryParams) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableDateTimeFilter and assigns it to the UpdatedAt field.
func (o *InvoiceQueryParams) SetUpdatedAt(v DateTimeFilter) {
	o.UpdatedAt.Set(&v)
}
// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *InvoiceQueryParams) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *InvoiceQueryParams) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

func (o InvoiceQueryParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceQueryParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BillingReason.IsSet() {
		toSerialize["billing_reason"] = o.BillingReason.Get()
	}
	if o.CollectionMethod.IsSet() {
		toSerialize["collection_method"] = o.CollectionMethod.Get()
	}
	if o.CouponId.IsSet() {
		toSerialize["coupon_id"] = o.CouponId.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.Currency.IsSet() {
		toSerialize["currency"] = o.Currency.Get()
	}
	if o.CustomerId.IsSet() {
		toSerialize["customer_id"] = o.CustomerId.Get()
	}
	if !IsNil(o.Expand) {
		toSerialize["expand"] = o.Expand
	}
	if !IsNil(o.PageNumber) {
		toSerialize["page_number"] = o.PageNumber
	}
	if !IsNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	if o.PeriodEnd.IsSet() {
		toSerialize["period_end"] = o.PeriodEnd.Get()
	}
	if o.PeriodStart.IsSet() {
		toSerialize["period_start"] = o.PeriodStart.Get()
	}
	if o.Search.IsSet() {
		toSerialize["search"] = o.Search.Get()
	}
	if !IsNil(o.SortDescending) {
		toSerialize["sort_descending"] = o.SortDescending
	}
	if !IsNil(o.SortKey) {
		toSerialize["sort_key"] = o.SortKey
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.SubscriptionId.IsSet() {
		toSerialize["subscription_id"] = o.SubscriptionId.Get()
	}
	if o.TotalAmountAtom.IsSet() {
		toSerialize["total_amount_atom"] = o.TotalAmountAtom.Get()
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InvoiceQueryParams) UnmarshalJSON(data []byte) (err error) {
	varInvoiceQueryParams := _InvoiceQueryParams{}

	err = json.Unmarshal(data, &varInvoiceQueryParams)

	if err != nil {
		return err
	}

	*o = InvoiceQueryParams(varInvoiceQueryParams)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "billing_reason")
		delete(additionalProperties, "collection_method")
		delete(additionalProperties, "coupon_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "customer_id")
		delete(additionalProperties, "expand")
		delete(additionalProperties, "page_number")
		delete(additionalProperties, "page_size")
		delete(additionalProperties, "period_end")
		delete(additionalProperties, "period_start")
		delete(additionalProperties, "search")
		delete(additionalProperties, "sort_descending")
		delete(additionalProperties, "sort_key")
		delete(additionalProperties, "status")
		delete(additionalProperties, "subscription_id")
		delete(additionalProperties, "total_amount_atom")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInvoiceQueryParams struct {
	value *InvoiceQueryParams
	isSet bool
}

func (v NullableInvoiceQueryParams) Get() *InvoiceQueryParams {
	return v.value
}

func (v *NullableInvoiceQueryParams) Set(val *InvoiceQueryParams) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceQueryParams) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceQueryParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceQueryParams(val *InvoiceQueryParams) *NullableInvoiceQueryParams {
	return &NullableInvoiceQueryParams{value: val, isSet: true}
}

func (v NullableInvoiceQueryParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceQueryParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


