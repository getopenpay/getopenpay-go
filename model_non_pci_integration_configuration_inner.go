/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"fmt"
)


// NonPciIntegrationConfigurationInner struct for NonPciIntegrationConfigurationInner
type NonPciIntegrationConfigurationInner struct {
	BooleanConfigField *BooleanConfigField
	EnumConfigField *EnumConfigField
	NumberConfigField *NumberConfigField
	StringConfigField *StringConfigField
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *NonPciIntegrationConfigurationInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into BooleanConfigField
	err = json.Unmarshal(data, &dst.BooleanConfigField);
	if err == nil {
		jsonBooleanConfigField, _ := json.Marshal(dst.BooleanConfigField)
		if string(jsonBooleanConfigField) == "{}" { // empty struct
			dst.BooleanConfigField = nil
		} else {
			return nil // data stored in dst.BooleanConfigField, return on the first match
		}
	} else {
		dst.BooleanConfigField = nil
	}

	// try to unmarshal JSON data into EnumConfigField
	err = json.Unmarshal(data, &dst.EnumConfigField);
	if err == nil {
		jsonEnumConfigField, _ := json.Marshal(dst.EnumConfigField)
		if string(jsonEnumConfigField) == "{}" { // empty struct
			dst.EnumConfigField = nil
		} else {
			return nil // data stored in dst.EnumConfigField, return on the first match
		}
	} else {
		dst.EnumConfigField = nil
	}

	// try to unmarshal JSON data into NumberConfigField
	err = json.Unmarshal(data, &dst.NumberConfigField);
	if err == nil {
		jsonNumberConfigField, _ := json.Marshal(dst.NumberConfigField)
		if string(jsonNumberConfigField) == "{}" { // empty struct
			dst.NumberConfigField = nil
		} else {
			return nil // data stored in dst.NumberConfigField, return on the first match
		}
	} else {
		dst.NumberConfigField = nil
	}

	// try to unmarshal JSON data into StringConfigField
	err = json.Unmarshal(data, &dst.StringConfigField);
	if err == nil {
		jsonStringConfigField, _ := json.Marshal(dst.StringConfigField)
		if string(jsonStringConfigField) == "{}" { // empty struct
			dst.StringConfigField = nil
		} else {
			return nil // data stored in dst.StringConfigField, return on the first match
		}
	} else {
		dst.StringConfigField = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(NonPciIntegrationConfigurationInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src NonPciIntegrationConfigurationInner) MarshalJSON() ([]byte, error) {
	if src.BooleanConfigField != nil {
		return json.Marshal(&src.BooleanConfigField)
	}

	if src.EnumConfigField != nil {
		return json.Marshal(&src.EnumConfigField)
	}

	if src.NumberConfigField != nil {
		return json.Marshal(&src.NumberConfigField)
	}

	if src.StringConfigField != nil {
		return json.Marshal(&src.StringConfigField)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableNonPciIntegrationConfigurationInner struct {
	value *NonPciIntegrationConfigurationInner
	isSet bool
}

func (v NullableNonPciIntegrationConfigurationInner) Get() *NonPciIntegrationConfigurationInner {
	return v.value
}

func (v *NullableNonPciIntegrationConfigurationInner) Set(val *NonPciIntegrationConfigurationInner) {
	v.value = val
	v.isSet = true
}

func (v NullableNonPciIntegrationConfigurationInner) IsSet() bool {
	return v.isSet
}

func (v *NullableNonPciIntegrationConfigurationInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNonPciIntegrationConfigurationInner(val *NonPciIntegrationConfigurationInner) *NullableNonPciIntegrationConfigurationInner {
	return &NullableNonPciIntegrationConfigurationInner{value: val, isSet: true}
}

func (v NullableNonPciIntegrationConfigurationInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNonPciIntegrationConfigurationInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


