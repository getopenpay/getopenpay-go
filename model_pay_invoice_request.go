/*
OpenPay API

super charge your subscription management.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
)

// checks if the PayInvoiceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PayInvoiceRequest{}

// PayInvoiceRequest struct for PayInvoiceRequest
type PayInvoiceRequest struct {
	PaymentMethodId NullableString `json:"payment_method_id,omitempty"`
	// Boolean representing whether an invoice is paid outside of OpenPay. This will result in no charge being made. Defaults to false.
	PaidOutOfBand *bool `json:"paid_out_of_band,omitempty"`
	Comment NullableString `json:"comment,omitempty"`
}

// NewPayInvoiceRequest instantiates a new PayInvoiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayInvoiceRequest() *PayInvoiceRequest {
	this := PayInvoiceRequest{}
	var paidOutOfBand bool = false
	this.PaidOutOfBand = &paidOutOfBand
	return &this
}

// NewPayInvoiceRequestWithDefaults instantiates a new PayInvoiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayInvoiceRequestWithDefaults() *PayInvoiceRequest {
	this := PayInvoiceRequest{}
	var paidOutOfBand bool = false
	this.PaidOutOfBand = &paidOutOfBand
	return &this
}

// GetPaymentMethodId returns the PaymentMethodId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PayInvoiceRequest) GetPaymentMethodId() string {
	if o == nil || IsNil(o.PaymentMethodId.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentMethodId.Get()
}

// GetPaymentMethodIdOk returns a tuple with the PaymentMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PayInvoiceRequest) GetPaymentMethodIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentMethodId.Get(), o.PaymentMethodId.IsSet()
}

// HasPaymentMethodId returns a boolean if a field has been set.
func (o *PayInvoiceRequest) HasPaymentMethodId() bool {
	if o != nil && o.PaymentMethodId.IsSet() {
		return true
	}

	return false
}

// SetPaymentMethodId gets a reference to the given NullableString and assigns it to the PaymentMethodId field.
func (o *PayInvoiceRequest) SetPaymentMethodId(v string) {
	o.PaymentMethodId.Set(&v)
}
// SetPaymentMethodIdNil sets the value for PaymentMethodId to be an explicit nil
func (o *PayInvoiceRequest) SetPaymentMethodIdNil() {
	o.PaymentMethodId.Set(nil)
}

// UnsetPaymentMethodId ensures that no value is present for PaymentMethodId, not even an explicit nil
func (o *PayInvoiceRequest) UnsetPaymentMethodId() {
	o.PaymentMethodId.Unset()
}

// GetPaidOutOfBand returns the PaidOutOfBand field value if set, zero value otherwise.
func (o *PayInvoiceRequest) GetPaidOutOfBand() bool {
	if o == nil || IsNil(o.PaidOutOfBand) {
		var ret bool
		return ret
	}
	return *o.PaidOutOfBand
}

// GetPaidOutOfBandOk returns a tuple with the PaidOutOfBand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayInvoiceRequest) GetPaidOutOfBandOk() (*bool, bool) {
	if o == nil || IsNil(o.PaidOutOfBand) {
		return nil, false
	}
	return o.PaidOutOfBand, true
}

// HasPaidOutOfBand returns a boolean if a field has been set.
func (o *PayInvoiceRequest) HasPaidOutOfBand() bool {
	if o != nil && !IsNil(o.PaidOutOfBand) {
		return true
	}

	return false
}

// SetPaidOutOfBand gets a reference to the given bool and assigns it to the PaidOutOfBand field.
func (o *PayInvoiceRequest) SetPaidOutOfBand(v bool) {
	o.PaidOutOfBand = &v
}

// GetComment returns the Comment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PayInvoiceRequest) GetComment() string {
	if o == nil || IsNil(o.Comment.Get()) {
		var ret string
		return ret
	}
	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PayInvoiceRequest) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// HasComment returns a boolean if a field has been set.
func (o *PayInvoiceRequest) HasComment() bool {
	if o != nil && o.Comment.IsSet() {
		return true
	}

	return false
}

// SetComment gets a reference to the given NullableString and assigns it to the Comment field.
func (o *PayInvoiceRequest) SetComment(v string) {
	o.Comment.Set(&v)
}
// SetCommentNil sets the value for Comment to be an explicit nil
func (o *PayInvoiceRequest) SetCommentNil() {
	o.Comment.Set(nil)
}

// UnsetComment ensures that no value is present for Comment, not even an explicit nil
func (o *PayInvoiceRequest) UnsetComment() {
	o.Comment.Unset()
}

func (o PayInvoiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayInvoiceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.PaymentMethodId.IsSet() {
		toSerialize["payment_method_id"] = o.PaymentMethodId.Get()
	}
	if !IsNil(o.PaidOutOfBand) {
		toSerialize["paid_out_of_band"] = o.PaidOutOfBand
	}
	if o.Comment.IsSet() {
		toSerialize["comment"] = o.Comment.Get()
	}
	return toSerialize, nil
}

type NullablePayInvoiceRequest struct {
	value *PayInvoiceRequest
	isSet bool
}

func (v NullablePayInvoiceRequest) Get() *PayInvoiceRequest {
	return v.value
}

func (v *NullablePayInvoiceRequest) Set(val *PayInvoiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePayInvoiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePayInvoiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayInvoiceRequest(val *PayInvoiceRequest) *NullablePayInvoiceRequest {
	return &NullablePayInvoiceRequest{value: val, isSet: true}
}

func (v NullablePayInvoiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayInvoiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


