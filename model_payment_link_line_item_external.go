/*
OpenPay API

super charge your subscription management.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the PaymentLinkLineItemExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentLinkLineItemExternal{}

// PaymentLinkLineItemExternal struct for PaymentLinkLineItemExternal
type PaymentLinkLineItemExternal struct {
	// Unique identifier of the payment link line item.
	Id string `json:"id"`
	Object *ObjectName `json:"object,omitempty"`
	// DateTime at which the object was created, in 'ISO 8601' format.
	CreatedAt time.Time `json:"created_at"`
	// DateTime at which the object was updated, in 'ISO 8601' format.
	UpdatedAt time.Time `json:"updated_at"`
	// If true, indicates that this object has been deleted
	IsDeleted *bool `json:"is_deleted,omitempty"`
	// The ID of the payment link associated with this item
	PaymentLinkId string `json:"payment_link_id"`
	// Unique identifier of the price.
	PriceId string `json:"price_id"`
	// Quantity of the item.
	Quantity int32 `json:"quantity"`
}

type _PaymentLinkLineItemExternal PaymentLinkLineItemExternal

// NewPaymentLinkLineItemExternal instantiates a new PaymentLinkLineItemExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentLinkLineItemExternal(id string, createdAt time.Time, updatedAt time.Time, paymentLinkId string, priceId string, quantity int32) *PaymentLinkLineItemExternal {
	this := PaymentLinkLineItemExternal{}
	this.Id = id
	var object ObjectName = OBJECTNAME_PAYMENT_LINK_LINE_ITEM
	this.Object = &object
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	this.PaymentLinkId = paymentLinkId
	this.PriceId = priceId
	this.Quantity = quantity
	return &this
}

// NewPaymentLinkLineItemExternalWithDefaults instantiates a new PaymentLinkLineItemExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentLinkLineItemExternalWithDefaults() *PaymentLinkLineItemExternal {
	this := PaymentLinkLineItemExternal{}
	var object ObjectName = OBJECTNAME_PAYMENT_LINK_LINE_ITEM
	this.Object = &object
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	return &this
}

// GetId returns the Id field value
func (o *PaymentLinkLineItemExternal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PaymentLinkLineItemExternal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PaymentLinkLineItemExternal) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *PaymentLinkLineItemExternal) GetObject() ObjectName {
	if o == nil || IsNil(o.Object) {
		var ret ObjectName
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentLinkLineItemExternal) GetObjectOk() (*ObjectName, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *PaymentLinkLineItemExternal) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given ObjectName and assigns it to the Object field.
func (o *PaymentLinkLineItemExternal) SetObject(v ObjectName) {
	o.Object = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PaymentLinkLineItemExternal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PaymentLinkLineItemExternal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PaymentLinkLineItemExternal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PaymentLinkLineItemExternal) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PaymentLinkLineItemExternal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PaymentLinkLineItemExternal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *PaymentLinkLineItemExternal) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentLinkLineItemExternal) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *PaymentLinkLineItemExternal) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *PaymentLinkLineItemExternal) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetPaymentLinkId returns the PaymentLinkId field value
func (o *PaymentLinkLineItemExternal) GetPaymentLinkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentLinkId
}

// GetPaymentLinkIdOk returns a tuple with the PaymentLinkId field value
// and a boolean to check if the value has been set.
func (o *PaymentLinkLineItemExternal) GetPaymentLinkIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentLinkId, true
}

// SetPaymentLinkId sets field value
func (o *PaymentLinkLineItemExternal) SetPaymentLinkId(v string) {
	o.PaymentLinkId = v
}

// GetPriceId returns the PriceId field value
func (o *PaymentLinkLineItemExternal) GetPriceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PriceId
}

// GetPriceIdOk returns a tuple with the PriceId field value
// and a boolean to check if the value has been set.
func (o *PaymentLinkLineItemExternal) GetPriceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceId, true
}

// SetPriceId sets field value
func (o *PaymentLinkLineItemExternal) SetPriceId(v string) {
	o.PriceId = v
}

// GetQuantity returns the Quantity field value
func (o *PaymentLinkLineItemExternal) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *PaymentLinkLineItemExternal) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *PaymentLinkLineItemExternal) SetQuantity(v int32) {
	o.Quantity = v
}

func (o PaymentLinkLineItemExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentLinkLineItemExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	toSerialize["payment_link_id"] = o.PaymentLinkId
	toSerialize["price_id"] = o.PriceId
	toSerialize["quantity"] = o.Quantity
	return toSerialize, nil
}

func (o *PaymentLinkLineItemExternal) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"updated_at",
		"payment_link_id",
		"price_id",
		"quantity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentLinkLineItemExternal := _PaymentLinkLineItemExternal{}

	err = json.Unmarshal(bytes, &varPaymentLinkLineItemExternal)

	if err != nil {
		return err
	}

	*o = PaymentLinkLineItemExternal(varPaymentLinkLineItemExternal)

	return err
}

type NullablePaymentLinkLineItemExternal struct {
	value *PaymentLinkLineItemExternal
	isSet bool
}

func (v NullablePaymentLinkLineItemExternal) Get() *PaymentLinkLineItemExternal {
	return v.value
}

func (v *NullablePaymentLinkLineItemExternal) Set(val *PaymentLinkLineItemExternal) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentLinkLineItemExternal) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentLinkLineItemExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentLinkLineItemExternal(val *PaymentLinkLineItemExternal) *NullablePaymentLinkLineItemExternal {
	return &NullablePaymentLinkLineItemExternal{value: val, isSet: true}
}

func (v NullablePaymentLinkLineItemExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentLinkLineItemExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


