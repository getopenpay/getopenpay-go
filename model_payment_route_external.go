/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the PaymentRouteExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentRouteExternal{}

// PaymentRouteExternal struct for PaymentRouteExternal
type PaymentRouteExternal struct {
	// Unique Identifier of the account.
	AccountId string `json:"account_id"`
	// DateTime at which the object was created, in 'ISO 8601' format.
	CreatedAt time.Time `json:"created_at"`
	// Unique Identifier of the payment route.
	Id string `json:"id"`
	// If true, indicates that this object has been deleted
	IsDeleted *bool `json:"is_deleted,omitempty"`
	// The name of the payment route.
	Name string `json:"name"`
	Object *ObjectName `json:"object,omitempty"`
	// The configuration object for the payment route.
	RouteConfig map[string]interface{} `json:"route_config"`
	// The type of payment route.
	RouteType PaymentRouteType `json:"route_type"`
	// DateTime at which the object was updated, in 'ISO 8601' format.
	UpdatedAt time.Time `json:"updated_at"`
	AdditionalProperties map[string]interface{}
}

type _PaymentRouteExternal PaymentRouteExternal

// NewPaymentRouteExternal instantiates a new PaymentRouteExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentRouteExternal(accountId string, createdAt time.Time, id string, name string, routeConfig map[string]interface{}, routeType PaymentRouteType, updatedAt time.Time) *PaymentRouteExternal {
	this := PaymentRouteExternal{}
	this.AccountId = accountId
	this.CreatedAt = createdAt
	this.Id = id
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	this.Name = name
	this.RouteConfig = routeConfig
	this.RouteType = routeType
	this.UpdatedAt = updatedAt
	return &this
}

// NewPaymentRouteExternalWithDefaults instantiates a new PaymentRouteExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentRouteExternalWithDefaults() *PaymentRouteExternal {
	this := PaymentRouteExternal{}
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	return &this
}

// GetAccountId returns the AccountId field value
func (o *PaymentRouteExternal) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *PaymentRouteExternal) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *PaymentRouteExternal) SetAccountId(v string) {
	o.AccountId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PaymentRouteExternal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PaymentRouteExternal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PaymentRouteExternal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetId returns the Id field value
func (o *PaymentRouteExternal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PaymentRouteExternal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PaymentRouteExternal) SetId(v string) {
	o.Id = v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *PaymentRouteExternal) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRouteExternal) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *PaymentRouteExternal) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *PaymentRouteExternal) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetName returns the Name field value
func (o *PaymentRouteExternal) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PaymentRouteExternal) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PaymentRouteExternal) SetName(v string) {
	o.Name = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *PaymentRouteExternal) GetObject() ObjectName {
	if o == nil || IsNil(o.Object) {
		var ret ObjectName
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentRouteExternal) GetObjectOk() (*ObjectName, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *PaymentRouteExternal) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given ObjectName and assigns it to the Object field.
func (o *PaymentRouteExternal) SetObject(v ObjectName) {
	o.Object = &v
}

// GetRouteConfig returns the RouteConfig field value
func (o *PaymentRouteExternal) GetRouteConfig() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.RouteConfig
}

// GetRouteConfigOk returns a tuple with the RouteConfig field value
// and a boolean to check if the value has been set.
func (o *PaymentRouteExternal) GetRouteConfigOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.RouteConfig, true
}

// SetRouteConfig sets field value
func (o *PaymentRouteExternal) SetRouteConfig(v map[string]interface{}) {
	o.RouteConfig = v
}

// GetRouteType returns the RouteType field value
func (o *PaymentRouteExternal) GetRouteType() PaymentRouteType {
	if o == nil {
		var ret PaymentRouteType
		return ret
	}

	return o.RouteType
}

// GetRouteTypeOk returns a tuple with the RouteType field value
// and a boolean to check if the value has been set.
func (o *PaymentRouteExternal) GetRouteTypeOk() (*PaymentRouteType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RouteType, true
}

// SetRouteType sets field value
func (o *PaymentRouteExternal) SetRouteType(v PaymentRouteType) {
	o.RouteType = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PaymentRouteExternal) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PaymentRouteExternal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PaymentRouteExternal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o PaymentRouteExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentRouteExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_id"] = o.AccountId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["id"] = o.Id
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["route_config"] = o.RouteConfig
	toSerialize["route_type"] = o.RouteType
	toSerialize["updated_at"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentRouteExternal) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_id",
		"created_at",
		"id",
		"name",
		"route_config",
		"route_type",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentRouteExternal := _PaymentRouteExternal{}

	err = json.Unmarshal(data, &varPaymentRouteExternal)

	if err != nil {
		return err
	}

	*o = PaymentRouteExternal(varPaymentRouteExternal)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "id")
		delete(additionalProperties, "is_deleted")
		delete(additionalProperties, "name")
		delete(additionalProperties, "object")
		delete(additionalProperties, "route_config")
		delete(additionalProperties, "route_type")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentRouteExternal struct {
	value *PaymentRouteExternal
	isSet bool
}

func (v NullablePaymentRouteExternal) Get() *PaymentRouteExternal {
	return v.value
}

func (v *NullablePaymentRouteExternal) Set(val *PaymentRouteExternal) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentRouteExternal) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentRouteExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentRouteExternal(val *PaymentRouteExternal) *NullablePaymentRouteExternal {
	return &NullablePaymentRouteExternal{value: val, isSet: true}
}

func (v NullablePaymentRouteExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentRouteExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


