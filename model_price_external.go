/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the PriceExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceExternal{}

// PriceExternal struct for PriceExternal
type PriceExternal struct {
	BillingInterval NullableCalendarIntervalEnum `json:"billing_interval"`
	BillingIntervalCount NullableInt32 `json:"billing_interval_count"`
	// Describes how to compute the price per period.
	BillingScheme BillingSchemeEnum `json:"billing_scheme"`
	// This price can only be purchased in a subscription if subscriptioncontains at least one of these prices.
	CanOnlyBePurchasedWith []string `json:"can_only_be_purchased_with"`
	ContractAutoRenew NullableBool `json:"contract_auto_renew"`
	ContractTermMultiple NullableInt32 `json:"contract_term_multiple"`
	// DateTime at which the object was created, in 'ISO 8601' format.
	CreatedAt time.Time `json:"created_at"`
	// Three-letter ISO currency code, in lowercase.
	Currency CurrencyEnum `json:"currency"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	// If the price can be updated or not.
	EligibleForUpdates bool `json:"eligible_for_updates"`
	// Unique identifier of the price.
	Id string `json:"id"`
	InternalDescription NullableString `json:"internal_description"`
	InvoiceSettings NullableInvoiceSettings `json:"invoice_settings"`
	// Whether the price can be used for new purchases. Price can be activated later.
	IsActive bool `json:"is_active"`
	IsDefault NullableBool `json:"is_default"`
	// If true, indicates that this object has been deleted
	IsDeleted *bool `json:"is_deleted,omitempty"`
	// Whether the price is exclusive or not.
	IsExclusive *bool `json:"is_exclusive,omitempty"`
	// Whether the price is licensed or not.
	IsLicensed bool `json:"is_licensed"`
	// If is_exclusive, this is the list of customers who can see the price.
	ListedExclusivelyForCustomers []string `json:"listed_exclusively_for_customers"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	MeterId NullableString `json:"meter_id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Object *ObjectName `json:"object,omitempty"`
	// Add-ons that can be optionally purchased with this price.
	OptionalAddOns []string `json:"optional_add_ons"`
	// List of price_tiers.
	PriceTiers []PriceTierExternal `json:"price_tiers"`
	// One of one_time or recurring depending on whether the price is for a one-time purchase or a recurring (subscription) purchase.
	PriceType PriceTypeEnum `json:"price_type"`
	Product NullableProductExternal `json:"product,omitempty"`
	// Unique identifier of the product.
	ProductId string `json:"product_id"`
	// Name of the product associated with this price.
	ProductName string `json:"product_name"`
	RecurringDetails NullableRecurringDetails `json:"recurring_details"`
	TiersMode NullablePricingTiersEnum `json:"tiers_mode"`
	// This transformation will be applied on quantity before mulitplying by 'unit_amount_atom'.
	TransformQuantityDivideBy float32 `json:"transform_quantity_divide_by"`
	UnitAmountAtom NullableInt32 `json:"unit_amount_atom"`
	// DateTime at which the object was updated, in 'ISO 8601' format.
	UpdatedAt time.Time `json:"updated_at"`
	AdditionalProperties map[string]interface{}
}

type _PriceExternal PriceExternal

// NewPriceExternal instantiates a new PriceExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceExternal(billingInterval NullableCalendarIntervalEnum, billingIntervalCount NullableInt32, billingScheme BillingSchemeEnum, canOnlyBePurchasedWith []string, contractAutoRenew NullableBool, contractTermMultiple NullableInt32, createdAt time.Time, currency CurrencyEnum, eligibleForUpdates bool, id string, internalDescription NullableString, invoiceSettings NullableInvoiceSettings, isActive bool, isDefault NullableBool, isLicensed bool, listedExclusivelyForCustomers []string, optionalAddOns []string, priceTiers []PriceTierExternal, priceType PriceTypeEnum, productId string, productName string, recurringDetails NullableRecurringDetails, tiersMode NullablePricingTiersEnum, transformQuantityDivideBy float32, unitAmountAtom NullableInt32, updatedAt time.Time) *PriceExternal {
	this := PriceExternal{}
	this.BillingInterval = billingInterval
	this.BillingIntervalCount = billingIntervalCount
	this.BillingScheme = billingScheme
	this.CanOnlyBePurchasedWith = canOnlyBePurchasedWith
	this.ContractAutoRenew = contractAutoRenew
	this.ContractTermMultiple = contractTermMultiple
	this.CreatedAt = createdAt
	this.Currency = currency
	this.EligibleForUpdates = eligibleForUpdates
	this.Id = id
	this.InternalDescription = internalDescription
	this.InvoiceSettings = invoiceSettings
	this.IsActive = isActive
	this.IsDefault = isDefault
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	var isExclusive bool = false
	this.IsExclusive = &isExclusive
	this.IsLicensed = isLicensed
	this.ListedExclusivelyForCustomers = listedExclusivelyForCustomers
	this.OptionalAddOns = optionalAddOns
	this.PriceTiers = priceTiers
	this.PriceType = priceType
	this.ProductId = productId
	this.ProductName = productName
	this.RecurringDetails = recurringDetails
	this.TiersMode = tiersMode
	this.TransformQuantityDivideBy = transformQuantityDivideBy
	this.UnitAmountAtom = unitAmountAtom
	this.UpdatedAt = updatedAt
	return &this
}

// NewPriceExternalWithDefaults instantiates a new PriceExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceExternalWithDefaults() *PriceExternal {
	this := PriceExternal{}
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	var isExclusive bool = false
	this.IsExclusive = &isExclusive
	return &this
}

// GetBillingInterval returns the BillingInterval field value
// If the value is explicit nil, the zero value for CalendarIntervalEnum will be returned
func (o *PriceExternal) GetBillingInterval() CalendarIntervalEnum {
	if o == nil || o.BillingInterval.Get() == nil {
		var ret CalendarIntervalEnum
		return ret
	}

	return *o.BillingInterval.Get()
}

// GetBillingIntervalOk returns a tuple with the BillingInterval field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceExternal) GetBillingIntervalOk() (*CalendarIntervalEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingInterval.Get(), o.BillingInterval.IsSet()
}

// SetBillingInterval sets field value
func (o *PriceExternal) SetBillingInterval(v CalendarIntervalEnum) {
	o.BillingInterval.Set(&v)
}

// GetBillingIntervalCount returns the BillingIntervalCount field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *PriceExternal) GetBillingIntervalCount() int32 {
	if o == nil || o.BillingIntervalCount.Get() == nil {
		var ret int32
		return ret
	}

	return *o.BillingIntervalCount.Get()
}

// GetBillingIntervalCountOk returns a tuple with the BillingIntervalCount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceExternal) GetBillingIntervalCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingIntervalCount.Get(), o.BillingIntervalCount.IsSet()
}

// SetBillingIntervalCount sets field value
func (o *PriceExternal) SetBillingIntervalCount(v int32) {
	o.BillingIntervalCount.Set(&v)
}

// GetBillingScheme returns the BillingScheme field value
func (o *PriceExternal) GetBillingScheme() BillingSchemeEnum {
	if o == nil {
		var ret BillingSchemeEnum
		return ret
	}

	return o.BillingScheme
}

// GetBillingSchemeOk returns a tuple with the BillingScheme field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetBillingSchemeOk() (*BillingSchemeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingScheme, true
}

// SetBillingScheme sets field value
func (o *PriceExternal) SetBillingScheme(v BillingSchemeEnum) {
	o.BillingScheme = v
}

// GetCanOnlyBePurchasedWith returns the CanOnlyBePurchasedWith field value
func (o *PriceExternal) GetCanOnlyBePurchasedWith() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.CanOnlyBePurchasedWith
}

// GetCanOnlyBePurchasedWithOk returns a tuple with the CanOnlyBePurchasedWith field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetCanOnlyBePurchasedWithOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanOnlyBePurchasedWith, true
}

// SetCanOnlyBePurchasedWith sets field value
func (o *PriceExternal) SetCanOnlyBePurchasedWith(v []string) {
	o.CanOnlyBePurchasedWith = v
}

// GetContractAutoRenew returns the ContractAutoRenew field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *PriceExternal) GetContractAutoRenew() bool {
	if o == nil || o.ContractAutoRenew.Get() == nil {
		var ret bool
		return ret
	}

	return *o.ContractAutoRenew.Get()
}

// GetContractAutoRenewOk returns a tuple with the ContractAutoRenew field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceExternal) GetContractAutoRenewOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContractAutoRenew.Get(), o.ContractAutoRenew.IsSet()
}

// SetContractAutoRenew sets field value
func (o *PriceExternal) SetContractAutoRenew(v bool) {
	o.ContractAutoRenew.Set(&v)
}

// GetContractTermMultiple returns the ContractTermMultiple field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *PriceExternal) GetContractTermMultiple() int32 {
	if o == nil || o.ContractTermMultiple.Get() == nil {
		var ret int32
		return ret
	}

	return *o.ContractTermMultiple.Get()
}

// GetContractTermMultipleOk returns a tuple with the ContractTermMultiple field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceExternal) GetContractTermMultipleOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContractTermMultiple.Get(), o.ContractTermMultiple.IsSet()
}

// SetContractTermMultiple sets field value
func (o *PriceExternal) SetContractTermMultiple(v int32) {
	o.ContractTermMultiple.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *PriceExternal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PriceExternal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCurrency returns the Currency field value
func (o *PriceExternal) GetCurrency() CurrencyEnum {
	if o == nil {
		var ret CurrencyEnum
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetCurrencyOk() (*CurrencyEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *PriceExternal) SetCurrency(v CurrencyEnum) {
	o.Currency = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceExternal) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceExternal) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *PriceExternal) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *PriceExternal) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetEligibleForUpdates returns the EligibleForUpdates field value
func (o *PriceExternal) GetEligibleForUpdates() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EligibleForUpdates
}

// GetEligibleForUpdatesOk returns a tuple with the EligibleForUpdates field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetEligibleForUpdatesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EligibleForUpdates, true
}

// SetEligibleForUpdates sets field value
func (o *PriceExternal) SetEligibleForUpdates(v bool) {
	o.EligibleForUpdates = v
}

// GetId returns the Id field value
func (o *PriceExternal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PriceExternal) SetId(v string) {
	o.Id = v
}

// GetInternalDescription returns the InternalDescription field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PriceExternal) GetInternalDescription() string {
	if o == nil || o.InternalDescription.Get() == nil {
		var ret string
		return ret
	}

	return *o.InternalDescription.Get()
}

// GetInternalDescriptionOk returns a tuple with the InternalDescription field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceExternal) GetInternalDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InternalDescription.Get(), o.InternalDescription.IsSet()
}

// SetInternalDescription sets field value
func (o *PriceExternal) SetInternalDescription(v string) {
	o.InternalDescription.Set(&v)
}

// GetInvoiceSettings returns the InvoiceSettings field value
// If the value is explicit nil, the zero value for InvoiceSettings will be returned
func (o *PriceExternal) GetInvoiceSettings() InvoiceSettings {
	if o == nil || o.InvoiceSettings.Get() == nil {
		var ret InvoiceSettings
		return ret
	}

	return *o.InvoiceSettings.Get()
}

// GetInvoiceSettingsOk returns a tuple with the InvoiceSettings field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceExternal) GetInvoiceSettingsOk() (*InvoiceSettings, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceSettings.Get(), o.InvoiceSettings.IsSet()
}

// SetInvoiceSettings sets field value
func (o *PriceExternal) SetInvoiceSettings(v InvoiceSettings) {
	o.InvoiceSettings.Set(&v)
}

// GetIsActive returns the IsActive field value
func (o *PriceExternal) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *PriceExternal) SetIsActive(v bool) {
	o.IsActive = v
}

// GetIsDefault returns the IsDefault field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *PriceExternal) GetIsDefault() bool {
	if o == nil || o.IsDefault.Get() == nil {
		var ret bool
		return ret
	}

	return *o.IsDefault.Get()
}

// GetIsDefaultOk returns a tuple with the IsDefault field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceExternal) GetIsDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsDefault.Get(), o.IsDefault.IsSet()
}

// SetIsDefault sets field value
func (o *PriceExternal) SetIsDefault(v bool) {
	o.IsDefault.Set(&v)
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *PriceExternal) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *PriceExternal) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *PriceExternal) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetIsExclusive returns the IsExclusive field value if set, zero value otherwise.
func (o *PriceExternal) GetIsExclusive() bool {
	if o == nil || IsNil(o.IsExclusive) {
		var ret bool
		return ret
	}
	return *o.IsExclusive
}

// GetIsExclusiveOk returns a tuple with the IsExclusive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetIsExclusiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExclusive) {
		return nil, false
	}
	return o.IsExclusive, true
}

// HasIsExclusive returns a boolean if a field has been set.
func (o *PriceExternal) HasIsExclusive() bool {
	if o != nil && !IsNil(o.IsExclusive) {
		return true
	}

	return false
}

// SetIsExclusive gets a reference to the given bool and assigns it to the IsExclusive field.
func (o *PriceExternal) SetIsExclusive(v bool) {
	o.IsExclusive = &v
}

// GetIsLicensed returns the IsLicensed field value
func (o *PriceExternal) GetIsLicensed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsLicensed
}

// GetIsLicensedOk returns a tuple with the IsLicensed field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetIsLicensedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsLicensed, true
}

// SetIsLicensed sets field value
func (o *PriceExternal) SetIsLicensed(v bool) {
	o.IsLicensed = v
}

// GetListedExclusivelyForCustomers returns the ListedExclusivelyForCustomers field value
func (o *PriceExternal) GetListedExclusivelyForCustomers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ListedExclusivelyForCustomers
}

// GetListedExclusivelyForCustomersOk returns a tuple with the ListedExclusivelyForCustomers field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetListedExclusivelyForCustomersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ListedExclusivelyForCustomers, true
}

// SetListedExclusivelyForCustomers sets field value
func (o *PriceExternal) SetListedExclusivelyForCustomers(v []string) {
	o.ListedExclusivelyForCustomers = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceExternal) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceExternal) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PriceExternal) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *PriceExternal) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetMeterId returns the MeterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceExternal) GetMeterId() string {
	if o == nil || IsNil(o.MeterId.Get()) {
		var ret string
		return ret
	}
	return *o.MeterId.Get()
}

// GetMeterIdOk returns a tuple with the MeterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceExternal) GetMeterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MeterId.Get(), o.MeterId.IsSet()
}

// HasMeterId returns a boolean if a field has been set.
func (o *PriceExternal) HasMeterId() bool {
	if o != nil && o.MeterId.IsSet() {
		return true
	}

	return false
}

// SetMeterId gets a reference to the given NullableString and assigns it to the MeterId field.
func (o *PriceExternal) SetMeterId(v string) {
	o.MeterId.Set(&v)
}
// SetMeterIdNil sets the value for MeterId to be an explicit nil
func (o *PriceExternal) SetMeterIdNil() {
	o.MeterId.Set(nil)
}

// UnsetMeterId ensures that no value is present for MeterId, not even an explicit nil
func (o *PriceExternal) UnsetMeterId() {
	o.MeterId.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceExternal) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceExternal) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *PriceExternal) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *PriceExternal) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *PriceExternal) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *PriceExternal) UnsetName() {
	o.Name.Unset()
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *PriceExternal) GetObject() ObjectName {
	if o == nil || IsNil(o.Object) {
		var ret ObjectName
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetObjectOk() (*ObjectName, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *PriceExternal) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given ObjectName and assigns it to the Object field.
func (o *PriceExternal) SetObject(v ObjectName) {
	o.Object = &v
}

// GetOptionalAddOns returns the OptionalAddOns field value
func (o *PriceExternal) GetOptionalAddOns() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.OptionalAddOns
}

// GetOptionalAddOnsOk returns a tuple with the OptionalAddOns field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetOptionalAddOnsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OptionalAddOns, true
}

// SetOptionalAddOns sets field value
func (o *PriceExternal) SetOptionalAddOns(v []string) {
	o.OptionalAddOns = v
}

// GetPriceTiers returns the PriceTiers field value
func (o *PriceExternal) GetPriceTiers() []PriceTierExternal {
	if o == nil {
		var ret []PriceTierExternal
		return ret
	}

	return o.PriceTiers
}

// GetPriceTiersOk returns a tuple with the PriceTiers field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetPriceTiersOk() ([]PriceTierExternal, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceTiers, true
}

// SetPriceTiers sets field value
func (o *PriceExternal) SetPriceTiers(v []PriceTierExternal) {
	o.PriceTiers = v
}

// GetPriceType returns the PriceType field value
func (o *PriceExternal) GetPriceType() PriceTypeEnum {
	if o == nil {
		var ret PriceTypeEnum
		return ret
	}

	return o.PriceType
}

// GetPriceTypeOk returns a tuple with the PriceType field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetPriceTypeOk() (*PriceTypeEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceType, true
}

// SetPriceType sets field value
func (o *PriceExternal) SetPriceType(v PriceTypeEnum) {
	o.PriceType = v
}

// GetProduct returns the Product field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceExternal) GetProduct() ProductExternal {
	if o == nil || IsNil(o.Product.Get()) {
		var ret ProductExternal
		return ret
	}
	return *o.Product.Get()
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceExternal) GetProductOk() (*ProductExternal, bool) {
	if o == nil {
		return nil, false
	}
	return o.Product.Get(), o.Product.IsSet()
}

// HasProduct returns a boolean if a field has been set.
func (o *PriceExternal) HasProduct() bool {
	if o != nil && o.Product.IsSet() {
		return true
	}

	return false
}

// SetProduct gets a reference to the given NullableProductExternal and assigns it to the Product field.
func (o *PriceExternal) SetProduct(v ProductExternal) {
	o.Product.Set(&v)
}
// SetProductNil sets the value for Product to be an explicit nil
func (o *PriceExternal) SetProductNil() {
	o.Product.Set(nil)
}

// UnsetProduct ensures that no value is present for Product, not even an explicit nil
func (o *PriceExternal) UnsetProduct() {
	o.Product.Unset()
}

// GetProductId returns the ProductId field value
func (o *PriceExternal) GetProductId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetProductIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *PriceExternal) SetProductId(v string) {
	o.ProductId = v
}

// GetProductName returns the ProductName field value
func (o *PriceExternal) GetProductName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetProductNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductName, true
}

// SetProductName sets field value
func (o *PriceExternal) SetProductName(v string) {
	o.ProductName = v
}

// GetRecurringDetails returns the RecurringDetails field value
// If the value is explicit nil, the zero value for RecurringDetails will be returned
func (o *PriceExternal) GetRecurringDetails() RecurringDetails {
	if o == nil || o.RecurringDetails.Get() == nil {
		var ret RecurringDetails
		return ret
	}

	return *o.RecurringDetails.Get()
}

// GetRecurringDetailsOk returns a tuple with the RecurringDetails field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceExternal) GetRecurringDetailsOk() (*RecurringDetails, bool) {
	if o == nil {
		return nil, false
	}
	return o.RecurringDetails.Get(), o.RecurringDetails.IsSet()
}

// SetRecurringDetails sets field value
func (o *PriceExternal) SetRecurringDetails(v RecurringDetails) {
	o.RecurringDetails.Set(&v)
}

// GetTiersMode returns the TiersMode field value
// If the value is explicit nil, the zero value for PricingTiersEnum will be returned
func (o *PriceExternal) GetTiersMode() PricingTiersEnum {
	if o == nil || o.TiersMode.Get() == nil {
		var ret PricingTiersEnum
		return ret
	}

	return *o.TiersMode.Get()
}

// GetTiersModeOk returns a tuple with the TiersMode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceExternal) GetTiersModeOk() (*PricingTiersEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.TiersMode.Get(), o.TiersMode.IsSet()
}

// SetTiersMode sets field value
func (o *PriceExternal) SetTiersMode(v PricingTiersEnum) {
	o.TiersMode.Set(&v)
}

// GetTransformQuantityDivideBy returns the TransformQuantityDivideBy field value
func (o *PriceExternal) GetTransformQuantityDivideBy() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TransformQuantityDivideBy
}

// GetTransformQuantityDivideByOk returns a tuple with the TransformQuantityDivideBy field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetTransformQuantityDivideByOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransformQuantityDivideBy, true
}

// SetTransformQuantityDivideBy sets field value
func (o *PriceExternal) SetTransformQuantityDivideBy(v float32) {
	o.TransformQuantityDivideBy = v
}

// GetUnitAmountAtom returns the UnitAmountAtom field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *PriceExternal) GetUnitAmountAtom() int32 {
	if o == nil || o.UnitAmountAtom.Get() == nil {
		var ret int32
		return ret
	}

	return *o.UnitAmountAtom.Get()
}

// GetUnitAmountAtomOk returns a tuple with the UnitAmountAtom field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceExternal) GetUnitAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitAmountAtom.Get(), o.UnitAmountAtom.IsSet()
}

// SetUnitAmountAtom sets field value
func (o *PriceExternal) SetUnitAmountAtom(v int32) {
	o.UnitAmountAtom.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PriceExternal) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PriceExternal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PriceExternal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o PriceExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["billing_interval"] = o.BillingInterval.Get()
	toSerialize["billing_interval_count"] = o.BillingIntervalCount.Get()
	toSerialize["billing_scheme"] = o.BillingScheme
	toSerialize["can_only_be_purchased_with"] = o.CanOnlyBePurchasedWith
	toSerialize["contract_auto_renew"] = o.ContractAutoRenew.Get()
	toSerialize["contract_term_multiple"] = o.ContractTermMultiple.Get()
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["currency"] = o.Currency
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	toSerialize["eligible_for_updates"] = o.EligibleForUpdates
	toSerialize["id"] = o.Id
	toSerialize["internal_description"] = o.InternalDescription.Get()
	toSerialize["invoice_settings"] = o.InvoiceSettings.Get()
	toSerialize["is_active"] = o.IsActive
	toSerialize["is_default"] = o.IsDefault.Get()
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	if !IsNil(o.IsExclusive) {
		toSerialize["is_exclusive"] = o.IsExclusive
	}
	toSerialize["is_licensed"] = o.IsLicensed
	toSerialize["listed_exclusively_for_customers"] = o.ListedExclusivelyForCustomers
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.MeterId.IsSet() {
		toSerialize["meter_id"] = o.MeterId.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["optional_add_ons"] = o.OptionalAddOns
	toSerialize["price_tiers"] = o.PriceTiers
	toSerialize["price_type"] = o.PriceType
	if o.Product.IsSet() {
		toSerialize["product"] = o.Product.Get()
	}
	toSerialize["product_id"] = o.ProductId
	toSerialize["product_name"] = o.ProductName
	toSerialize["recurring_details"] = o.RecurringDetails.Get()
	toSerialize["tiers_mode"] = o.TiersMode.Get()
	toSerialize["transform_quantity_divide_by"] = o.TransformQuantityDivideBy
	toSerialize["unit_amount_atom"] = o.UnitAmountAtom.Get()
	toSerialize["updated_at"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PriceExternal) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"billing_interval",
		"billing_interval_count",
		"billing_scheme",
		"can_only_be_purchased_with",
		"contract_auto_renew",
		"contract_term_multiple",
		"created_at",
		"currency",
		"eligible_for_updates",
		"id",
		"internal_description",
		"invoice_settings",
		"is_active",
		"is_default",
		"is_licensed",
		"listed_exclusively_for_customers",
		"optional_add_ons",
		"price_tiers",
		"price_type",
		"product_id",
		"product_name",
		"recurring_details",
		"tiers_mode",
		"transform_quantity_divide_by",
		"unit_amount_atom",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPriceExternal := _PriceExternal{}

	err = json.Unmarshal(data, &varPriceExternal)

	if err != nil {
		return err
	}

	*o = PriceExternal(varPriceExternal)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "billing_interval")
		delete(additionalProperties, "billing_interval_count")
		delete(additionalProperties, "billing_scheme")
		delete(additionalProperties, "can_only_be_purchased_with")
		delete(additionalProperties, "contract_auto_renew")
		delete(additionalProperties, "contract_term_multiple")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "custom_fields")
		delete(additionalProperties, "eligible_for_updates")
		delete(additionalProperties, "id")
		delete(additionalProperties, "internal_description")
		delete(additionalProperties, "invoice_settings")
		delete(additionalProperties, "is_active")
		delete(additionalProperties, "is_default")
		delete(additionalProperties, "is_deleted")
		delete(additionalProperties, "is_exclusive")
		delete(additionalProperties, "is_licensed")
		delete(additionalProperties, "listed_exclusively_for_customers")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "meter_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "object")
		delete(additionalProperties, "optional_add_ons")
		delete(additionalProperties, "price_tiers")
		delete(additionalProperties, "price_type")
		delete(additionalProperties, "product")
		delete(additionalProperties, "product_id")
		delete(additionalProperties, "product_name")
		delete(additionalProperties, "recurring_details")
		delete(additionalProperties, "tiers_mode")
		delete(additionalProperties, "transform_quantity_divide_by")
		delete(additionalProperties, "unit_amount_atom")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePriceExternal struct {
	value *PriceExternal
	isSet bool
}

func (v NullablePriceExternal) Get() *PriceExternal {
	return v.value
}

func (v *NullablePriceExternal) Set(val *PriceExternal) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceExternal) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceExternal(val *PriceExternal) *NullablePriceExternal {
	return &NullablePriceExternal{value: val, isSet: true}
}

func (v NullablePriceExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


