/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PriceTierExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceTierExternal{}

// PriceTierExternal struct for PriceTierExternal
type PriceTierExternal struct {
	// DateTime at which the object was created, in 'ISO 8601' format.
	CreatedAt time.Time `json:"created_at"`
	FlatAmountAtom int32 `json:"flat_amount_atom"`
	// Unique identifier for the object.
	Id string `json:"id"`
	// If true, indicates that this object has been deleted
	IsDeleted *bool `json:"is_deleted,omitempty"`
	Object *ObjectName `json:"object,omitempty"`
	UnitAmountAtom int32 `json:"unit_amount_atom"`
	UnitsUpto NullableInt32 `json:"units_upto,omitempty"`
	// DateTime at which the object was updated, in 'ISO 8601' format.
	UpdatedAt time.Time `json:"updated_at"`
}

type _PriceTierExternal PriceTierExternal

// NewPriceTierExternal instantiates a new PriceTierExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceTierExternal(createdAt time.Time, flatAmountAtom int32, id string, unitAmountAtom int32, updatedAt time.Time) *PriceTierExternal {
	this := PriceTierExternal{}
	this.CreatedAt = createdAt
	this.FlatAmountAtom = flatAmountAtom
	this.Id = id
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	this.UnitAmountAtom = unitAmountAtom
	this.UpdatedAt = updatedAt
	return &this
}

// NewPriceTierExternalWithDefaults instantiates a new PriceTierExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceTierExternalWithDefaults() *PriceTierExternal {
	this := PriceTierExternal{}
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *PriceTierExternal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PriceTierExternal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PriceTierExternal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetFlatAmountAtom returns the FlatAmountAtom field value
func (o *PriceTierExternal) GetFlatAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FlatAmountAtom
}

// GetFlatAmountAtomOk returns a tuple with the FlatAmountAtom field value
// and a boolean to check if the value has been set.
func (o *PriceTierExternal) GetFlatAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlatAmountAtom, true
}

// SetFlatAmountAtom sets field value
func (o *PriceTierExternal) SetFlatAmountAtom(v int32) {
	o.FlatAmountAtom = v
}

// GetId returns the Id field value
func (o *PriceTierExternal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PriceTierExternal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PriceTierExternal) SetId(v string) {
	o.Id = v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *PriceTierExternal) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceTierExternal) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *PriceTierExternal) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *PriceTierExternal) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *PriceTierExternal) GetObject() ObjectName {
	if o == nil || IsNil(o.Object) {
		var ret ObjectName
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceTierExternal) GetObjectOk() (*ObjectName, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *PriceTierExternal) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given ObjectName and assigns it to the Object field.
func (o *PriceTierExternal) SetObject(v ObjectName) {
	o.Object = &v
}

// GetUnitAmountAtom returns the UnitAmountAtom field value
func (o *PriceTierExternal) GetUnitAmountAtom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UnitAmountAtom
}

// GetUnitAmountAtomOk returns a tuple with the UnitAmountAtom field value
// and a boolean to check if the value has been set.
func (o *PriceTierExternal) GetUnitAmountAtomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnitAmountAtom, true
}

// SetUnitAmountAtom sets field value
func (o *PriceTierExternal) SetUnitAmountAtom(v int32) {
	o.UnitAmountAtom = v
}

// GetUnitsUpto returns the UnitsUpto field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PriceTierExternal) GetUnitsUpto() int32 {
	if o == nil || IsNil(o.UnitsUpto.Get()) {
		var ret int32
		return ret
	}
	return *o.UnitsUpto.Get()
}

// GetUnitsUptoOk returns a tuple with the UnitsUpto field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PriceTierExternal) GetUnitsUptoOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitsUpto.Get(), o.UnitsUpto.IsSet()
}

// HasUnitsUpto returns a boolean if a field has been set.
func (o *PriceTierExternal) HasUnitsUpto() bool {
	if o != nil && o.UnitsUpto.IsSet() {
		return true
	}

	return false
}

// SetUnitsUpto gets a reference to the given NullableInt32 and assigns it to the UnitsUpto field.
func (o *PriceTierExternal) SetUnitsUpto(v int32) {
	o.UnitsUpto.Set(&v)
}
// SetUnitsUptoNil sets the value for UnitsUpto to be an explicit nil
func (o *PriceTierExternal) SetUnitsUptoNil() {
	o.UnitsUpto.Set(nil)
}

// UnsetUnitsUpto ensures that no value is present for UnitsUpto, not even an explicit nil
func (o *PriceTierExternal) UnsetUnitsUpto() {
	o.UnitsUpto.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PriceTierExternal) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PriceTierExternal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PriceTierExternal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o PriceTierExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceTierExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["flat_amount_atom"] = o.FlatAmountAtom
	toSerialize["id"] = o.Id
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["unit_amount_atom"] = o.UnitAmountAtom
	if o.UnitsUpto.IsSet() {
		toSerialize["units_upto"] = o.UnitsUpto.Get()
	}
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *PriceTierExternal) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"flat_amount_atom",
		"id",
		"unit_amount_atom",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPriceTierExternal := _PriceTierExternal{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPriceTierExternal)

	if err != nil {
		return err
	}

	*o = PriceTierExternal(varPriceTierExternal)

	return err
}

type NullablePriceTierExternal struct {
	value *PriceTierExternal
	isSet bool
}

func (v NullablePriceTierExternal) Get() *PriceTierExternal {
	return v.value
}

func (v *NullablePriceTierExternal) Set(val *PriceTierExternal) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceTierExternal) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceTierExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceTierExternal(val *PriceTierExternal) *NullablePriceTierExternal {
	return &NullablePriceTierExternal{value: val, isSet: true}
}

func (v NullablePriceTierExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceTierExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


