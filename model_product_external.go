/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ProductExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductExternal{}

// ProductExternal struct for ProductExternal
type ProductExternal struct {
	AccountSku NullableString `json:"account_sku"`
	// DateTime at which the object was created, in 'ISO 8601' format.
	CreatedAt time.Time `json:"created_at"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	DefaultPrice NullableString `json:"default_price"`
	Description NullableString `json:"description"`
	// List of product features.
	Features []string `json:"features"`
	// Unique identifier of the product.
	Id string `json:"id"`
	// Whether the product is currently available for purchase.
	IsActive bool `json:"is_active"`
	// If true, indicates that this object has been deleted
	IsDeleted *bool `json:"is_deleted,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Name of product.
	Name string `json:"name"`
	Object *ObjectName `json:"object,omitempty"`
	Prices []PriceExternal `json:"prices"`
	UnitLabel NullableString `json:"unit_label"`
	// DateTime at which the object was updated, in 'ISO 8601' format.
	UpdatedAt time.Time `json:"updated_at"`
}

type _ProductExternal ProductExternal

// NewProductExternal instantiates a new ProductExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductExternal(accountSku NullableString, createdAt time.Time, defaultPrice NullableString, description NullableString, features []string, id string, isActive bool, name string, prices []PriceExternal, unitLabel NullableString, updatedAt time.Time) *ProductExternal {
	this := ProductExternal{}
	this.AccountSku = accountSku
	this.CreatedAt = createdAt
	this.DefaultPrice = defaultPrice
	this.Description = description
	this.Features = features
	this.Id = id
	this.IsActive = isActive
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	this.Name = name
	this.Prices = prices
	this.UnitLabel = unitLabel
	this.UpdatedAt = updatedAt
	return &this
}

// NewProductExternalWithDefaults instantiates a new ProductExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductExternalWithDefaults() *ProductExternal {
	this := ProductExternal{}
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	return &this
}

// GetAccountSku returns the AccountSku field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProductExternal) GetAccountSku() string {
	if o == nil || o.AccountSku.Get() == nil {
		var ret string
		return ret
	}

	return *o.AccountSku.Get()
}

// GetAccountSkuOk returns a tuple with the AccountSku field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductExternal) GetAccountSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountSku.Get(), o.AccountSku.IsSet()
}

// SetAccountSku sets field value
func (o *ProductExternal) SetAccountSku(v string) {
	o.AccountSku.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *ProductExternal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ProductExternal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ProductExternal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductExternal) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductExternal) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *ProductExternal) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *ProductExternal) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetDefaultPrice returns the DefaultPrice field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProductExternal) GetDefaultPrice() string {
	if o == nil || o.DefaultPrice.Get() == nil {
		var ret string
		return ret
	}

	return *o.DefaultPrice.Get()
}

// GetDefaultPriceOk returns a tuple with the DefaultPrice field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductExternal) GetDefaultPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultPrice.Get(), o.DefaultPrice.IsSet()
}

// SetDefaultPrice sets field value
func (o *ProductExternal) SetDefaultPrice(v string) {
	o.DefaultPrice.Set(&v)
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProductExternal) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductExternal) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *ProductExternal) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetFeatures returns the Features field value
func (o *ProductExternal) GetFeatures() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value
// and a boolean to check if the value has been set.
func (o *ProductExternal) GetFeaturesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Features, true
}

// SetFeatures sets field value
func (o *ProductExternal) SetFeatures(v []string) {
	o.Features = v
}

// GetId returns the Id field value
func (o *ProductExternal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProductExternal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProductExternal) SetId(v string) {
	o.Id = v
}

// GetIsActive returns the IsActive field value
func (o *ProductExternal) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *ProductExternal) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *ProductExternal) SetIsActive(v bool) {
	o.IsActive = v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *ProductExternal) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductExternal) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *ProductExternal) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *ProductExternal) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProductExternal) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductExternal) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ProductExternal) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *ProductExternal) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetName returns the Name field value
func (o *ProductExternal) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProductExternal) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProductExternal) SetName(v string) {
	o.Name = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *ProductExternal) GetObject() ObjectName {
	if o == nil || IsNil(o.Object) {
		var ret ObjectName
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductExternal) GetObjectOk() (*ObjectName, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *ProductExternal) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given ObjectName and assigns it to the Object field.
func (o *ProductExternal) SetObject(v ObjectName) {
	o.Object = &v
}

// GetPrices returns the Prices field value
func (o *ProductExternal) GetPrices() []PriceExternal {
	if o == nil {
		var ret []PriceExternal
		return ret
	}

	return o.Prices
}

// GetPricesOk returns a tuple with the Prices field value
// and a boolean to check if the value has been set.
func (o *ProductExternal) GetPricesOk() ([]PriceExternal, bool) {
	if o == nil {
		return nil, false
	}
	return o.Prices, true
}

// SetPrices sets field value
func (o *ProductExternal) SetPrices(v []PriceExternal) {
	o.Prices = v
}

// GetUnitLabel returns the UnitLabel field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProductExternal) GetUnitLabel() string {
	if o == nil || o.UnitLabel.Get() == nil {
		var ret string
		return ret
	}

	return *o.UnitLabel.Get()
}

// GetUnitLabelOk returns a tuple with the UnitLabel field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductExternal) GetUnitLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitLabel.Get(), o.UnitLabel.IsSet()
}

// SetUnitLabel sets field value
func (o *ProductExternal) SetUnitLabel(v string) {
	o.UnitLabel.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ProductExternal) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ProductExternal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ProductExternal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o ProductExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_sku"] = o.AccountSku.Get()
	toSerialize["created_at"] = o.CreatedAt
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	toSerialize["default_price"] = o.DefaultPrice.Get()
	toSerialize["description"] = o.Description.Get()
	toSerialize["features"] = o.Features
	toSerialize["id"] = o.Id
	toSerialize["is_active"] = o.IsActive
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["prices"] = o.Prices
	toSerialize["unit_label"] = o.UnitLabel.Get()
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *ProductExternal) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_sku",
		"created_at",
		"default_price",
		"description",
		"features",
		"id",
		"is_active",
		"name",
		"prices",
		"unit_label",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductExternal := _ProductExternal{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProductExternal)

	if err != nil {
		return err
	}

	*o = ProductExternal(varProductExternal)

	return err
}

type NullableProductExternal struct {
	value *ProductExternal
	isSet bool
}

func (v NullableProductExternal) Get() *ProductExternal {
	return v.value
}

func (v *NullableProductExternal) Set(val *ProductExternal) {
	v.value = val
	v.isSet = true
}

func (v NullableProductExternal) IsSet() bool {
	return v.isSet
}

func (v *NullableProductExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductExternal(val *ProductExternal) *NullableProductExternal {
	return &NullableProductExternal{value: val, isSet: true}
}

func (v NullableProductExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


