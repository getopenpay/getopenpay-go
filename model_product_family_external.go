/*
OpenPay API

super charge your subscription management.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ProductFamilyExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductFamilyExternal{}

// ProductFamilyExternal struct for ProductFamilyExternal
type ProductFamilyExternal struct {
	// Unique identifier of the product family.
	Id string `json:"id"`
	Object *ObjectName `json:"object,omitempty"`
	// DateTime at which the object was created, in 'ISO 8601' format.
	CreatedAt time.Time `json:"created_at"`
	// DateTime at which the object was updated, in 'ISO 8601' format.
	UpdatedAt time.Time `json:"updated_at"`
	// If true, indicates that this object has been deleted
	IsDeleted *bool `json:"is_deleted,omitempty"`
	// Name of the product family.
	Name string `json:"name"`
	Description NullableString `json:"description"`
	Products []string `json:"products"`
	// A JSON object representing the hierarchy within the family.
	Hierarchy *string `json:"hierarchy,omitempty"`
}

type _ProductFamilyExternal ProductFamilyExternal

// NewProductFamilyExternal instantiates a new ProductFamilyExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductFamilyExternal(id string, createdAt time.Time, updatedAt time.Time, name string, description NullableString, products []string) *ProductFamilyExternal {
	this := ProductFamilyExternal{}
	this.Id = id
	var object ObjectName = OBJECTNAME_PRODUCT_FAMILY
	this.Object = &object
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	this.Name = name
	this.Description = description
	this.Products = products
	var hierarchy string = "{}"
	this.Hierarchy = &hierarchy
	return &this
}

// NewProductFamilyExternalWithDefaults instantiates a new ProductFamilyExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductFamilyExternalWithDefaults() *ProductFamilyExternal {
	this := ProductFamilyExternal{}
	var object ObjectName = OBJECTNAME_PRODUCT_FAMILY
	this.Object = &object
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	var hierarchy string = "{}"
	this.Hierarchy = &hierarchy
	return &this
}

// GetId returns the Id field value
func (o *ProductFamilyExternal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProductFamilyExternal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProductFamilyExternal) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *ProductFamilyExternal) GetObject() ObjectName {
	if o == nil || IsNil(o.Object) {
		var ret ObjectName
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductFamilyExternal) GetObjectOk() (*ObjectName, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *ProductFamilyExternal) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given ObjectName and assigns it to the Object field.
func (o *ProductFamilyExternal) SetObject(v ObjectName) {
	o.Object = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ProductFamilyExternal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ProductFamilyExternal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ProductFamilyExternal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ProductFamilyExternal) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ProductFamilyExternal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ProductFamilyExternal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *ProductFamilyExternal) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductFamilyExternal) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *ProductFamilyExternal) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *ProductFamilyExternal) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetName returns the Name field value
func (o *ProductFamilyExternal) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProductFamilyExternal) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProductFamilyExternal) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ProductFamilyExternal) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProductFamilyExternal) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *ProductFamilyExternal) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetProducts returns the Products field value
func (o *ProductFamilyExternal) GetProducts() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Products
}

// GetProductsOk returns a tuple with the Products field value
// and a boolean to check if the value has been set.
func (o *ProductFamilyExternal) GetProductsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Products, true
}

// SetProducts sets field value
func (o *ProductFamilyExternal) SetProducts(v []string) {
	o.Products = v
}

// GetHierarchy returns the Hierarchy field value if set, zero value otherwise.
func (o *ProductFamilyExternal) GetHierarchy() string {
	if o == nil || IsNil(o.Hierarchy) {
		var ret string
		return ret
	}
	return *o.Hierarchy
}

// GetHierarchyOk returns a tuple with the Hierarchy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductFamilyExternal) GetHierarchyOk() (*string, bool) {
	if o == nil || IsNil(o.Hierarchy) {
		return nil, false
	}
	return o.Hierarchy, true
}

// HasHierarchy returns a boolean if a field has been set.
func (o *ProductFamilyExternal) HasHierarchy() bool {
	if o != nil && !IsNil(o.Hierarchy) {
		return true
	}

	return false
}

// SetHierarchy gets a reference to the given string and assigns it to the Hierarchy field.
func (o *ProductFamilyExternal) SetHierarchy(v string) {
	o.Hierarchy = &v
}

func (o ProductFamilyExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductFamilyExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description.Get()
	toSerialize["products"] = o.Products
	if !IsNil(o.Hierarchy) {
		toSerialize["hierarchy"] = o.Hierarchy
	}
	return toSerialize, nil
}

func (o *ProductFamilyExternal) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"updated_at",
		"name",
		"description",
		"products",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductFamilyExternal := _ProductFamilyExternal{}

	err = json.Unmarshal(bytes, &varProductFamilyExternal)

	if err != nil {
		return err
	}

	*o = ProductFamilyExternal(varProductFamilyExternal)

	return err
}

type NullableProductFamilyExternal struct {
	value *ProductFamilyExternal
	isSet bool
}

func (v NullableProductFamilyExternal) Get() *ProductFamilyExternal {
	return v.value
}

func (v *NullableProductFamilyExternal) Set(val *ProductFamilyExternal) {
	v.value = val
	v.isSet = true
}

func (v NullableProductFamilyExternal) IsSet() bool {
	return v.isSet
}

func (v *NullableProductFamilyExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductFamilyExternal(val *ProductFamilyExternal) *NullableProductFamilyExternal {
	return &NullableProductFamilyExternal{value: val, isSet: true}
}

func (v NullableProductFamilyExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductFamilyExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


