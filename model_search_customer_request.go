/*
OpenPay API

super charge your subscription management.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"fmt"
)

// checks if the SearchCustomerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCustomerRequest{}

// SearchCustomerRequest struct for SearchCustomerRequest
type SearchCustomerRequest struct {
	// Page number
	PageNumber *int32 `json:"page_number,omitempty"`
	// Page size
	PageSize *int32 `json:"page_size,omitempty"`
	// The search query string in limited Lucene Query Syntax. Query is case insensitive.     Limitations:        1. You can combine multiple query clauses in a search by either separating them with a space, or using the AND or OR keywords (case insensitive). By default, the API combines clauses with AND logic. AND and OR operators are mutually exclusive.       2. Nesting of Queries by ( ) is not supported.     Example searches.       1. search by exact field. example: `name:'field_name'`       2. search by wildcard. example: `name:'*sub_string_1*'`, `name:'prefix_string*'`       3. range search using [], both bounds are included in result. example: `amount:[100 TO *]`, `amount:[10 TO 100]`.     
	Query string `json:"query"`
}

type _SearchCustomerRequest SearchCustomerRequest

// NewSearchCustomerRequest instantiates a new SearchCustomerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCustomerRequest(query string) *SearchCustomerRequest {
	this := SearchCustomerRequest{}
	var pageNumber int32 = 1
	this.PageNumber = &pageNumber
	var pageSize int32 = 100
	this.PageSize = &pageSize
	this.Query = query
	return &this
}

// NewSearchCustomerRequestWithDefaults instantiates a new SearchCustomerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCustomerRequestWithDefaults() *SearchCustomerRequest {
	this := SearchCustomerRequest{}
	var pageNumber int32 = 1
	this.PageNumber = &pageNumber
	var pageSize int32 = 100
	this.PageSize = &pageSize
	return &this
}

// GetPageNumber returns the PageNumber field value if set, zero value otherwise.
func (o *SearchCustomerRequest) GetPageNumber() int32 {
	if o == nil || IsNil(o.PageNumber) {
		var ret int32
		return ret
	}
	return *o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCustomerRequest) GetPageNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.PageNumber) {
		return nil, false
	}
	return o.PageNumber, true
}

// HasPageNumber returns a boolean if a field has been set.
func (o *SearchCustomerRequest) HasPageNumber() bool {
	if o != nil && !IsNil(o.PageNumber) {
		return true
	}

	return false
}

// SetPageNumber gets a reference to the given int32 and assigns it to the PageNumber field.
func (o *SearchCustomerRequest) SetPageNumber(v int32) {
	o.PageNumber = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *SearchCustomerRequest) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCustomerRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *SearchCustomerRequest) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *SearchCustomerRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetQuery returns the Query field value
func (o *SearchCustomerRequest) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *SearchCustomerRequest) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *SearchCustomerRequest) SetQuery(v string) {
	o.Query = v
}

func (o SearchCustomerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCustomerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PageNumber) {
		toSerialize["page_number"] = o.PageNumber
	}
	if !IsNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	toSerialize["query"] = o.Query
	return toSerialize, nil
}

func (o *SearchCustomerRequest) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"query",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSearchCustomerRequest := _SearchCustomerRequest{}

	err = json.Unmarshal(bytes, &varSearchCustomerRequest)

	if err != nil {
		return err
	}

	*o = SearchCustomerRequest(varSearchCustomerRequest)

	return err
}

type NullableSearchCustomerRequest struct {
	value *SearchCustomerRequest
	isSet bool
}

func (v NullableSearchCustomerRequest) Get() *SearchCustomerRequest {
	return v.value
}

func (v *NullableSearchCustomerRequest) Set(val *SearchCustomerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCustomerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCustomerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCustomerRequest(val *SearchCustomerRequest) *NullableSearchCustomerRequest {
	return &NullableSearchCustomerRequest{value: val, isSet: true}
}

func (v NullableSearchCustomerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCustomerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


