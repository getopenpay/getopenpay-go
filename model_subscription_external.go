/*
OpenPay API

super charge your subscription management.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the SubscriptionExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionExternal{}

// SubscriptionExternal struct for SubscriptionExternal
type SubscriptionExternal struct {
	// Unique Identifier of the subscription.
	Id string `json:"id"`
	Object *ObjectName `json:"object,omitempty"`
	// DateTime at which the object was created, in 'ISO 8601' format.
	CreatedAt time.Time `json:"created_at"`
	// DateTime at which the object was updated, in 'ISO 8601' format.
	UpdatedAt time.Time `json:"updated_at"`
	// If true, indicates that this object has been deleted
	IsDeleted *bool `json:"is_deleted,omitempty"`
	// Name for this subscription.
	Name string `json:"name"`
	// Unique Identifier of the account.
	AccountId string `json:"account_id"`
	// Unique Identifier of the customer.
	CustomerId string `json:"customer_id"`
	Description NullableString `json:"description"`
	Status SubscriptionStatusEnum `json:"status"`
	// Very beginning of the subscription, in 'ISO 8601' format.
	InitialStart time.Time `json:"initial_start"`
	// Starting of the current billing period, in 'ISO 8601' format.
	CurrentPeriodStart time.Time `json:"current_period_start"`
	// End of the current billing period, in 'ISO 8601' format.
	CurrentPeriodEnd time.Time `json:"current_period_end"`
	DefaultPaymentMethodId NullableString `json:"default_payment_method_id"`
	// Whether this subscription should cancel at the end of contract or billing cycle.
	CancelAtEnd bool `json:"cancel_at_end"`
	PauseAtEnd NullableBool `json:"pause_at_end,omitempty"`
	PauseForCycles NullableInt32 `json:"pause_for_cycles,omitempty"`
	BillingInterval NullableCalendarIntervalEnum `json:"billing_interval,omitempty"`
	BillingIntervalCount NullableInt32 `json:"billing_interval_count,omitempty"`
	ContractStart NullableTime `json:"contract_start,omitempty"`
	ContractAutoRenew NullableBool `json:"contract_auto_renew,omitempty"`
	Currency NullableCurrencyEnum `json:"currency"`
	SubscriptionItems []SubscriptionItemExternal `json:"subscription_items"`
	CancellationDetails NullableSubscriptionCancellationDetails `json:"cancellation_details,omitempty"`
	CancelledAt NullableTime `json:"cancelled_at"`
	TrialStart NullableTime `json:"trial_start,omitempty"`
	TrialEnd NullableTime `json:"trial_end,omitempty"`
	Discount NullableDiscountExternal `json:"discount,omitempty"`
	TotalBillingCycles NullableInt32 `json:"total_billing_cycles,omitempty"`
	RemainingBillingCycles NullableInt32 `json:"remaining_billing_cycles,omitempty"`
	PausedAt NullableTime `json:"paused_at,omitempty"`
	ResumesAt NullableTime `json:"resumes_at,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	CollectionMethod CollectionMethodEnum `json:"collection_method"`
	NetD NullableInt32 `json:"net_d"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	RenewsAt NullableTime `json:"renews_at,omitempty"`
}

type _SubscriptionExternal SubscriptionExternal

// NewSubscriptionExternal instantiates a new SubscriptionExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionExternal(id string, createdAt time.Time, updatedAt time.Time, name string, accountId string, customerId string, description NullableString, status SubscriptionStatusEnum, initialStart time.Time, currentPeriodStart time.Time, currentPeriodEnd time.Time, defaultPaymentMethodId NullableString, cancelAtEnd bool, currency NullableCurrencyEnum, subscriptionItems []SubscriptionItemExternal, cancelledAt NullableTime, collectionMethod CollectionMethodEnum, netD NullableInt32) *SubscriptionExternal {
	this := SubscriptionExternal{}
	this.Id = id
	var object ObjectName = OBJECTNAME_SUBSCRIPTION
	this.Object = &object
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	this.Name = name
	this.AccountId = accountId
	this.CustomerId = customerId
	this.Description = description
	this.Status = status
	this.InitialStart = initialStart
	this.CurrentPeriodStart = currentPeriodStart
	this.CurrentPeriodEnd = currentPeriodEnd
	this.DefaultPaymentMethodId = defaultPaymentMethodId
	this.CancelAtEnd = cancelAtEnd
	this.Currency = currency
	this.SubscriptionItems = subscriptionItems
	this.CancelledAt = cancelledAt
	this.CollectionMethod = collectionMethod
	this.NetD = netD
	return &this
}

// NewSubscriptionExternalWithDefaults instantiates a new SubscriptionExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionExternalWithDefaults() *SubscriptionExternal {
	this := SubscriptionExternal{}
	var object ObjectName = OBJECTNAME_SUBSCRIPTION
	this.Object = &object
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	return &this
}

// GetId returns the Id field value
func (o *SubscriptionExternal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SubscriptionExternal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SubscriptionExternal) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *SubscriptionExternal) GetObject() ObjectName {
	if o == nil || IsNil(o.Object) {
		var ret ObjectName
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionExternal) GetObjectOk() (*ObjectName, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given ObjectName and assigns it to the Object field.
func (o *SubscriptionExternal) SetObject(v ObjectName) {
	o.Object = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SubscriptionExternal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SubscriptionExternal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SubscriptionExternal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *SubscriptionExternal) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *SubscriptionExternal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *SubscriptionExternal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *SubscriptionExternal) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionExternal) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *SubscriptionExternal) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetName returns the Name field value
func (o *SubscriptionExternal) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SubscriptionExternal) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SubscriptionExternal) SetName(v string) {
	o.Name = v
}

// GetAccountId returns the AccountId field value
func (o *SubscriptionExternal) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *SubscriptionExternal) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *SubscriptionExternal) SetAccountId(v string) {
	o.AccountId = v
}

// GetCustomerId returns the CustomerId field value
func (o *SubscriptionExternal) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *SubscriptionExternal) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *SubscriptionExternal) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SubscriptionExternal) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *SubscriptionExternal) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetStatus returns the Status field value
func (o *SubscriptionExternal) GetStatus() SubscriptionStatusEnum {
	if o == nil {
		var ret SubscriptionStatusEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SubscriptionExternal) GetStatusOk() (*SubscriptionStatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SubscriptionExternal) SetStatus(v SubscriptionStatusEnum) {
	o.Status = v
}

// GetInitialStart returns the InitialStart field value
func (o *SubscriptionExternal) GetInitialStart() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.InitialStart
}

// GetInitialStartOk returns a tuple with the InitialStart field value
// and a boolean to check if the value has been set.
func (o *SubscriptionExternal) GetInitialStartOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InitialStart, true
}

// SetInitialStart sets field value
func (o *SubscriptionExternal) SetInitialStart(v time.Time) {
	o.InitialStart = v
}

// GetCurrentPeriodStart returns the CurrentPeriodStart field value
func (o *SubscriptionExternal) GetCurrentPeriodStart() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CurrentPeriodStart
}

// GetCurrentPeriodStartOk returns a tuple with the CurrentPeriodStart field value
// and a boolean to check if the value has been set.
func (o *SubscriptionExternal) GetCurrentPeriodStartOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentPeriodStart, true
}

// SetCurrentPeriodStart sets field value
func (o *SubscriptionExternal) SetCurrentPeriodStart(v time.Time) {
	o.CurrentPeriodStart = v
}

// GetCurrentPeriodEnd returns the CurrentPeriodEnd field value
func (o *SubscriptionExternal) GetCurrentPeriodEnd() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CurrentPeriodEnd
}

// GetCurrentPeriodEndOk returns a tuple with the CurrentPeriodEnd field value
// and a boolean to check if the value has been set.
func (o *SubscriptionExternal) GetCurrentPeriodEndOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentPeriodEnd, true
}

// SetCurrentPeriodEnd sets field value
func (o *SubscriptionExternal) SetCurrentPeriodEnd(v time.Time) {
	o.CurrentPeriodEnd = v
}

// GetDefaultPaymentMethodId returns the DefaultPaymentMethodId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SubscriptionExternal) GetDefaultPaymentMethodId() string {
	if o == nil || o.DefaultPaymentMethodId.Get() == nil {
		var ret string
		return ret
	}

	return *o.DefaultPaymentMethodId.Get()
}

// GetDefaultPaymentMethodIdOk returns a tuple with the DefaultPaymentMethodId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetDefaultPaymentMethodIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultPaymentMethodId.Get(), o.DefaultPaymentMethodId.IsSet()
}

// SetDefaultPaymentMethodId sets field value
func (o *SubscriptionExternal) SetDefaultPaymentMethodId(v string) {
	o.DefaultPaymentMethodId.Set(&v)
}

// GetCancelAtEnd returns the CancelAtEnd field value
func (o *SubscriptionExternal) GetCancelAtEnd() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CancelAtEnd
}

// GetCancelAtEndOk returns a tuple with the CancelAtEnd field value
// and a boolean to check if the value has been set.
func (o *SubscriptionExternal) GetCancelAtEndOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CancelAtEnd, true
}

// SetCancelAtEnd sets field value
func (o *SubscriptionExternal) SetCancelAtEnd(v bool) {
	o.CancelAtEnd = v
}

// GetPauseAtEnd returns the PauseAtEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetPauseAtEnd() bool {
	if o == nil || IsNil(o.PauseAtEnd.Get()) {
		var ret bool
		return ret
	}
	return *o.PauseAtEnd.Get()
}

// GetPauseAtEndOk returns a tuple with the PauseAtEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetPauseAtEndOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PauseAtEnd.Get(), o.PauseAtEnd.IsSet()
}

// HasPauseAtEnd returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasPauseAtEnd() bool {
	if o != nil && o.PauseAtEnd.IsSet() {
		return true
	}

	return false
}

// SetPauseAtEnd gets a reference to the given NullableBool and assigns it to the PauseAtEnd field.
func (o *SubscriptionExternal) SetPauseAtEnd(v bool) {
	o.PauseAtEnd.Set(&v)
}
// SetPauseAtEndNil sets the value for PauseAtEnd to be an explicit nil
func (o *SubscriptionExternal) SetPauseAtEndNil() {
	o.PauseAtEnd.Set(nil)
}

// UnsetPauseAtEnd ensures that no value is present for PauseAtEnd, not even an explicit nil
func (o *SubscriptionExternal) UnsetPauseAtEnd() {
	o.PauseAtEnd.Unset()
}

// GetPauseForCycles returns the PauseForCycles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetPauseForCycles() int32 {
	if o == nil || IsNil(o.PauseForCycles.Get()) {
		var ret int32
		return ret
	}
	return *o.PauseForCycles.Get()
}

// GetPauseForCyclesOk returns a tuple with the PauseForCycles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetPauseForCyclesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PauseForCycles.Get(), o.PauseForCycles.IsSet()
}

// HasPauseForCycles returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasPauseForCycles() bool {
	if o != nil && o.PauseForCycles.IsSet() {
		return true
	}

	return false
}

// SetPauseForCycles gets a reference to the given NullableInt32 and assigns it to the PauseForCycles field.
func (o *SubscriptionExternal) SetPauseForCycles(v int32) {
	o.PauseForCycles.Set(&v)
}
// SetPauseForCyclesNil sets the value for PauseForCycles to be an explicit nil
func (o *SubscriptionExternal) SetPauseForCyclesNil() {
	o.PauseForCycles.Set(nil)
}

// UnsetPauseForCycles ensures that no value is present for PauseForCycles, not even an explicit nil
func (o *SubscriptionExternal) UnsetPauseForCycles() {
	o.PauseForCycles.Unset()
}

// GetBillingInterval returns the BillingInterval field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetBillingInterval() CalendarIntervalEnum {
	if o == nil || IsNil(o.BillingInterval.Get()) {
		var ret CalendarIntervalEnum
		return ret
	}
	return *o.BillingInterval.Get()
}

// GetBillingIntervalOk returns a tuple with the BillingInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetBillingIntervalOk() (*CalendarIntervalEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingInterval.Get(), o.BillingInterval.IsSet()
}

// HasBillingInterval returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasBillingInterval() bool {
	if o != nil && o.BillingInterval.IsSet() {
		return true
	}

	return false
}

// SetBillingInterval gets a reference to the given NullableCalendarIntervalEnum and assigns it to the BillingInterval field.
func (o *SubscriptionExternal) SetBillingInterval(v CalendarIntervalEnum) {
	o.BillingInterval.Set(&v)
}
// SetBillingIntervalNil sets the value for BillingInterval to be an explicit nil
func (o *SubscriptionExternal) SetBillingIntervalNil() {
	o.BillingInterval.Set(nil)
}

// UnsetBillingInterval ensures that no value is present for BillingInterval, not even an explicit nil
func (o *SubscriptionExternal) UnsetBillingInterval() {
	o.BillingInterval.Unset()
}

// GetBillingIntervalCount returns the BillingIntervalCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetBillingIntervalCount() int32 {
	if o == nil || IsNil(o.BillingIntervalCount.Get()) {
		var ret int32
		return ret
	}
	return *o.BillingIntervalCount.Get()
}

// GetBillingIntervalCountOk returns a tuple with the BillingIntervalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetBillingIntervalCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingIntervalCount.Get(), o.BillingIntervalCount.IsSet()
}

// HasBillingIntervalCount returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasBillingIntervalCount() bool {
	if o != nil && o.BillingIntervalCount.IsSet() {
		return true
	}

	return false
}

// SetBillingIntervalCount gets a reference to the given NullableInt32 and assigns it to the BillingIntervalCount field.
func (o *SubscriptionExternal) SetBillingIntervalCount(v int32) {
	o.BillingIntervalCount.Set(&v)
}
// SetBillingIntervalCountNil sets the value for BillingIntervalCount to be an explicit nil
func (o *SubscriptionExternal) SetBillingIntervalCountNil() {
	o.BillingIntervalCount.Set(nil)
}

// UnsetBillingIntervalCount ensures that no value is present for BillingIntervalCount, not even an explicit nil
func (o *SubscriptionExternal) UnsetBillingIntervalCount() {
	o.BillingIntervalCount.Unset()
}

// GetContractStart returns the ContractStart field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetContractStart() time.Time {
	if o == nil || IsNil(o.ContractStart.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ContractStart.Get()
}

// GetContractStartOk returns a tuple with the ContractStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetContractStartOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContractStart.Get(), o.ContractStart.IsSet()
}

// HasContractStart returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasContractStart() bool {
	if o != nil && o.ContractStart.IsSet() {
		return true
	}

	return false
}

// SetContractStart gets a reference to the given NullableTime and assigns it to the ContractStart field.
func (o *SubscriptionExternal) SetContractStart(v time.Time) {
	o.ContractStart.Set(&v)
}
// SetContractStartNil sets the value for ContractStart to be an explicit nil
func (o *SubscriptionExternal) SetContractStartNil() {
	o.ContractStart.Set(nil)
}

// UnsetContractStart ensures that no value is present for ContractStart, not even an explicit nil
func (o *SubscriptionExternal) UnsetContractStart() {
	o.ContractStart.Unset()
}

// GetContractAutoRenew returns the ContractAutoRenew field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetContractAutoRenew() bool {
	if o == nil || IsNil(o.ContractAutoRenew.Get()) {
		var ret bool
		return ret
	}
	return *o.ContractAutoRenew.Get()
}

// GetContractAutoRenewOk returns a tuple with the ContractAutoRenew field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetContractAutoRenewOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContractAutoRenew.Get(), o.ContractAutoRenew.IsSet()
}

// HasContractAutoRenew returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasContractAutoRenew() bool {
	if o != nil && o.ContractAutoRenew.IsSet() {
		return true
	}

	return false
}

// SetContractAutoRenew gets a reference to the given NullableBool and assigns it to the ContractAutoRenew field.
func (o *SubscriptionExternal) SetContractAutoRenew(v bool) {
	o.ContractAutoRenew.Set(&v)
}
// SetContractAutoRenewNil sets the value for ContractAutoRenew to be an explicit nil
func (o *SubscriptionExternal) SetContractAutoRenewNil() {
	o.ContractAutoRenew.Set(nil)
}

// UnsetContractAutoRenew ensures that no value is present for ContractAutoRenew, not even an explicit nil
func (o *SubscriptionExternal) UnsetContractAutoRenew() {
	o.ContractAutoRenew.Unset()
}

// GetCurrency returns the Currency field value
// If the value is explicit nil, the zero value for CurrencyEnum will be returned
func (o *SubscriptionExternal) GetCurrency() CurrencyEnum {
	if o == nil || o.Currency.Get() == nil {
		var ret CurrencyEnum
		return ret
	}

	return *o.Currency.Get()
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetCurrencyOk() (*CurrencyEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.Currency.Get(), o.Currency.IsSet()
}

// SetCurrency sets field value
func (o *SubscriptionExternal) SetCurrency(v CurrencyEnum) {
	o.Currency.Set(&v)
}

// GetSubscriptionItems returns the SubscriptionItems field value
func (o *SubscriptionExternal) GetSubscriptionItems() []SubscriptionItemExternal {
	if o == nil {
		var ret []SubscriptionItemExternal
		return ret
	}

	return o.SubscriptionItems
}

// GetSubscriptionItemsOk returns a tuple with the SubscriptionItems field value
// and a boolean to check if the value has been set.
func (o *SubscriptionExternal) GetSubscriptionItemsOk() ([]SubscriptionItemExternal, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriptionItems, true
}

// SetSubscriptionItems sets field value
func (o *SubscriptionExternal) SetSubscriptionItems(v []SubscriptionItemExternal) {
	o.SubscriptionItems = v
}

// GetCancellationDetails returns the CancellationDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetCancellationDetails() SubscriptionCancellationDetails {
	if o == nil || IsNil(o.CancellationDetails.Get()) {
		var ret SubscriptionCancellationDetails
		return ret
	}
	return *o.CancellationDetails.Get()
}

// GetCancellationDetailsOk returns a tuple with the CancellationDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetCancellationDetailsOk() (*SubscriptionCancellationDetails, bool) {
	if o == nil {
		return nil, false
	}
	return o.CancellationDetails.Get(), o.CancellationDetails.IsSet()
}

// HasCancellationDetails returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasCancellationDetails() bool {
	if o != nil && o.CancellationDetails.IsSet() {
		return true
	}

	return false
}

// SetCancellationDetails gets a reference to the given NullableSubscriptionCancellationDetails and assigns it to the CancellationDetails field.
func (o *SubscriptionExternal) SetCancellationDetails(v SubscriptionCancellationDetails) {
	o.CancellationDetails.Set(&v)
}
// SetCancellationDetailsNil sets the value for CancellationDetails to be an explicit nil
func (o *SubscriptionExternal) SetCancellationDetailsNil() {
	o.CancellationDetails.Set(nil)
}

// UnsetCancellationDetails ensures that no value is present for CancellationDetails, not even an explicit nil
func (o *SubscriptionExternal) UnsetCancellationDetails() {
	o.CancellationDetails.Unset()
}

// GetCancelledAt returns the CancelledAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *SubscriptionExternal) GetCancelledAt() time.Time {
	if o == nil || o.CancelledAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CancelledAt.Get()
}

// GetCancelledAtOk returns a tuple with the CancelledAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetCancelledAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CancelledAt.Get(), o.CancelledAt.IsSet()
}

// SetCancelledAt sets field value
func (o *SubscriptionExternal) SetCancelledAt(v time.Time) {
	o.CancelledAt.Set(&v)
}

// GetTrialStart returns the TrialStart field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetTrialStart() time.Time {
	if o == nil || IsNil(o.TrialStart.Get()) {
		var ret time.Time
		return ret
	}
	return *o.TrialStart.Get()
}

// GetTrialStartOk returns a tuple with the TrialStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetTrialStartOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialStart.Get(), o.TrialStart.IsSet()
}

// HasTrialStart returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasTrialStart() bool {
	if o != nil && o.TrialStart.IsSet() {
		return true
	}

	return false
}

// SetTrialStart gets a reference to the given NullableTime and assigns it to the TrialStart field.
func (o *SubscriptionExternal) SetTrialStart(v time.Time) {
	o.TrialStart.Set(&v)
}
// SetTrialStartNil sets the value for TrialStart to be an explicit nil
func (o *SubscriptionExternal) SetTrialStartNil() {
	o.TrialStart.Set(nil)
}

// UnsetTrialStart ensures that no value is present for TrialStart, not even an explicit nil
func (o *SubscriptionExternal) UnsetTrialStart() {
	o.TrialStart.Unset()
}

// GetTrialEnd returns the TrialEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetTrialEnd() time.Time {
	if o == nil || IsNil(o.TrialEnd.Get()) {
		var ret time.Time
		return ret
	}
	return *o.TrialEnd.Get()
}

// GetTrialEndOk returns a tuple with the TrialEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetTrialEndOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialEnd.Get(), o.TrialEnd.IsSet()
}

// HasTrialEnd returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasTrialEnd() bool {
	if o != nil && o.TrialEnd.IsSet() {
		return true
	}

	return false
}

// SetTrialEnd gets a reference to the given NullableTime and assigns it to the TrialEnd field.
func (o *SubscriptionExternal) SetTrialEnd(v time.Time) {
	o.TrialEnd.Set(&v)
}
// SetTrialEndNil sets the value for TrialEnd to be an explicit nil
func (o *SubscriptionExternal) SetTrialEndNil() {
	o.TrialEnd.Set(nil)
}

// UnsetTrialEnd ensures that no value is present for TrialEnd, not even an explicit nil
func (o *SubscriptionExternal) UnsetTrialEnd() {
	o.TrialEnd.Unset()
}

// GetDiscount returns the Discount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetDiscount() DiscountExternal {
	if o == nil || IsNil(o.Discount.Get()) {
		var ret DiscountExternal
		return ret
	}
	return *o.Discount.Get()
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetDiscountOk() (*DiscountExternal, bool) {
	if o == nil {
		return nil, false
	}
	return o.Discount.Get(), o.Discount.IsSet()
}

// HasDiscount returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasDiscount() bool {
	if o != nil && o.Discount.IsSet() {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given NullableDiscountExternal and assigns it to the Discount field.
func (o *SubscriptionExternal) SetDiscount(v DiscountExternal) {
	o.Discount.Set(&v)
}
// SetDiscountNil sets the value for Discount to be an explicit nil
func (o *SubscriptionExternal) SetDiscountNil() {
	o.Discount.Set(nil)
}

// UnsetDiscount ensures that no value is present for Discount, not even an explicit nil
func (o *SubscriptionExternal) UnsetDiscount() {
	o.Discount.Unset()
}

// GetTotalBillingCycles returns the TotalBillingCycles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetTotalBillingCycles() int32 {
	if o == nil || IsNil(o.TotalBillingCycles.Get()) {
		var ret int32
		return ret
	}
	return *o.TotalBillingCycles.Get()
}

// GetTotalBillingCyclesOk returns a tuple with the TotalBillingCycles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetTotalBillingCyclesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalBillingCycles.Get(), o.TotalBillingCycles.IsSet()
}

// HasTotalBillingCycles returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasTotalBillingCycles() bool {
	if o != nil && o.TotalBillingCycles.IsSet() {
		return true
	}

	return false
}

// SetTotalBillingCycles gets a reference to the given NullableInt32 and assigns it to the TotalBillingCycles field.
func (o *SubscriptionExternal) SetTotalBillingCycles(v int32) {
	o.TotalBillingCycles.Set(&v)
}
// SetTotalBillingCyclesNil sets the value for TotalBillingCycles to be an explicit nil
func (o *SubscriptionExternal) SetTotalBillingCyclesNil() {
	o.TotalBillingCycles.Set(nil)
}

// UnsetTotalBillingCycles ensures that no value is present for TotalBillingCycles, not even an explicit nil
func (o *SubscriptionExternal) UnsetTotalBillingCycles() {
	o.TotalBillingCycles.Unset()
}

// GetRemainingBillingCycles returns the RemainingBillingCycles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetRemainingBillingCycles() int32 {
	if o == nil || IsNil(o.RemainingBillingCycles.Get()) {
		var ret int32
		return ret
	}
	return *o.RemainingBillingCycles.Get()
}

// GetRemainingBillingCyclesOk returns a tuple with the RemainingBillingCycles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetRemainingBillingCyclesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemainingBillingCycles.Get(), o.RemainingBillingCycles.IsSet()
}

// HasRemainingBillingCycles returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasRemainingBillingCycles() bool {
	if o != nil && o.RemainingBillingCycles.IsSet() {
		return true
	}

	return false
}

// SetRemainingBillingCycles gets a reference to the given NullableInt32 and assigns it to the RemainingBillingCycles field.
func (o *SubscriptionExternal) SetRemainingBillingCycles(v int32) {
	o.RemainingBillingCycles.Set(&v)
}
// SetRemainingBillingCyclesNil sets the value for RemainingBillingCycles to be an explicit nil
func (o *SubscriptionExternal) SetRemainingBillingCyclesNil() {
	o.RemainingBillingCycles.Set(nil)
}

// UnsetRemainingBillingCycles ensures that no value is present for RemainingBillingCycles, not even an explicit nil
func (o *SubscriptionExternal) UnsetRemainingBillingCycles() {
	o.RemainingBillingCycles.Unset()
}

// GetPausedAt returns the PausedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetPausedAt() time.Time {
	if o == nil || IsNil(o.PausedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.PausedAt.Get()
}

// GetPausedAtOk returns a tuple with the PausedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetPausedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.PausedAt.Get(), o.PausedAt.IsSet()
}

// HasPausedAt returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasPausedAt() bool {
	if o != nil && o.PausedAt.IsSet() {
		return true
	}

	return false
}

// SetPausedAt gets a reference to the given NullableTime and assigns it to the PausedAt field.
func (o *SubscriptionExternal) SetPausedAt(v time.Time) {
	o.PausedAt.Set(&v)
}
// SetPausedAtNil sets the value for PausedAt to be an explicit nil
func (o *SubscriptionExternal) SetPausedAtNil() {
	o.PausedAt.Set(nil)
}

// UnsetPausedAt ensures that no value is present for PausedAt, not even an explicit nil
func (o *SubscriptionExternal) UnsetPausedAt() {
	o.PausedAt.Unset()
}

// GetResumesAt returns the ResumesAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetResumesAt() time.Time {
	if o == nil || IsNil(o.ResumesAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ResumesAt.Get()
}

// GetResumesAtOk returns a tuple with the ResumesAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetResumesAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResumesAt.Get(), o.ResumesAt.IsSet()
}

// HasResumesAt returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasResumesAt() bool {
	if o != nil && o.ResumesAt.IsSet() {
		return true
	}

	return false
}

// SetResumesAt gets a reference to the given NullableTime and assigns it to the ResumesAt field.
func (o *SubscriptionExternal) SetResumesAt(v time.Time) {
	o.ResumesAt.Set(&v)
}
// SetResumesAtNil sets the value for ResumesAt to be an explicit nil
func (o *SubscriptionExternal) SetResumesAtNil() {
	o.ResumesAt.Set(nil)
}

// UnsetResumesAt ensures that no value is present for ResumesAt, not even an explicit nil
func (o *SubscriptionExternal) UnsetResumesAt() {
	o.ResumesAt.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *SubscriptionExternal) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetCollectionMethod returns the CollectionMethod field value
func (o *SubscriptionExternal) GetCollectionMethod() CollectionMethodEnum {
	if o == nil {
		var ret CollectionMethodEnum
		return ret
	}

	return o.CollectionMethod
}

// GetCollectionMethodOk returns a tuple with the CollectionMethod field value
// and a boolean to check if the value has been set.
func (o *SubscriptionExternal) GetCollectionMethodOk() (*CollectionMethodEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionMethod, true
}

// SetCollectionMethod sets field value
func (o *SubscriptionExternal) SetCollectionMethod(v CollectionMethodEnum) {
	o.CollectionMethod = v
}

// GetNetD returns the NetD field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *SubscriptionExternal) GetNetD() int32 {
	if o == nil || o.NetD.Get() == nil {
		var ret int32
		return ret
	}

	return *o.NetD.Get()
}

// GetNetDOk returns a tuple with the NetD field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetNetDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetD.Get(), o.NetD.IsSet()
}

// SetNetD sets field value
func (o *SubscriptionExternal) SetNetD(v int32) {
	o.NetD.Set(&v)
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasCustomFields() bool {
	if o != nil && IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *SubscriptionExternal) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetRenewsAt returns the RenewsAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionExternal) GetRenewsAt() time.Time {
	if o == nil || IsNil(o.RenewsAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.RenewsAt.Get()
}

// GetRenewsAtOk returns a tuple with the RenewsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionExternal) GetRenewsAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.RenewsAt.Get(), o.RenewsAt.IsSet()
}

// HasRenewsAt returns a boolean if a field has been set.
func (o *SubscriptionExternal) HasRenewsAt() bool {
	if o != nil && o.RenewsAt.IsSet() {
		return true
	}

	return false
}

// SetRenewsAt gets a reference to the given NullableTime and assigns it to the RenewsAt field.
func (o *SubscriptionExternal) SetRenewsAt(v time.Time) {
	o.RenewsAt.Set(&v)
}
// SetRenewsAtNil sets the value for RenewsAt to be an explicit nil
func (o *SubscriptionExternal) SetRenewsAtNil() {
	o.RenewsAt.Set(nil)
}

// UnsetRenewsAt ensures that no value is present for RenewsAt, not even an explicit nil
func (o *SubscriptionExternal) UnsetRenewsAt() {
	o.RenewsAt.Unset()
}

func (o SubscriptionExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	toSerialize["name"] = o.Name
	toSerialize["account_id"] = o.AccountId
	toSerialize["customer_id"] = o.CustomerId
	toSerialize["description"] = o.Description.Get()
	toSerialize["status"] = o.Status
	toSerialize["initial_start"] = o.InitialStart
	toSerialize["current_period_start"] = o.CurrentPeriodStart
	toSerialize["current_period_end"] = o.CurrentPeriodEnd
	toSerialize["default_payment_method_id"] = o.DefaultPaymentMethodId.Get()
	toSerialize["cancel_at_end"] = o.CancelAtEnd
	if o.PauseAtEnd.IsSet() {
		toSerialize["pause_at_end"] = o.PauseAtEnd.Get()
	}
	if o.PauseForCycles.IsSet() {
		toSerialize["pause_for_cycles"] = o.PauseForCycles.Get()
	}
	if o.BillingInterval.IsSet() {
		toSerialize["billing_interval"] = o.BillingInterval.Get()
	}
	if o.BillingIntervalCount.IsSet() {
		toSerialize["billing_interval_count"] = o.BillingIntervalCount.Get()
	}
	if o.ContractStart.IsSet() {
		toSerialize["contract_start"] = o.ContractStart.Get()
	}
	if o.ContractAutoRenew.IsSet() {
		toSerialize["contract_auto_renew"] = o.ContractAutoRenew.Get()
	}
	toSerialize["currency"] = o.Currency.Get()
	toSerialize["subscription_items"] = o.SubscriptionItems
	if o.CancellationDetails.IsSet() {
		toSerialize["cancellation_details"] = o.CancellationDetails.Get()
	}
	toSerialize["cancelled_at"] = o.CancelledAt.Get()
	if o.TrialStart.IsSet() {
		toSerialize["trial_start"] = o.TrialStart.Get()
	}
	if o.TrialEnd.IsSet() {
		toSerialize["trial_end"] = o.TrialEnd.Get()
	}
	if o.Discount.IsSet() {
		toSerialize["discount"] = o.Discount.Get()
	}
	if o.TotalBillingCycles.IsSet() {
		toSerialize["total_billing_cycles"] = o.TotalBillingCycles.Get()
	}
	if o.RemainingBillingCycles.IsSet() {
		toSerialize["remaining_billing_cycles"] = o.RemainingBillingCycles.Get()
	}
	if o.PausedAt.IsSet() {
		toSerialize["paused_at"] = o.PausedAt.Get()
	}
	if o.ResumesAt.IsSet() {
		toSerialize["resumes_at"] = o.ResumesAt.Get()
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["collection_method"] = o.CollectionMethod
	toSerialize["net_d"] = o.NetD.Get()
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if o.RenewsAt.IsSet() {
		toSerialize["renews_at"] = o.RenewsAt.Get()
	}
	return toSerialize, nil
}

func (o *SubscriptionExternal) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"updated_at",
		"name",
		"account_id",
		"customer_id",
		"description",
		"status",
		"initial_start",
		"current_period_start",
		"current_period_end",
		"default_payment_method_id",
		"cancel_at_end",
		"currency",
		"subscription_items",
		"cancelled_at",
		"collection_method",
		"net_d",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubscriptionExternal := _SubscriptionExternal{}

	err = json.Unmarshal(bytes, &varSubscriptionExternal)

	if err != nil {
		return err
	}

	*o = SubscriptionExternal(varSubscriptionExternal)

	return err
}

type NullableSubscriptionExternal struct {
	value *SubscriptionExternal
	isSet bool
}

func (v NullableSubscriptionExternal) Get() *SubscriptionExternal {
	return v.value
}

func (v *NullableSubscriptionExternal) Set(val *SubscriptionExternal) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionExternal) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionExternal(val *SubscriptionExternal) *NullableSubscriptionExternal {
	return &NullableSubscriptionExternal{value: val, isSet: true}
}

func (v NullableSubscriptionExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


