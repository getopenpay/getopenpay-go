/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
)

// checks if the SubscriptionItemDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionItemDetails{}

// SubscriptionItemDetails struct for SubscriptionItemDetails
type SubscriptionItemDetails struct {
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Description NullableString `json:"description,omitempty"`
}

// NewSubscriptionItemDetails instantiates a new SubscriptionItemDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionItemDetails() *SubscriptionItemDetails {
	this := SubscriptionItemDetails{}
	return &this
}

// NewSubscriptionItemDetailsWithDefaults instantiates a new SubscriptionItemDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionItemDetailsWithDefaults() *SubscriptionItemDetails {
	this := SubscriptionItemDetails{}
	return &this
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionItemDetails) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionItemDetails) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *SubscriptionItemDetails) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *SubscriptionItemDetails) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionItemDetails) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionItemDetails) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SubscriptionItemDetails) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SubscriptionItemDetails) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SubscriptionItemDetails) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SubscriptionItemDetails) UnsetDescription() {
	o.Description.Unset()
}

func (o SubscriptionItemDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionItemDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	return toSerialize, nil
}

type NullableSubscriptionItemDetails struct {
	value *SubscriptionItemDetails
	isSet bool
}

func (v NullableSubscriptionItemDetails) Get() *SubscriptionItemDetails {
	return v.value
}

func (v *NullableSubscriptionItemDetails) Set(val *SubscriptionItemDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionItemDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionItemDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionItemDetails(val *SubscriptionItemDetails) *NullableSubscriptionItemDetails {
	return &NullableSubscriptionItemDetails{value: val, isSet: true}
}

func (v NullableSubscriptionItemDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionItemDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


