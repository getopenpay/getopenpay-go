/*
OpenPay API

super charge your subscription management.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the SubscriptionItemExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionItemExternal{}

// SubscriptionItemExternal struct for SubscriptionItemExternal
type SubscriptionItemExternal struct {
	// Unique Identifier of the subscription_item.
	Id string `json:"id"`
	Object *ObjectName `json:"object,omitempty"`
	// DateTime at which the object was created, in 'ISO 8601' format.
	CreatedAt time.Time `json:"created_at"`
	// DateTime at which the object was updated, in 'ISO 8601' format.
	UpdatedAt time.Time `json:"updated_at"`
	// If true, indicates that this object has been deleted
	IsDeleted *bool `json:"is_deleted,omitempty"`
	SubscriptionId NullableString `json:"subscription_id,omitempty"`
	PendingAttachmentToSubscriptionId NullableString `json:"pending_attachment_to_subscription_id,omitempty"`
	// Unique Identifier of the price.
	PriceId string `json:"price_id"`
	Price PriceExternal `json:"price"`
	// Unique Identifier of the product.
	ProductId string `json:"product_id"`
	Currency CurrencyEnum `json:"currency"`
	// Quantity of the product selected for the subscription_item.
	Quantity int32 `json:"quantity"`
	DeletedAt NullableTime `json:"deleted_at"`
	// Whether or not this item will be dropped from subscription before next renewal
	DropAtEnd bool `json:"drop_at_end"`
	// Whether or not this item will be added before next renewal
	AddAtPeriodEnd bool `json:"add_at_period_end"`
}

type _SubscriptionItemExternal SubscriptionItemExternal

// NewSubscriptionItemExternal instantiates a new SubscriptionItemExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionItemExternal(id string, createdAt time.Time, updatedAt time.Time, priceId string, price PriceExternal, productId string, currency CurrencyEnum, quantity int32, deletedAt NullableTime, dropAtEnd bool, addAtPeriodEnd bool) *SubscriptionItemExternal {
	this := SubscriptionItemExternal{}
	this.Id = id
	var object ObjectName = OBJECTNAME_SUBSCRIPTION_ITEM
	this.Object = &object
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	this.PriceId = priceId
	this.Price = price
	this.ProductId = productId
	this.Currency = currency
	this.Quantity = quantity
	this.DeletedAt = deletedAt
	this.DropAtEnd = dropAtEnd
	this.AddAtPeriodEnd = addAtPeriodEnd
	return &this
}

// NewSubscriptionItemExternalWithDefaults instantiates a new SubscriptionItemExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionItemExternalWithDefaults() *SubscriptionItemExternal {
	this := SubscriptionItemExternal{}
	var object ObjectName = OBJECTNAME_SUBSCRIPTION_ITEM
	this.Object = &object
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	return &this
}

// GetId returns the Id field value
func (o *SubscriptionItemExternal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SubscriptionItemExternal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SubscriptionItemExternal) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *SubscriptionItemExternal) GetObject() ObjectName {
	if o == nil || IsNil(o.Object) {
		var ret ObjectName
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionItemExternal) GetObjectOk() (*ObjectName, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *SubscriptionItemExternal) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given ObjectName and assigns it to the Object field.
func (o *SubscriptionItemExternal) SetObject(v ObjectName) {
	o.Object = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SubscriptionItemExternal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SubscriptionItemExternal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SubscriptionItemExternal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *SubscriptionItemExternal) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *SubscriptionItemExternal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *SubscriptionItemExternal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *SubscriptionItemExternal) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionItemExternal) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *SubscriptionItemExternal) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *SubscriptionItemExternal) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionItemExternal) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId.Get()) {
		var ret string
		return ret
	}
	return *o.SubscriptionId.Get()
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionItemExternal) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriptionId.Get(), o.SubscriptionId.IsSet()
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *SubscriptionItemExternal) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given NullableString and assigns it to the SubscriptionId field.
func (o *SubscriptionItemExternal) SetSubscriptionId(v string) {
	o.SubscriptionId.Set(&v)
}
// SetSubscriptionIdNil sets the value for SubscriptionId to be an explicit nil
func (o *SubscriptionItemExternal) SetSubscriptionIdNil() {
	o.SubscriptionId.Set(nil)
}

// UnsetSubscriptionId ensures that no value is present for SubscriptionId, not even an explicit nil
func (o *SubscriptionItemExternal) UnsetSubscriptionId() {
	o.SubscriptionId.Unset()
}

// GetPendingAttachmentToSubscriptionId returns the PendingAttachmentToSubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionItemExternal) GetPendingAttachmentToSubscriptionId() string {
	if o == nil || IsNil(o.PendingAttachmentToSubscriptionId.Get()) {
		var ret string
		return ret
	}
	return *o.PendingAttachmentToSubscriptionId.Get()
}

// GetPendingAttachmentToSubscriptionIdOk returns a tuple with the PendingAttachmentToSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionItemExternal) GetPendingAttachmentToSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PendingAttachmentToSubscriptionId.Get(), o.PendingAttachmentToSubscriptionId.IsSet()
}

// HasPendingAttachmentToSubscriptionId returns a boolean if a field has been set.
func (o *SubscriptionItemExternal) HasPendingAttachmentToSubscriptionId() bool {
	if o != nil && o.PendingAttachmentToSubscriptionId.IsSet() {
		return true
	}

	return false
}

// SetPendingAttachmentToSubscriptionId gets a reference to the given NullableString and assigns it to the PendingAttachmentToSubscriptionId field.
func (o *SubscriptionItemExternal) SetPendingAttachmentToSubscriptionId(v string) {
	o.PendingAttachmentToSubscriptionId.Set(&v)
}
// SetPendingAttachmentToSubscriptionIdNil sets the value for PendingAttachmentToSubscriptionId to be an explicit nil
func (o *SubscriptionItemExternal) SetPendingAttachmentToSubscriptionIdNil() {
	o.PendingAttachmentToSubscriptionId.Set(nil)
}

// UnsetPendingAttachmentToSubscriptionId ensures that no value is present for PendingAttachmentToSubscriptionId, not even an explicit nil
func (o *SubscriptionItemExternal) UnsetPendingAttachmentToSubscriptionId() {
	o.PendingAttachmentToSubscriptionId.Unset()
}

// GetPriceId returns the PriceId field value
func (o *SubscriptionItemExternal) GetPriceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PriceId
}

// GetPriceIdOk returns a tuple with the PriceId field value
// and a boolean to check if the value has been set.
func (o *SubscriptionItemExternal) GetPriceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceId, true
}

// SetPriceId sets field value
func (o *SubscriptionItemExternal) SetPriceId(v string) {
	o.PriceId = v
}

// GetPrice returns the Price field value
func (o *SubscriptionItemExternal) GetPrice() PriceExternal {
	if o == nil {
		var ret PriceExternal
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *SubscriptionItemExternal) GetPriceOk() (*PriceExternal, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *SubscriptionItemExternal) SetPrice(v PriceExternal) {
	o.Price = v
}

// GetProductId returns the ProductId field value
func (o *SubscriptionItemExternal) GetProductId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value
// and a boolean to check if the value has been set.
func (o *SubscriptionItemExternal) GetProductIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductId, true
}

// SetProductId sets field value
func (o *SubscriptionItemExternal) SetProductId(v string) {
	o.ProductId = v
}

// GetCurrency returns the Currency field value
func (o *SubscriptionItemExternal) GetCurrency() CurrencyEnum {
	if o == nil {
		var ret CurrencyEnum
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *SubscriptionItemExternal) GetCurrencyOk() (*CurrencyEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *SubscriptionItemExternal) SetCurrency(v CurrencyEnum) {
	o.Currency = v
}

// GetQuantity returns the Quantity field value
func (o *SubscriptionItemExternal) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *SubscriptionItemExternal) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *SubscriptionItemExternal) SetQuantity(v int32) {
	o.Quantity = v
}

// GetDeletedAt returns the DeletedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *SubscriptionItemExternal) GetDeletedAt() time.Time {
	if o == nil || o.DeletedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.DeletedAt.Get()
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionItemExternal) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedAt.Get(), o.DeletedAt.IsSet()
}

// SetDeletedAt sets field value
func (o *SubscriptionItemExternal) SetDeletedAt(v time.Time) {
	o.DeletedAt.Set(&v)
}

// GetDropAtEnd returns the DropAtEnd field value
func (o *SubscriptionItemExternal) GetDropAtEnd() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DropAtEnd
}

// GetDropAtEndOk returns a tuple with the DropAtEnd field value
// and a boolean to check if the value has been set.
func (o *SubscriptionItemExternal) GetDropAtEndOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DropAtEnd, true
}

// SetDropAtEnd sets field value
func (o *SubscriptionItemExternal) SetDropAtEnd(v bool) {
	o.DropAtEnd = v
}

// GetAddAtPeriodEnd returns the AddAtPeriodEnd field value
func (o *SubscriptionItemExternal) GetAddAtPeriodEnd() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AddAtPeriodEnd
}

// GetAddAtPeriodEndOk returns a tuple with the AddAtPeriodEnd field value
// and a boolean to check if the value has been set.
func (o *SubscriptionItemExternal) GetAddAtPeriodEndOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddAtPeriodEnd, true
}

// SetAddAtPeriodEnd sets field value
func (o *SubscriptionItemExternal) SetAddAtPeriodEnd(v bool) {
	o.AddAtPeriodEnd = v
}

func (o SubscriptionItemExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionItemExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	if o.SubscriptionId.IsSet() {
		toSerialize["subscription_id"] = o.SubscriptionId.Get()
	}
	if o.PendingAttachmentToSubscriptionId.IsSet() {
		toSerialize["pending_attachment_to_subscription_id"] = o.PendingAttachmentToSubscriptionId.Get()
	}
	toSerialize["price_id"] = o.PriceId
	toSerialize["price"] = o.Price
	toSerialize["product_id"] = o.ProductId
	toSerialize["currency"] = o.Currency
	toSerialize["quantity"] = o.Quantity
	toSerialize["deleted_at"] = o.DeletedAt.Get()
	toSerialize["drop_at_end"] = o.DropAtEnd
	toSerialize["add_at_period_end"] = o.AddAtPeriodEnd
	return toSerialize, nil
}

func (o *SubscriptionItemExternal) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"updated_at",
		"price_id",
		"price",
		"product_id",
		"currency",
		"quantity",
		"deleted_at",
		"drop_at_end",
		"add_at_period_end",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubscriptionItemExternal := _SubscriptionItemExternal{}

	err = json.Unmarshal(bytes, &varSubscriptionItemExternal)

	if err != nil {
		return err
	}

	*o = SubscriptionItemExternal(varSubscriptionItemExternal)

	return err
}

type NullableSubscriptionItemExternal struct {
	value *SubscriptionItemExternal
	isSet bool
}

func (v NullableSubscriptionItemExternal) Get() *SubscriptionItemExternal {
	return v.value
}

func (v *NullableSubscriptionItemExternal) Set(val *SubscriptionItemExternal) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionItemExternal) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionItemExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionItemExternal(val *SubscriptionItemExternal) *NullableSubscriptionItemExternal {
	return &NullableSubscriptionItemExternal{value: val, isSet: true}
}

func (v NullableSubscriptionItemExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionItemExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


