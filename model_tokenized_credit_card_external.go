/*
OpenPay API

super charge your subscription management.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the TokenizedCreditCardExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenizedCreditCardExternal{}

// TokenizedCreditCardExternal struct for TokenizedCreditCardExternal
type TokenizedCreditCardExternal struct {
	// Unique Identifier of the payment_method.
	Id string `json:"id"`
	Object *ObjectName `json:"object,omitempty"`
	// DateTime at which the object was created, in 'ISO 8601' format.
	CreatedAt time.Time `json:"created_at"`
	// DateTime at which the object was updated, in 'ISO 8601' format.
	UpdatedAt time.Time `json:"updated_at"`
	// If true, indicates that this object has been deleted
	IsDeleted *bool `json:"is_deleted,omitempty"`
	CustomerId NullableString `json:"customer_id,omitempty"`
	BillingAddress NullableCompleteAddress `json:"billing_address,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	Provider PaymentProviderType `json:"provider"`
	CardType NullableString `json:"card_type,omitempty"`
	LastFour NullableString `json:"last_four,omitempty"`
	ExpiryDate NullableString `json:"expiry_date"`
	CardFingerprint NullableString `json:"card_fingerprint,omitempty"`
	CardIin NullableString `json:"card_iin,omitempty"`
	CardCountry NullableString `json:"card_country,omitempty"`
	CardBrand NullableString `json:"card_brand,omitempty"`
	CardIssuer NullableString `json:"card_issuer,omitempty"`
}

type _TokenizedCreditCardExternal TokenizedCreditCardExternal

// NewTokenizedCreditCardExternal instantiates a new TokenizedCreditCardExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenizedCreditCardExternal(id string, createdAt time.Time, updatedAt time.Time, provider PaymentProviderType, expiryDate NullableString) *TokenizedCreditCardExternal {
	this := TokenizedCreditCardExternal{}
	this.Id = id
	var object ObjectName = OBJECTNAME_TOKENIZED_CARD_PAYMENT_METHOD
	this.Object = &object
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	this.Provider = provider
	this.ExpiryDate = expiryDate
	return &this
}

// NewTokenizedCreditCardExternalWithDefaults instantiates a new TokenizedCreditCardExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenizedCreditCardExternalWithDefaults() *TokenizedCreditCardExternal {
	this := TokenizedCreditCardExternal{}
	var object ObjectName = OBJECTNAME_TOKENIZED_CARD_PAYMENT_METHOD
	this.Object = &object
	var isDeleted bool = false
	this.IsDeleted = &isDeleted
	return &this
}

// GetId returns the Id field value
func (o *TokenizedCreditCardExternal) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TokenizedCreditCardExternal) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TokenizedCreditCardExternal) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *TokenizedCreditCardExternal) GetObject() ObjectName {
	if o == nil || IsNil(o.Object) {
		var ret ObjectName
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenizedCreditCardExternal) GetObjectOk() (*ObjectName, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *TokenizedCreditCardExternal) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given ObjectName and assigns it to the Object field.
func (o *TokenizedCreditCardExternal) SetObject(v ObjectName) {
	o.Object = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *TokenizedCreditCardExternal) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *TokenizedCreditCardExternal) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *TokenizedCreditCardExternal) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *TokenizedCreditCardExternal) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *TokenizedCreditCardExternal) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *TokenizedCreditCardExternal) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *TokenizedCreditCardExternal) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenizedCreditCardExternal) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *TokenizedCreditCardExternal) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *TokenizedCreditCardExternal) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenizedCreditCardExternal) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerId.Get()
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenizedCreditCardExternal) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerId.Get(), o.CustomerId.IsSet()
}

// HasCustomerId returns a boolean if a field has been set.
func (o *TokenizedCreditCardExternal) HasCustomerId() bool {
	if o != nil && o.CustomerId.IsSet() {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given NullableString and assigns it to the CustomerId field.
func (o *TokenizedCreditCardExternal) SetCustomerId(v string) {
	o.CustomerId.Set(&v)
}
// SetCustomerIdNil sets the value for CustomerId to be an explicit nil
func (o *TokenizedCreditCardExternal) SetCustomerIdNil() {
	o.CustomerId.Set(nil)
}

// UnsetCustomerId ensures that no value is present for CustomerId, not even an explicit nil
func (o *TokenizedCreditCardExternal) UnsetCustomerId() {
	o.CustomerId.Unset()
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenizedCreditCardExternal) GetBillingAddress() CompleteAddress {
	if o == nil || IsNil(o.BillingAddress.Get()) {
		var ret CompleteAddress
		return ret
	}
	return *o.BillingAddress.Get()
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenizedCreditCardExternal) GetBillingAddressOk() (*CompleteAddress, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillingAddress.Get(), o.BillingAddress.IsSet()
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *TokenizedCreditCardExternal) HasBillingAddress() bool {
	if o != nil && o.BillingAddress.IsSet() {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given NullableCompleteAddress and assigns it to the BillingAddress field.
func (o *TokenizedCreditCardExternal) SetBillingAddress(v CompleteAddress) {
	o.BillingAddress.Set(&v)
}
// SetBillingAddressNil sets the value for BillingAddress to be an explicit nil
func (o *TokenizedCreditCardExternal) SetBillingAddressNil() {
	o.BillingAddress.Set(nil)
}

// UnsetBillingAddress ensures that no value is present for BillingAddress, not even an explicit nil
func (o *TokenizedCreditCardExternal) UnsetBillingAddress() {
	o.BillingAddress.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenizedCreditCardExternal) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenizedCreditCardExternal) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *TokenizedCreditCardExternal) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *TokenizedCreditCardExternal) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetProvider returns the Provider field value
func (o *TokenizedCreditCardExternal) GetProvider() PaymentProviderType {
	if o == nil {
		var ret PaymentProviderType
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *TokenizedCreditCardExternal) GetProviderOk() (*PaymentProviderType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *TokenizedCreditCardExternal) SetProvider(v PaymentProviderType) {
	o.Provider = v
}

// GetCardType returns the CardType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenizedCreditCardExternal) GetCardType() string {
	if o == nil || IsNil(o.CardType.Get()) {
		var ret string
		return ret
	}
	return *o.CardType.Get()
}

// GetCardTypeOk returns a tuple with the CardType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenizedCreditCardExternal) GetCardTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CardType.Get(), o.CardType.IsSet()
}

// HasCardType returns a boolean if a field has been set.
func (o *TokenizedCreditCardExternal) HasCardType() bool {
	if o != nil && o.CardType.IsSet() {
		return true
	}

	return false
}

// SetCardType gets a reference to the given NullableString and assigns it to the CardType field.
func (o *TokenizedCreditCardExternal) SetCardType(v string) {
	o.CardType.Set(&v)
}
// SetCardTypeNil sets the value for CardType to be an explicit nil
func (o *TokenizedCreditCardExternal) SetCardTypeNil() {
	o.CardType.Set(nil)
}

// UnsetCardType ensures that no value is present for CardType, not even an explicit nil
func (o *TokenizedCreditCardExternal) UnsetCardType() {
	o.CardType.Unset()
}

// GetLastFour returns the LastFour field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenizedCreditCardExternal) GetLastFour() string {
	if o == nil || IsNil(o.LastFour.Get()) {
		var ret string
		return ret
	}
	return *o.LastFour.Get()
}

// GetLastFourOk returns a tuple with the LastFour field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenizedCreditCardExternal) GetLastFourOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastFour.Get(), o.LastFour.IsSet()
}

// HasLastFour returns a boolean if a field has been set.
func (o *TokenizedCreditCardExternal) HasLastFour() bool {
	if o != nil && o.LastFour.IsSet() {
		return true
	}

	return false
}

// SetLastFour gets a reference to the given NullableString and assigns it to the LastFour field.
func (o *TokenizedCreditCardExternal) SetLastFour(v string) {
	o.LastFour.Set(&v)
}
// SetLastFourNil sets the value for LastFour to be an explicit nil
func (o *TokenizedCreditCardExternal) SetLastFourNil() {
	o.LastFour.Set(nil)
}

// UnsetLastFour ensures that no value is present for LastFour, not even an explicit nil
func (o *TokenizedCreditCardExternal) UnsetLastFour() {
	o.LastFour.Unset()
}

// GetExpiryDate returns the ExpiryDate field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TokenizedCreditCardExternal) GetExpiryDate() string {
	if o == nil || o.ExpiryDate.Get() == nil {
		var ret string
		return ret
	}

	return *o.ExpiryDate.Get()
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenizedCreditCardExternal) GetExpiryDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiryDate.Get(), o.ExpiryDate.IsSet()
}

// SetExpiryDate sets field value
func (o *TokenizedCreditCardExternal) SetExpiryDate(v string) {
	o.ExpiryDate.Set(&v)
}

// GetCardFingerprint returns the CardFingerprint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenizedCreditCardExternal) GetCardFingerprint() string {
	if o == nil || IsNil(o.CardFingerprint.Get()) {
		var ret string
		return ret
	}
	return *o.CardFingerprint.Get()
}

// GetCardFingerprintOk returns a tuple with the CardFingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenizedCreditCardExternal) GetCardFingerprintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CardFingerprint.Get(), o.CardFingerprint.IsSet()
}

// HasCardFingerprint returns a boolean if a field has been set.
func (o *TokenizedCreditCardExternal) HasCardFingerprint() bool {
	if o != nil && o.CardFingerprint.IsSet() {
		return true
	}

	return false
}

// SetCardFingerprint gets a reference to the given NullableString and assigns it to the CardFingerprint field.
func (o *TokenizedCreditCardExternal) SetCardFingerprint(v string) {
	o.CardFingerprint.Set(&v)
}
// SetCardFingerprintNil sets the value for CardFingerprint to be an explicit nil
func (o *TokenizedCreditCardExternal) SetCardFingerprintNil() {
	o.CardFingerprint.Set(nil)
}

// UnsetCardFingerprint ensures that no value is present for CardFingerprint, not even an explicit nil
func (o *TokenizedCreditCardExternal) UnsetCardFingerprint() {
	o.CardFingerprint.Unset()
}

// GetCardIin returns the CardIin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenizedCreditCardExternal) GetCardIin() string {
	if o == nil || IsNil(o.CardIin.Get()) {
		var ret string
		return ret
	}
	return *o.CardIin.Get()
}

// GetCardIinOk returns a tuple with the CardIin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenizedCreditCardExternal) GetCardIinOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CardIin.Get(), o.CardIin.IsSet()
}

// HasCardIin returns a boolean if a field has been set.
func (o *TokenizedCreditCardExternal) HasCardIin() bool {
	if o != nil && o.CardIin.IsSet() {
		return true
	}

	return false
}

// SetCardIin gets a reference to the given NullableString and assigns it to the CardIin field.
func (o *TokenizedCreditCardExternal) SetCardIin(v string) {
	o.CardIin.Set(&v)
}
// SetCardIinNil sets the value for CardIin to be an explicit nil
func (o *TokenizedCreditCardExternal) SetCardIinNil() {
	o.CardIin.Set(nil)
}

// UnsetCardIin ensures that no value is present for CardIin, not even an explicit nil
func (o *TokenizedCreditCardExternal) UnsetCardIin() {
	o.CardIin.Unset()
}

// GetCardCountry returns the CardCountry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenizedCreditCardExternal) GetCardCountry() string {
	if o == nil || IsNil(o.CardCountry.Get()) {
		var ret string
		return ret
	}
	return *o.CardCountry.Get()
}

// GetCardCountryOk returns a tuple with the CardCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenizedCreditCardExternal) GetCardCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CardCountry.Get(), o.CardCountry.IsSet()
}

// HasCardCountry returns a boolean if a field has been set.
func (o *TokenizedCreditCardExternal) HasCardCountry() bool {
	if o != nil && o.CardCountry.IsSet() {
		return true
	}

	return false
}

// SetCardCountry gets a reference to the given NullableString and assigns it to the CardCountry field.
func (o *TokenizedCreditCardExternal) SetCardCountry(v string) {
	o.CardCountry.Set(&v)
}
// SetCardCountryNil sets the value for CardCountry to be an explicit nil
func (o *TokenizedCreditCardExternal) SetCardCountryNil() {
	o.CardCountry.Set(nil)
}

// UnsetCardCountry ensures that no value is present for CardCountry, not even an explicit nil
func (o *TokenizedCreditCardExternal) UnsetCardCountry() {
	o.CardCountry.Unset()
}

// GetCardBrand returns the CardBrand field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenizedCreditCardExternal) GetCardBrand() string {
	if o == nil || IsNil(o.CardBrand.Get()) {
		var ret string
		return ret
	}
	return *o.CardBrand.Get()
}

// GetCardBrandOk returns a tuple with the CardBrand field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenizedCreditCardExternal) GetCardBrandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CardBrand.Get(), o.CardBrand.IsSet()
}

// HasCardBrand returns a boolean if a field has been set.
func (o *TokenizedCreditCardExternal) HasCardBrand() bool {
	if o != nil && o.CardBrand.IsSet() {
		return true
	}

	return false
}

// SetCardBrand gets a reference to the given NullableString and assigns it to the CardBrand field.
func (o *TokenizedCreditCardExternal) SetCardBrand(v string) {
	o.CardBrand.Set(&v)
}
// SetCardBrandNil sets the value for CardBrand to be an explicit nil
func (o *TokenizedCreditCardExternal) SetCardBrandNil() {
	o.CardBrand.Set(nil)
}

// UnsetCardBrand ensures that no value is present for CardBrand, not even an explicit nil
func (o *TokenizedCreditCardExternal) UnsetCardBrand() {
	o.CardBrand.Unset()
}

// GetCardIssuer returns the CardIssuer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TokenizedCreditCardExternal) GetCardIssuer() string {
	if o == nil || IsNil(o.CardIssuer.Get()) {
		var ret string
		return ret
	}
	return *o.CardIssuer.Get()
}

// GetCardIssuerOk returns a tuple with the CardIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TokenizedCreditCardExternal) GetCardIssuerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CardIssuer.Get(), o.CardIssuer.IsSet()
}

// HasCardIssuer returns a boolean if a field has been set.
func (o *TokenizedCreditCardExternal) HasCardIssuer() bool {
	if o != nil && o.CardIssuer.IsSet() {
		return true
	}

	return false
}

// SetCardIssuer gets a reference to the given NullableString and assigns it to the CardIssuer field.
func (o *TokenizedCreditCardExternal) SetCardIssuer(v string) {
	o.CardIssuer.Set(&v)
}
// SetCardIssuerNil sets the value for CardIssuer to be an explicit nil
func (o *TokenizedCreditCardExternal) SetCardIssuerNil() {
	o.CardIssuer.Set(nil)
}

// UnsetCardIssuer ensures that no value is present for CardIssuer, not even an explicit nil
func (o *TokenizedCreditCardExternal) UnsetCardIssuer() {
	o.CardIssuer.Unset()
}

func (o TokenizedCreditCardExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenizedCreditCardExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	if o.CustomerId.IsSet() {
		toSerialize["customer_id"] = o.CustomerId.Get()
	}
	if o.BillingAddress.IsSet() {
		toSerialize["billing_address"] = o.BillingAddress.Get()
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["provider"] = o.Provider
	if o.CardType.IsSet() {
		toSerialize["card_type"] = o.CardType.Get()
	}
	if o.LastFour.IsSet() {
		toSerialize["last_four"] = o.LastFour.Get()
	}
	toSerialize["expiry_date"] = o.ExpiryDate.Get()
	if o.CardFingerprint.IsSet() {
		toSerialize["card_fingerprint"] = o.CardFingerprint.Get()
	}
	if o.CardIin.IsSet() {
		toSerialize["card_iin"] = o.CardIin.Get()
	}
	if o.CardCountry.IsSet() {
		toSerialize["card_country"] = o.CardCountry.Get()
	}
	if o.CardBrand.IsSet() {
		toSerialize["card_brand"] = o.CardBrand.Get()
	}
	if o.CardIssuer.IsSet() {
		toSerialize["card_issuer"] = o.CardIssuer.Get()
	}
	return toSerialize, nil
}

func (o *TokenizedCreditCardExternal) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"updated_at",
		"provider",
		"expiry_date",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTokenizedCreditCardExternal := _TokenizedCreditCardExternal{}

	err = json.Unmarshal(bytes, &varTokenizedCreditCardExternal)

	if err != nil {
		return err
	}

	*o = TokenizedCreditCardExternal(varTokenizedCreditCardExternal)

	return err
}

type NullableTokenizedCreditCardExternal struct {
	value *TokenizedCreditCardExternal
	isSet bool
}

func (v NullableTokenizedCreditCardExternal) Get() *TokenizedCreditCardExternal {
	return v.value
}

func (v *NullableTokenizedCreditCardExternal) Set(val *TokenizedCreditCardExternal) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenizedCreditCardExternal) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenizedCreditCardExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenizedCreditCardExternal(val *TokenizedCreditCardExternal) *NullableTokenizedCreditCardExternal {
	return &NullableTokenizedCreditCardExternal{value: val, isSet: true}
}

func (v NullableTokenizedCreditCardExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenizedCreditCardExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


