/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
)

// checks if the UpdateChargeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateChargeRequest{}

// UpdateChargeRequest struct for UpdateChargeRequest
type UpdateChargeRequest struct {
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateChargeRequest UpdateChargeRequest

// NewUpdateChargeRequest instantiates a new UpdateChargeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateChargeRequest() *UpdateChargeRequest {
	this := UpdateChargeRequest{}
	return &this
}

// NewUpdateChargeRequestWithDefaults instantiates a new UpdateChargeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateChargeRequestWithDefaults() *UpdateChargeRequest {
	this := UpdateChargeRequest{}
	return &this
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateChargeRequest) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateChargeRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *UpdateChargeRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *UpdateChargeRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

func (o UpdateChargeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateChargeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateChargeRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateChargeRequest := _UpdateChargeRequest{}

	err = json.Unmarshal(data, &varUpdateChargeRequest)

	if err != nil {
		return err
	}

	*o = UpdateChargeRequest(varUpdateChargeRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "custom_fields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateChargeRequest struct {
	value *UpdateChargeRequest
	isSet bool
}

func (v NullableUpdateChargeRequest) Get() *UpdateChargeRequest {
	return v.value
}

func (v *NullableUpdateChargeRequest) Set(val *UpdateChargeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateChargeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateChargeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateChargeRequest(val *UpdateChargeRequest) *NullableUpdateChargeRequest {
	return &NullableUpdateChargeRequest{value: val, isSet: true}
}

func (v NullableUpdateChargeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateChargeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


