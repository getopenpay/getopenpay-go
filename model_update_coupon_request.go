/*
OpenPay API

super charge your subscription management.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
)

// checks if the UpdateCouponRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCouponRequest{}

// UpdateCouponRequest Coupons are largely immutable by design, discounts refer back to their coupons whenever they are applied to invoice
type UpdateCouponRequest struct {
	Name NullableString `json:"name,omitempty"`
	IsActive NullableBool `json:"is_active,omitempty"`
	RedeemBy NullableTime `json:"redeem_by,omitempty"`
	MaxRedemptions NullableInt32 `json:"max_redemptions,omitempty"`
}

// NewUpdateCouponRequest instantiates a new UpdateCouponRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCouponRequest() *UpdateCouponRequest {
	this := UpdateCouponRequest{}
	return &this
}

// NewUpdateCouponRequestWithDefaults instantiates a new UpdateCouponRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCouponRequestWithDefaults() *UpdateCouponRequest {
	this := UpdateCouponRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateCouponRequest) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateCouponRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *UpdateCouponRequest) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *UpdateCouponRequest) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *UpdateCouponRequest) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *UpdateCouponRequest) UnsetName() {
	o.Name.Unset()
}

// GetIsActive returns the IsActive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateCouponRequest) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive.Get()) {
		var ret bool
		return ret
	}
	return *o.IsActive.Get()
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateCouponRequest) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsActive.Get(), o.IsActive.IsSet()
}

// HasIsActive returns a boolean if a field has been set.
func (o *UpdateCouponRequest) HasIsActive() bool {
	if o != nil && o.IsActive.IsSet() {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given NullableBool and assigns it to the IsActive field.
func (o *UpdateCouponRequest) SetIsActive(v bool) {
	o.IsActive.Set(&v)
}
// SetIsActiveNil sets the value for IsActive to be an explicit nil
func (o *UpdateCouponRequest) SetIsActiveNil() {
	o.IsActive.Set(nil)
}

// UnsetIsActive ensures that no value is present for IsActive, not even an explicit nil
func (o *UpdateCouponRequest) UnsetIsActive() {
	o.IsActive.Unset()
}

// GetRedeemBy returns the RedeemBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateCouponRequest) GetRedeemBy() time.Time {
	if o == nil || IsNil(o.RedeemBy.Get()) {
		var ret time.Time
		return ret
	}
	return *o.RedeemBy.Get()
}

// GetRedeemByOk returns a tuple with the RedeemBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateCouponRequest) GetRedeemByOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.RedeemBy.Get(), o.RedeemBy.IsSet()
}

// HasRedeemBy returns a boolean if a field has been set.
func (o *UpdateCouponRequest) HasRedeemBy() bool {
	if o != nil && o.RedeemBy.IsSet() {
		return true
	}

	return false
}

// SetRedeemBy gets a reference to the given NullableTime and assigns it to the RedeemBy field.
func (o *UpdateCouponRequest) SetRedeemBy(v time.Time) {
	o.RedeemBy.Set(&v)
}
// SetRedeemByNil sets the value for RedeemBy to be an explicit nil
func (o *UpdateCouponRequest) SetRedeemByNil() {
	o.RedeemBy.Set(nil)
}

// UnsetRedeemBy ensures that no value is present for RedeemBy, not even an explicit nil
func (o *UpdateCouponRequest) UnsetRedeemBy() {
	o.RedeemBy.Unset()
}

// GetMaxRedemptions returns the MaxRedemptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateCouponRequest) GetMaxRedemptions() int32 {
	if o == nil || IsNil(o.MaxRedemptions.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxRedemptions.Get()
}

// GetMaxRedemptionsOk returns a tuple with the MaxRedemptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateCouponRequest) GetMaxRedemptionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxRedemptions.Get(), o.MaxRedemptions.IsSet()
}

// HasMaxRedemptions returns a boolean if a field has been set.
func (o *UpdateCouponRequest) HasMaxRedemptions() bool {
	if o != nil && o.MaxRedemptions.IsSet() {
		return true
	}

	return false
}

// SetMaxRedemptions gets a reference to the given NullableInt32 and assigns it to the MaxRedemptions field.
func (o *UpdateCouponRequest) SetMaxRedemptions(v int32) {
	o.MaxRedemptions.Set(&v)
}
// SetMaxRedemptionsNil sets the value for MaxRedemptions to be an explicit nil
func (o *UpdateCouponRequest) SetMaxRedemptionsNil() {
	o.MaxRedemptions.Set(nil)
}

// UnsetMaxRedemptions ensures that no value is present for MaxRedemptions, not even an explicit nil
func (o *UpdateCouponRequest) UnsetMaxRedemptions() {
	o.MaxRedemptions.Unset()
}

func (o UpdateCouponRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCouponRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.IsActive.IsSet() {
		toSerialize["is_active"] = o.IsActive.Get()
	}
	if o.RedeemBy.IsSet() {
		toSerialize["redeem_by"] = o.RedeemBy.Get()
	}
	if o.MaxRedemptions.IsSet() {
		toSerialize["max_redemptions"] = o.MaxRedemptions.Get()
	}
	return toSerialize, nil
}

type NullableUpdateCouponRequest struct {
	value *UpdateCouponRequest
	isSet bool
}

func (v NullableUpdateCouponRequest) Get() *UpdateCouponRequest {
	return v.value
}

func (v *NullableUpdateCouponRequest) Set(val *UpdateCouponRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCouponRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCouponRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCouponRequest(val *UpdateCouponRequest) *NullableUpdateCouponRequest {
	return &NullableUpdateCouponRequest{value: val, isSet: true}
}

func (v NullableUpdateCouponRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCouponRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


