/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
)

// checks if the UpdateProductRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProductRequest{}

// UpdateProductRequest struct for UpdateProductRequest
type UpdateProductRequest struct {
	AccountSku NullableString `json:"account_sku,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	DefaultPriceId NullableString `json:"default_price_id,omitempty"`
	Description NullableString `json:"description,omitempty"`
	// List of product features.
	Features []string `json:"features,omitempty"`
	IsActive NullableBool `json:"is_active,omitempty"`
	Name NullableString `json:"name,omitempty"`
	UnitLabel NullableString `json:"unit_label,omitempty"`
}

// NewUpdateProductRequest instantiates a new UpdateProductRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProductRequest() *UpdateProductRequest {
	this := UpdateProductRequest{}
	return &this
}

// NewUpdateProductRequestWithDefaults instantiates a new UpdateProductRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProductRequestWithDefaults() *UpdateProductRequest {
	this := UpdateProductRequest{}
	return &this
}

// GetAccountSku returns the AccountSku field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProductRequest) GetAccountSku() string {
	if o == nil || IsNil(o.AccountSku.Get()) {
		var ret string
		return ret
	}
	return *o.AccountSku.Get()
}

// GetAccountSkuOk returns a tuple with the AccountSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProductRequest) GetAccountSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountSku.Get(), o.AccountSku.IsSet()
}

// HasAccountSku returns a boolean if a field has been set.
func (o *UpdateProductRequest) HasAccountSku() bool {
	if o != nil && o.AccountSku.IsSet() {
		return true
	}

	return false
}

// SetAccountSku gets a reference to the given NullableString and assigns it to the AccountSku field.
func (o *UpdateProductRequest) SetAccountSku(v string) {
	o.AccountSku.Set(&v)
}
// SetAccountSkuNil sets the value for AccountSku to be an explicit nil
func (o *UpdateProductRequest) SetAccountSkuNil() {
	o.AccountSku.Set(nil)
}

// UnsetAccountSku ensures that no value is present for AccountSku, not even an explicit nil
func (o *UpdateProductRequest) UnsetAccountSku() {
	o.AccountSku.Unset()
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProductRequest) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProductRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *UpdateProductRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *UpdateProductRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetDefaultPriceId returns the DefaultPriceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProductRequest) GetDefaultPriceId() string {
	if o == nil || IsNil(o.DefaultPriceId.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultPriceId.Get()
}

// GetDefaultPriceIdOk returns a tuple with the DefaultPriceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProductRequest) GetDefaultPriceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultPriceId.Get(), o.DefaultPriceId.IsSet()
}

// HasDefaultPriceId returns a boolean if a field has been set.
func (o *UpdateProductRequest) HasDefaultPriceId() bool {
	if o != nil && o.DefaultPriceId.IsSet() {
		return true
	}

	return false
}

// SetDefaultPriceId gets a reference to the given NullableString and assigns it to the DefaultPriceId field.
func (o *UpdateProductRequest) SetDefaultPriceId(v string) {
	o.DefaultPriceId.Set(&v)
}
// SetDefaultPriceIdNil sets the value for DefaultPriceId to be an explicit nil
func (o *UpdateProductRequest) SetDefaultPriceIdNil() {
	o.DefaultPriceId.Set(nil)
}

// UnsetDefaultPriceId ensures that no value is present for DefaultPriceId, not even an explicit nil
func (o *UpdateProductRequest) UnsetDefaultPriceId() {
	o.DefaultPriceId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProductRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProductRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateProductRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *UpdateProductRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *UpdateProductRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *UpdateProductRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *UpdateProductRequest) GetFeatures() []string {
	if o == nil || IsNil(o.Features) {
		var ret []string
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProductRequest) GetFeaturesOk() ([]string, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *UpdateProductRequest) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []string and assigns it to the Features field.
func (o *UpdateProductRequest) SetFeatures(v []string) {
	o.Features = v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProductRequest) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive.Get()) {
		var ret bool
		return ret
	}
	return *o.IsActive.Get()
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProductRequest) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsActive.Get(), o.IsActive.IsSet()
}

// HasIsActive returns a boolean if a field has been set.
func (o *UpdateProductRequest) HasIsActive() bool {
	if o != nil && o.IsActive.IsSet() {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given NullableBool and assigns it to the IsActive field.
func (o *UpdateProductRequest) SetIsActive(v bool) {
	o.IsActive.Set(&v)
}
// SetIsActiveNil sets the value for IsActive to be an explicit nil
func (o *UpdateProductRequest) SetIsActiveNil() {
	o.IsActive.Set(nil)
}

// UnsetIsActive ensures that no value is present for IsActive, not even an explicit nil
func (o *UpdateProductRequest) UnsetIsActive() {
	o.IsActive.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProductRequest) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProductRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *UpdateProductRequest) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *UpdateProductRequest) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *UpdateProductRequest) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *UpdateProductRequest) UnsetName() {
	o.Name.Unset()
}

// GetUnitLabel returns the UnitLabel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProductRequest) GetUnitLabel() string {
	if o == nil || IsNil(o.UnitLabel.Get()) {
		var ret string
		return ret
	}
	return *o.UnitLabel.Get()
}

// GetUnitLabelOk returns a tuple with the UnitLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProductRequest) GetUnitLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitLabel.Get(), o.UnitLabel.IsSet()
}

// HasUnitLabel returns a boolean if a field has been set.
func (o *UpdateProductRequest) HasUnitLabel() bool {
	if o != nil && o.UnitLabel.IsSet() {
		return true
	}

	return false
}

// SetUnitLabel gets a reference to the given NullableString and assigns it to the UnitLabel field.
func (o *UpdateProductRequest) SetUnitLabel(v string) {
	o.UnitLabel.Set(&v)
}
// SetUnitLabelNil sets the value for UnitLabel to be an explicit nil
func (o *UpdateProductRequest) SetUnitLabelNil() {
	o.UnitLabel.Set(nil)
}

// UnsetUnitLabel ensures that no value is present for UnitLabel, not even an explicit nil
func (o *UpdateProductRequest) UnsetUnitLabel() {
	o.UnitLabel.Unset()
}

func (o UpdateProductRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProductRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountSku.IsSet() {
		toSerialize["account_sku"] = o.AccountSku.Get()
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if o.DefaultPriceId.IsSet() {
		toSerialize["default_price_id"] = o.DefaultPriceId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if o.IsActive.IsSet() {
		toSerialize["is_active"] = o.IsActive.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.UnitLabel.IsSet() {
		toSerialize["unit_label"] = o.UnitLabel.Get()
	}
	return toSerialize, nil
}

type NullableUpdateProductRequest struct {
	value *UpdateProductRequest
	isSet bool
}

func (v NullableUpdateProductRequest) Get() *UpdateProductRequest {
	return v.value
}

func (v *NullableUpdateProductRequest) Set(val *UpdateProductRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProductRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProductRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProductRequest(val *UpdateProductRequest) *NullableUpdateProductRequest {
	return &NullableUpdateProductRequest{value: val, isSet: true}
}

func (v NullableUpdateProductRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProductRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


