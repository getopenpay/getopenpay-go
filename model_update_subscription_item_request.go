/*
OpenPay API

super charge your subscription management.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
)

// checks if the UpdateSubscriptionItemRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSubscriptionItemRequest{}

// UpdateSubscriptionItemRequest struct for UpdateSubscriptionItemRequest
type UpdateSubscriptionItemRequest struct {
	PriceId NullableString `json:"price_id,omitempty"`
	Quantity NullableInt32 `json:"quantity,omitempty"`
	ProrationBehavior *ProrationEnum `json:"proration_behavior,omitempty"`
	DropAtEnd NullableBool `json:"drop_at_end,omitempty"`
}

// NewUpdateSubscriptionItemRequest instantiates a new UpdateSubscriptionItemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSubscriptionItemRequest() *UpdateSubscriptionItemRequest {
	this := UpdateSubscriptionItemRequest{}
	var prorationBehavior ProrationEnum = PRORATIONENUM_ALWAYS_INVOICE
	this.ProrationBehavior = &prorationBehavior
	return &this
}

// NewUpdateSubscriptionItemRequestWithDefaults instantiates a new UpdateSubscriptionItemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSubscriptionItemRequestWithDefaults() *UpdateSubscriptionItemRequest {
	this := UpdateSubscriptionItemRequest{}
	var prorationBehavior ProrationEnum = PRORATIONENUM_ALWAYS_INVOICE
	this.ProrationBehavior = &prorationBehavior
	return &this
}

// GetPriceId returns the PriceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionItemRequest) GetPriceId() string {
	if o == nil || IsNil(o.PriceId.Get()) {
		var ret string
		return ret
	}
	return *o.PriceId.Get()
}

// GetPriceIdOk returns a tuple with the PriceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionItemRequest) GetPriceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceId.Get(), o.PriceId.IsSet()
}

// HasPriceId returns a boolean if a field has been set.
func (o *UpdateSubscriptionItemRequest) HasPriceId() bool {
	if o != nil && o.PriceId.IsSet() {
		return true
	}

	return false
}

// SetPriceId gets a reference to the given NullableString and assigns it to the PriceId field.
func (o *UpdateSubscriptionItemRequest) SetPriceId(v string) {
	o.PriceId.Set(&v)
}
// SetPriceIdNil sets the value for PriceId to be an explicit nil
func (o *UpdateSubscriptionItemRequest) SetPriceIdNil() {
	o.PriceId.Set(nil)
}

// UnsetPriceId ensures that no value is present for PriceId, not even an explicit nil
func (o *UpdateSubscriptionItemRequest) UnsetPriceId() {
	o.PriceId.Unset()
}

// GetQuantity returns the Quantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionItemRequest) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity.Get()) {
		var ret int32
		return ret
	}
	return *o.Quantity.Get()
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionItemRequest) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Quantity.Get(), o.Quantity.IsSet()
}

// HasQuantity returns a boolean if a field has been set.
func (o *UpdateSubscriptionItemRequest) HasQuantity() bool {
	if o != nil && o.Quantity.IsSet() {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given NullableInt32 and assigns it to the Quantity field.
func (o *UpdateSubscriptionItemRequest) SetQuantity(v int32) {
	o.Quantity.Set(&v)
}
// SetQuantityNil sets the value for Quantity to be an explicit nil
func (o *UpdateSubscriptionItemRequest) SetQuantityNil() {
	o.Quantity.Set(nil)
}

// UnsetQuantity ensures that no value is present for Quantity, not even an explicit nil
func (o *UpdateSubscriptionItemRequest) UnsetQuantity() {
	o.Quantity.Unset()
}

// GetProrationBehavior returns the ProrationBehavior field value if set, zero value otherwise.
func (o *UpdateSubscriptionItemRequest) GetProrationBehavior() ProrationEnum {
	if o == nil || IsNil(o.ProrationBehavior) {
		var ret ProrationEnum
		return ret
	}
	return *o.ProrationBehavior
}

// GetProrationBehaviorOk returns a tuple with the ProrationBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSubscriptionItemRequest) GetProrationBehaviorOk() (*ProrationEnum, bool) {
	if o == nil || IsNil(o.ProrationBehavior) {
		return nil, false
	}
	return o.ProrationBehavior, true
}

// HasProrationBehavior returns a boolean if a field has been set.
func (o *UpdateSubscriptionItemRequest) HasProrationBehavior() bool {
	if o != nil && !IsNil(o.ProrationBehavior) {
		return true
	}

	return false
}

// SetProrationBehavior gets a reference to the given ProrationEnum and assigns it to the ProrationBehavior field.
func (o *UpdateSubscriptionItemRequest) SetProrationBehavior(v ProrationEnum) {
	o.ProrationBehavior = &v
}

// GetDropAtEnd returns the DropAtEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionItemRequest) GetDropAtEnd() bool {
	if o == nil || IsNil(o.DropAtEnd.Get()) {
		var ret bool
		return ret
	}
	return *o.DropAtEnd.Get()
}

// GetDropAtEndOk returns a tuple with the DropAtEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionItemRequest) GetDropAtEndOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DropAtEnd.Get(), o.DropAtEnd.IsSet()
}

// HasDropAtEnd returns a boolean if a field has been set.
func (o *UpdateSubscriptionItemRequest) HasDropAtEnd() bool {
	if o != nil && o.DropAtEnd.IsSet() {
		return true
	}

	return false
}

// SetDropAtEnd gets a reference to the given NullableBool and assigns it to the DropAtEnd field.
func (o *UpdateSubscriptionItemRequest) SetDropAtEnd(v bool) {
	o.DropAtEnd.Set(&v)
}
// SetDropAtEndNil sets the value for DropAtEnd to be an explicit nil
func (o *UpdateSubscriptionItemRequest) SetDropAtEndNil() {
	o.DropAtEnd.Set(nil)
}

// UnsetDropAtEnd ensures that no value is present for DropAtEnd, not even an explicit nil
func (o *UpdateSubscriptionItemRequest) UnsetDropAtEnd() {
	o.DropAtEnd.Unset()
}

func (o UpdateSubscriptionItemRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSubscriptionItemRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.PriceId.IsSet() {
		toSerialize["price_id"] = o.PriceId.Get()
	}
	if o.Quantity.IsSet() {
		toSerialize["quantity"] = o.Quantity.Get()
	}
	if !IsNil(o.ProrationBehavior) {
		toSerialize["proration_behavior"] = o.ProrationBehavior
	}
	if o.DropAtEnd.IsSet() {
		toSerialize["drop_at_end"] = o.DropAtEnd.Get()
	}
	return toSerialize, nil
}

type NullableUpdateSubscriptionItemRequest struct {
	value *UpdateSubscriptionItemRequest
	isSet bool
}

func (v NullableUpdateSubscriptionItemRequest) Get() *UpdateSubscriptionItemRequest {
	return v.value
}

func (v *NullableUpdateSubscriptionItemRequest) Set(val *UpdateSubscriptionItemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSubscriptionItemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSubscriptionItemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSubscriptionItemRequest(val *UpdateSubscriptionItemRequest) *NullableUpdateSubscriptionItemRequest {
	return &NullableUpdateSubscriptionItemRequest{value: val, isSet: true}
}

func (v NullableUpdateSubscriptionItemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSubscriptionItemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


