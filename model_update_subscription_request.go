/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
)

// checks if the UpdateSubscriptionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSubscriptionRequest{}

// UpdateSubscriptionRequest struct for UpdateSubscriptionRequest
type UpdateSubscriptionRequest struct {
	CancelAtEnd NullableBool `json:"cancel_at_end,omitempty"`
	CollectionMethod NullableCollectionMethodEnum `json:"collection_method,omitempty"`
	CouponId NullableString `json:"coupon_id,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Description NullableString `json:"description,omitempty"`
	// Whether the request is in preview mode (subscriptions won't actually be updated)
	IsPreview *bool `json:"is_preview,omitempty"`
	// A list of up to 20 subscription items, each with an attached price.
	Items []InlineSubscriptionItemUpdate `json:"items,omitempty"`
	NetD NullableInt32 `json:"net_d,omitempty"`
	NewPeriodEnd NullableTime `json:"new_period_end,omitempty"`
	PaymentMethodId NullableString `json:"payment_method_id,omitempty"`
	PaymentRouteId NullableString `json:"payment_route_id,omitempty"`
	// Whether to include the preview of the renewal invoices for the subscriptions in the response.
	PreviewRenewalInvoices *bool `json:"preview_renewal_invoices,omitempty"`
	PromotionCode NullableString `json:"promotion_code,omitempty"`
	// Determines how to handle prorations when the billable items changes
	ProrationBehavior *ProrationEnum `json:"proration_behavior,omitempty"`
	RemovePaymentRouteId NullableBool `json:"remove_payment_route_id,omitempty"`
	TrialEnd NullableTime `json:"trial_end,omitempty"`
	TrialPeriodDays NullableInt32 `json:"trial_period_days,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateSubscriptionRequest UpdateSubscriptionRequest

// NewUpdateSubscriptionRequest instantiates a new UpdateSubscriptionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSubscriptionRequest() *UpdateSubscriptionRequest {
	this := UpdateSubscriptionRequest{}
	var isPreview bool = false
	this.IsPreview = &isPreview
	var previewRenewalInvoices bool = false
	this.PreviewRenewalInvoices = &previewRenewalInvoices
	return &this
}

// NewUpdateSubscriptionRequestWithDefaults instantiates a new UpdateSubscriptionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSubscriptionRequestWithDefaults() *UpdateSubscriptionRequest {
	this := UpdateSubscriptionRequest{}
	var isPreview bool = false
	this.IsPreview = &isPreview
	var previewRenewalInvoices bool = false
	this.PreviewRenewalInvoices = &previewRenewalInvoices
	return &this
}

// GetCancelAtEnd returns the CancelAtEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionRequest) GetCancelAtEnd() bool {
	if o == nil || IsNil(o.CancelAtEnd.Get()) {
		var ret bool
		return ret
	}
	return *o.CancelAtEnd.Get()
}

// GetCancelAtEndOk returns a tuple with the CancelAtEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionRequest) GetCancelAtEndOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CancelAtEnd.Get(), o.CancelAtEnd.IsSet()
}

// HasCancelAtEnd returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasCancelAtEnd() bool {
	if o != nil && o.CancelAtEnd.IsSet() {
		return true
	}

	return false
}

// SetCancelAtEnd gets a reference to the given NullableBool and assigns it to the CancelAtEnd field.
func (o *UpdateSubscriptionRequest) SetCancelAtEnd(v bool) {
	o.CancelAtEnd.Set(&v)
}
// SetCancelAtEndNil sets the value for CancelAtEnd to be an explicit nil
func (o *UpdateSubscriptionRequest) SetCancelAtEndNil() {
	o.CancelAtEnd.Set(nil)
}

// UnsetCancelAtEnd ensures that no value is present for CancelAtEnd, not even an explicit nil
func (o *UpdateSubscriptionRequest) UnsetCancelAtEnd() {
	o.CancelAtEnd.Unset()
}

// GetCollectionMethod returns the CollectionMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionRequest) GetCollectionMethod() CollectionMethodEnum {
	if o == nil || IsNil(o.CollectionMethod.Get()) {
		var ret CollectionMethodEnum
		return ret
	}
	return *o.CollectionMethod.Get()
}

// GetCollectionMethodOk returns a tuple with the CollectionMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionRequest) GetCollectionMethodOk() (*CollectionMethodEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.CollectionMethod.Get(), o.CollectionMethod.IsSet()
}

// HasCollectionMethod returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasCollectionMethod() bool {
	if o != nil && o.CollectionMethod.IsSet() {
		return true
	}

	return false
}

// SetCollectionMethod gets a reference to the given NullableCollectionMethodEnum and assigns it to the CollectionMethod field.
func (o *UpdateSubscriptionRequest) SetCollectionMethod(v CollectionMethodEnum) {
	o.CollectionMethod.Set(&v)
}
// SetCollectionMethodNil sets the value for CollectionMethod to be an explicit nil
func (o *UpdateSubscriptionRequest) SetCollectionMethodNil() {
	o.CollectionMethod.Set(nil)
}

// UnsetCollectionMethod ensures that no value is present for CollectionMethod, not even an explicit nil
func (o *UpdateSubscriptionRequest) UnsetCollectionMethod() {
	o.CollectionMethod.Unset()
}

// GetCouponId returns the CouponId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionRequest) GetCouponId() string {
	if o == nil || IsNil(o.CouponId.Get()) {
		var ret string
		return ret
	}
	return *o.CouponId.Get()
}

// GetCouponIdOk returns a tuple with the CouponId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionRequest) GetCouponIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CouponId.Get(), o.CouponId.IsSet()
}

// HasCouponId returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasCouponId() bool {
	if o != nil && o.CouponId.IsSet() {
		return true
	}

	return false
}

// SetCouponId gets a reference to the given NullableString and assigns it to the CouponId field.
func (o *UpdateSubscriptionRequest) SetCouponId(v string) {
	o.CouponId.Set(&v)
}
// SetCouponIdNil sets the value for CouponId to be an explicit nil
func (o *UpdateSubscriptionRequest) SetCouponIdNil() {
	o.CouponId.Set(nil)
}

// UnsetCouponId ensures that no value is present for CouponId, not even an explicit nil
func (o *UpdateSubscriptionRequest) UnsetCouponId() {
	o.CouponId.Unset()
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionRequest) GetCustomFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionRequest) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return map[string]interface{}{}, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *UpdateSubscriptionRequest) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *UpdateSubscriptionRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *UpdateSubscriptionRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *UpdateSubscriptionRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetIsPreview returns the IsPreview field value if set, zero value otherwise.
func (o *UpdateSubscriptionRequest) GetIsPreview() bool {
	if o == nil || IsNil(o.IsPreview) {
		var ret bool
		return ret
	}
	return *o.IsPreview
}

// GetIsPreviewOk returns a tuple with the IsPreview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSubscriptionRequest) GetIsPreviewOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPreview) {
		return nil, false
	}
	return o.IsPreview, true
}

// HasIsPreview returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasIsPreview() bool {
	if o != nil && !IsNil(o.IsPreview) {
		return true
	}

	return false
}

// SetIsPreview gets a reference to the given bool and assigns it to the IsPreview field.
func (o *UpdateSubscriptionRequest) SetIsPreview(v bool) {
	o.IsPreview = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *UpdateSubscriptionRequest) GetItems() []InlineSubscriptionItemUpdate {
	if o == nil || IsNil(o.Items) {
		var ret []InlineSubscriptionItemUpdate
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSubscriptionRequest) GetItemsOk() ([]InlineSubscriptionItemUpdate, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []InlineSubscriptionItemUpdate and assigns it to the Items field.
func (o *UpdateSubscriptionRequest) SetItems(v []InlineSubscriptionItemUpdate) {
	o.Items = v
}

// GetNetD returns the NetD field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionRequest) GetNetD() int32 {
	if o == nil || IsNil(o.NetD.Get()) {
		var ret int32
		return ret
	}
	return *o.NetD.Get()
}

// GetNetDOk returns a tuple with the NetD field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionRequest) GetNetDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetD.Get(), o.NetD.IsSet()
}

// HasNetD returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasNetD() bool {
	if o != nil && o.NetD.IsSet() {
		return true
	}

	return false
}

// SetNetD gets a reference to the given NullableInt32 and assigns it to the NetD field.
func (o *UpdateSubscriptionRequest) SetNetD(v int32) {
	o.NetD.Set(&v)
}
// SetNetDNil sets the value for NetD to be an explicit nil
func (o *UpdateSubscriptionRequest) SetNetDNil() {
	o.NetD.Set(nil)
}

// UnsetNetD ensures that no value is present for NetD, not even an explicit nil
func (o *UpdateSubscriptionRequest) UnsetNetD() {
	o.NetD.Unset()
}

// GetNewPeriodEnd returns the NewPeriodEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionRequest) GetNewPeriodEnd() time.Time {
	if o == nil || IsNil(o.NewPeriodEnd.Get()) {
		var ret time.Time
		return ret
	}
	return *o.NewPeriodEnd.Get()
}

// GetNewPeriodEndOk returns a tuple with the NewPeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionRequest) GetNewPeriodEndOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.NewPeriodEnd.Get(), o.NewPeriodEnd.IsSet()
}

// HasNewPeriodEnd returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasNewPeriodEnd() bool {
	if o != nil && o.NewPeriodEnd.IsSet() {
		return true
	}

	return false
}

// SetNewPeriodEnd gets a reference to the given NullableTime and assigns it to the NewPeriodEnd field.
func (o *UpdateSubscriptionRequest) SetNewPeriodEnd(v time.Time) {
	o.NewPeriodEnd.Set(&v)
}
// SetNewPeriodEndNil sets the value for NewPeriodEnd to be an explicit nil
func (o *UpdateSubscriptionRequest) SetNewPeriodEndNil() {
	o.NewPeriodEnd.Set(nil)
}

// UnsetNewPeriodEnd ensures that no value is present for NewPeriodEnd, not even an explicit nil
func (o *UpdateSubscriptionRequest) UnsetNewPeriodEnd() {
	o.NewPeriodEnd.Unset()
}

// GetPaymentMethodId returns the PaymentMethodId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionRequest) GetPaymentMethodId() string {
	if o == nil || IsNil(o.PaymentMethodId.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentMethodId.Get()
}

// GetPaymentMethodIdOk returns a tuple with the PaymentMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionRequest) GetPaymentMethodIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentMethodId.Get(), o.PaymentMethodId.IsSet()
}

// HasPaymentMethodId returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasPaymentMethodId() bool {
	if o != nil && o.PaymentMethodId.IsSet() {
		return true
	}

	return false
}

// SetPaymentMethodId gets a reference to the given NullableString and assigns it to the PaymentMethodId field.
func (o *UpdateSubscriptionRequest) SetPaymentMethodId(v string) {
	o.PaymentMethodId.Set(&v)
}
// SetPaymentMethodIdNil sets the value for PaymentMethodId to be an explicit nil
func (o *UpdateSubscriptionRequest) SetPaymentMethodIdNil() {
	o.PaymentMethodId.Set(nil)
}

// UnsetPaymentMethodId ensures that no value is present for PaymentMethodId, not even an explicit nil
func (o *UpdateSubscriptionRequest) UnsetPaymentMethodId() {
	o.PaymentMethodId.Unset()
}

// GetPaymentRouteId returns the PaymentRouteId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionRequest) GetPaymentRouteId() string {
	if o == nil || IsNil(o.PaymentRouteId.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentRouteId.Get()
}

// GetPaymentRouteIdOk returns a tuple with the PaymentRouteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionRequest) GetPaymentRouteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentRouteId.Get(), o.PaymentRouteId.IsSet()
}

// HasPaymentRouteId returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasPaymentRouteId() bool {
	if o != nil && o.PaymentRouteId.IsSet() {
		return true
	}

	return false
}

// SetPaymentRouteId gets a reference to the given NullableString and assigns it to the PaymentRouteId field.
func (o *UpdateSubscriptionRequest) SetPaymentRouteId(v string) {
	o.PaymentRouteId.Set(&v)
}
// SetPaymentRouteIdNil sets the value for PaymentRouteId to be an explicit nil
func (o *UpdateSubscriptionRequest) SetPaymentRouteIdNil() {
	o.PaymentRouteId.Set(nil)
}

// UnsetPaymentRouteId ensures that no value is present for PaymentRouteId, not even an explicit nil
func (o *UpdateSubscriptionRequest) UnsetPaymentRouteId() {
	o.PaymentRouteId.Unset()
}

// GetPreviewRenewalInvoices returns the PreviewRenewalInvoices field value if set, zero value otherwise.
func (o *UpdateSubscriptionRequest) GetPreviewRenewalInvoices() bool {
	if o == nil || IsNil(o.PreviewRenewalInvoices) {
		var ret bool
		return ret
	}
	return *o.PreviewRenewalInvoices
}

// GetPreviewRenewalInvoicesOk returns a tuple with the PreviewRenewalInvoices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSubscriptionRequest) GetPreviewRenewalInvoicesOk() (*bool, bool) {
	if o == nil || IsNil(o.PreviewRenewalInvoices) {
		return nil, false
	}
	return o.PreviewRenewalInvoices, true
}

// HasPreviewRenewalInvoices returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasPreviewRenewalInvoices() bool {
	if o != nil && !IsNil(o.PreviewRenewalInvoices) {
		return true
	}

	return false
}

// SetPreviewRenewalInvoices gets a reference to the given bool and assigns it to the PreviewRenewalInvoices field.
func (o *UpdateSubscriptionRequest) SetPreviewRenewalInvoices(v bool) {
	o.PreviewRenewalInvoices = &v
}

// GetPromotionCode returns the PromotionCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionRequest) GetPromotionCode() string {
	if o == nil || IsNil(o.PromotionCode.Get()) {
		var ret string
		return ret
	}
	return *o.PromotionCode.Get()
}

// GetPromotionCodeOk returns a tuple with the PromotionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionRequest) GetPromotionCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PromotionCode.Get(), o.PromotionCode.IsSet()
}

// HasPromotionCode returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasPromotionCode() bool {
	if o != nil && o.PromotionCode.IsSet() {
		return true
	}

	return false
}

// SetPromotionCode gets a reference to the given NullableString and assigns it to the PromotionCode field.
func (o *UpdateSubscriptionRequest) SetPromotionCode(v string) {
	o.PromotionCode.Set(&v)
}
// SetPromotionCodeNil sets the value for PromotionCode to be an explicit nil
func (o *UpdateSubscriptionRequest) SetPromotionCodeNil() {
	o.PromotionCode.Set(nil)
}

// UnsetPromotionCode ensures that no value is present for PromotionCode, not even an explicit nil
func (o *UpdateSubscriptionRequest) UnsetPromotionCode() {
	o.PromotionCode.Unset()
}

// GetProrationBehavior returns the ProrationBehavior field value if set, zero value otherwise.
func (o *UpdateSubscriptionRequest) GetProrationBehavior() ProrationEnum {
	if o == nil || IsNil(o.ProrationBehavior) {
		var ret ProrationEnum
		return ret
	}
	return *o.ProrationBehavior
}

// GetProrationBehaviorOk returns a tuple with the ProrationBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSubscriptionRequest) GetProrationBehaviorOk() (*ProrationEnum, bool) {
	if o == nil || IsNil(o.ProrationBehavior) {
		return nil, false
	}
	return o.ProrationBehavior, true
}

// HasProrationBehavior returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasProrationBehavior() bool {
	if o != nil && !IsNil(o.ProrationBehavior) {
		return true
	}

	return false
}

// SetProrationBehavior gets a reference to the given ProrationEnum and assigns it to the ProrationBehavior field.
func (o *UpdateSubscriptionRequest) SetProrationBehavior(v ProrationEnum) {
	o.ProrationBehavior = &v
}

// GetRemovePaymentRouteId returns the RemovePaymentRouteId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionRequest) GetRemovePaymentRouteId() bool {
	if o == nil || IsNil(o.RemovePaymentRouteId.Get()) {
		var ret bool
		return ret
	}
	return *o.RemovePaymentRouteId.Get()
}

// GetRemovePaymentRouteIdOk returns a tuple with the RemovePaymentRouteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionRequest) GetRemovePaymentRouteIdOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemovePaymentRouteId.Get(), o.RemovePaymentRouteId.IsSet()
}

// HasRemovePaymentRouteId returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasRemovePaymentRouteId() bool {
	if o != nil && o.RemovePaymentRouteId.IsSet() {
		return true
	}

	return false
}

// SetRemovePaymentRouteId gets a reference to the given NullableBool and assigns it to the RemovePaymentRouteId field.
func (o *UpdateSubscriptionRequest) SetRemovePaymentRouteId(v bool) {
	o.RemovePaymentRouteId.Set(&v)
}
// SetRemovePaymentRouteIdNil sets the value for RemovePaymentRouteId to be an explicit nil
func (o *UpdateSubscriptionRequest) SetRemovePaymentRouteIdNil() {
	o.RemovePaymentRouteId.Set(nil)
}

// UnsetRemovePaymentRouteId ensures that no value is present for RemovePaymentRouteId, not even an explicit nil
func (o *UpdateSubscriptionRequest) UnsetRemovePaymentRouteId() {
	o.RemovePaymentRouteId.Unset()
}

// GetTrialEnd returns the TrialEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionRequest) GetTrialEnd() time.Time {
	if o == nil || IsNil(o.TrialEnd.Get()) {
		var ret time.Time
		return ret
	}
	return *o.TrialEnd.Get()
}

// GetTrialEndOk returns a tuple with the TrialEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionRequest) GetTrialEndOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialEnd.Get(), o.TrialEnd.IsSet()
}

// HasTrialEnd returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasTrialEnd() bool {
	if o != nil && o.TrialEnd.IsSet() {
		return true
	}

	return false
}

// SetTrialEnd gets a reference to the given NullableTime and assigns it to the TrialEnd field.
func (o *UpdateSubscriptionRequest) SetTrialEnd(v time.Time) {
	o.TrialEnd.Set(&v)
}
// SetTrialEndNil sets the value for TrialEnd to be an explicit nil
func (o *UpdateSubscriptionRequest) SetTrialEndNil() {
	o.TrialEnd.Set(nil)
}

// UnsetTrialEnd ensures that no value is present for TrialEnd, not even an explicit nil
func (o *UpdateSubscriptionRequest) UnsetTrialEnd() {
	o.TrialEnd.Unset()
}

// GetTrialPeriodDays returns the TrialPeriodDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateSubscriptionRequest) GetTrialPeriodDays() int32 {
	if o == nil || IsNil(o.TrialPeriodDays.Get()) {
		var ret int32
		return ret
	}
	return *o.TrialPeriodDays.Get()
}

// GetTrialPeriodDaysOk returns a tuple with the TrialPeriodDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateSubscriptionRequest) GetTrialPeriodDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialPeriodDays.Get(), o.TrialPeriodDays.IsSet()
}

// HasTrialPeriodDays returns a boolean if a field has been set.
func (o *UpdateSubscriptionRequest) HasTrialPeriodDays() bool {
	if o != nil && o.TrialPeriodDays.IsSet() {
		return true
	}

	return false
}

// SetTrialPeriodDays gets a reference to the given NullableInt32 and assigns it to the TrialPeriodDays field.
func (o *UpdateSubscriptionRequest) SetTrialPeriodDays(v int32) {
	o.TrialPeriodDays.Set(&v)
}
// SetTrialPeriodDaysNil sets the value for TrialPeriodDays to be an explicit nil
func (o *UpdateSubscriptionRequest) SetTrialPeriodDaysNil() {
	o.TrialPeriodDays.Set(nil)
}

// UnsetTrialPeriodDays ensures that no value is present for TrialPeriodDays, not even an explicit nil
func (o *UpdateSubscriptionRequest) UnsetTrialPeriodDays() {
	o.TrialPeriodDays.Unset()
}

func (o UpdateSubscriptionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSubscriptionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CancelAtEnd.IsSet() {
		toSerialize["cancel_at_end"] = o.CancelAtEnd.Get()
	}
	if o.CollectionMethod.IsSet() {
		toSerialize["collection_method"] = o.CollectionMethod.Get()
	}
	if o.CouponId.IsSet() {
		toSerialize["coupon_id"] = o.CouponId.Get()
	}
	if o.CustomFields != nil {
		toSerialize["custom_fields"] = o.CustomFields
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.IsPreview) {
		toSerialize["is_preview"] = o.IsPreview
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if o.NetD.IsSet() {
		toSerialize["net_d"] = o.NetD.Get()
	}
	if o.NewPeriodEnd.IsSet() {
		toSerialize["new_period_end"] = o.NewPeriodEnd.Get()
	}
	if o.PaymentMethodId.IsSet() {
		toSerialize["payment_method_id"] = o.PaymentMethodId.Get()
	}
	if o.PaymentRouteId.IsSet() {
		toSerialize["payment_route_id"] = o.PaymentRouteId.Get()
	}
	if !IsNil(o.PreviewRenewalInvoices) {
		toSerialize["preview_renewal_invoices"] = o.PreviewRenewalInvoices
	}
	if o.PromotionCode.IsSet() {
		toSerialize["promotion_code"] = o.PromotionCode.Get()
	}
	if !IsNil(o.ProrationBehavior) {
		toSerialize["proration_behavior"] = o.ProrationBehavior
	}
	if o.RemovePaymentRouteId.IsSet() {
		toSerialize["remove_payment_route_id"] = o.RemovePaymentRouteId.Get()
	}
	if o.TrialEnd.IsSet() {
		toSerialize["trial_end"] = o.TrialEnd.Get()
	}
	if o.TrialPeriodDays.IsSet() {
		toSerialize["trial_period_days"] = o.TrialPeriodDays.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateSubscriptionRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateSubscriptionRequest := _UpdateSubscriptionRequest{}

	err = json.Unmarshal(data, &varUpdateSubscriptionRequest)

	if err != nil {
		return err
	}

	*o = UpdateSubscriptionRequest(varUpdateSubscriptionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cancel_at_end")
		delete(additionalProperties, "collection_method")
		delete(additionalProperties, "coupon_id")
		delete(additionalProperties, "custom_fields")
		delete(additionalProperties, "description")
		delete(additionalProperties, "is_preview")
		delete(additionalProperties, "items")
		delete(additionalProperties, "net_d")
		delete(additionalProperties, "new_period_end")
		delete(additionalProperties, "payment_method_id")
		delete(additionalProperties, "payment_route_id")
		delete(additionalProperties, "preview_renewal_invoices")
		delete(additionalProperties, "promotion_code")
		delete(additionalProperties, "proration_behavior")
		delete(additionalProperties, "remove_payment_route_id")
		delete(additionalProperties, "trial_end")
		delete(additionalProperties, "trial_period_days")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateSubscriptionRequest struct {
	value *UpdateSubscriptionRequest
	isSet bool
}

func (v NullableUpdateSubscriptionRequest) Get() *UpdateSubscriptionRequest {
	return v.value
}

func (v *NullableUpdateSubscriptionRequest) Set(val *UpdateSubscriptionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSubscriptionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSubscriptionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSubscriptionRequest(val *UpdateSubscriptionRequest) *NullableUpdateSubscriptionRequest {
	return &NullableUpdateSubscriptionRequest{value: val, isSet: true}
}

func (v NullableUpdateSubscriptionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSubscriptionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


