/*
OpenPay API

super charge your subscription management.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getopenpay

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the WebhookDeliveryResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookDeliveryResult{}

// WebhookDeliveryResult struct for WebhookDeliveryResult
type WebhookDeliveryResult struct {
	// Webhook delivery attempt time in 'ISO 8601' format.
	AttemptTime time.Time `json:"attempt_time"`
	// Unique id for the event which was sent to the webhook url.
	EventId string `json:"event_id"`
	// HTTP response code received upon attempted delivery to webhook endpoint
	ResponseCode int32 `json:"response_code"`
	ResponseText NullableString `json:"response_text,omitempty"`
	// Unique id for the webhook url to which the event was sent.
	WebhookId string `json:"webhook_id"`
	AdditionalProperties map[string]interface{}
}

type _WebhookDeliveryResult WebhookDeliveryResult

// NewWebhookDeliveryResult instantiates a new WebhookDeliveryResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookDeliveryResult(attemptTime time.Time, eventId string, responseCode int32, webhookId string) *WebhookDeliveryResult {
	this := WebhookDeliveryResult{}
	this.AttemptTime = attemptTime
	this.EventId = eventId
	this.ResponseCode = responseCode
	this.WebhookId = webhookId
	return &this
}

// NewWebhookDeliveryResultWithDefaults instantiates a new WebhookDeliveryResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookDeliveryResultWithDefaults() *WebhookDeliveryResult {
	this := WebhookDeliveryResult{}
	return &this
}

// GetAttemptTime returns the AttemptTime field value
func (o *WebhookDeliveryResult) GetAttemptTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.AttemptTime
}

// GetAttemptTimeOk returns a tuple with the AttemptTime field value
// and a boolean to check if the value has been set.
func (o *WebhookDeliveryResult) GetAttemptTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttemptTime, true
}

// SetAttemptTime sets field value
func (o *WebhookDeliveryResult) SetAttemptTime(v time.Time) {
	o.AttemptTime = v
}

// GetEventId returns the EventId field value
func (o *WebhookDeliveryResult) GetEventId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value
// and a boolean to check if the value has been set.
func (o *WebhookDeliveryResult) GetEventIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventId, true
}

// SetEventId sets field value
func (o *WebhookDeliveryResult) SetEventId(v string) {
	o.EventId = v
}

// GetResponseCode returns the ResponseCode field value
func (o *WebhookDeliveryResult) GetResponseCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ResponseCode
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value
// and a boolean to check if the value has been set.
func (o *WebhookDeliveryResult) GetResponseCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseCode, true
}

// SetResponseCode sets field value
func (o *WebhookDeliveryResult) SetResponseCode(v int32) {
	o.ResponseCode = v
}

// GetResponseText returns the ResponseText field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebhookDeliveryResult) GetResponseText() string {
	if o == nil || IsNil(o.ResponseText.Get()) {
		var ret string
		return ret
	}
	return *o.ResponseText.Get()
}

// GetResponseTextOk returns a tuple with the ResponseText field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookDeliveryResult) GetResponseTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResponseText.Get(), o.ResponseText.IsSet()
}

// HasResponseText returns a boolean if a field has been set.
func (o *WebhookDeliveryResult) HasResponseText() bool {
	if o != nil && o.ResponseText.IsSet() {
		return true
	}

	return false
}

// SetResponseText gets a reference to the given NullableString and assigns it to the ResponseText field.
func (o *WebhookDeliveryResult) SetResponseText(v string) {
	o.ResponseText.Set(&v)
}
// SetResponseTextNil sets the value for ResponseText to be an explicit nil
func (o *WebhookDeliveryResult) SetResponseTextNil() {
	o.ResponseText.Set(nil)
}

// UnsetResponseText ensures that no value is present for ResponseText, not even an explicit nil
func (o *WebhookDeliveryResult) UnsetResponseText() {
	o.ResponseText.Unset()
}

// GetWebhookId returns the WebhookId field value
func (o *WebhookDeliveryResult) GetWebhookId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookId
}

// GetWebhookIdOk returns a tuple with the WebhookId field value
// and a boolean to check if the value has been set.
func (o *WebhookDeliveryResult) GetWebhookIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebhookId, true
}

// SetWebhookId sets field value
func (o *WebhookDeliveryResult) SetWebhookId(v string) {
	o.WebhookId = v
}

func (o WebhookDeliveryResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookDeliveryResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attempt_time"] = o.AttemptTime
	toSerialize["event_id"] = o.EventId
	toSerialize["response_code"] = o.ResponseCode
	if o.ResponseText.IsSet() {
		toSerialize["response_text"] = o.ResponseText.Get()
	}
	toSerialize["webhook_id"] = o.WebhookId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WebhookDeliveryResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attempt_time",
		"event_id",
		"response_code",
		"webhook_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookDeliveryResult := _WebhookDeliveryResult{}

	err = json.Unmarshal(data, &varWebhookDeliveryResult)

	if err != nil {
		return err
	}

	*o = WebhookDeliveryResult(varWebhookDeliveryResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "attempt_time")
		delete(additionalProperties, "event_id")
		delete(additionalProperties, "response_code")
		delete(additionalProperties, "response_text")
		delete(additionalProperties, "webhook_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWebhookDeliveryResult struct {
	value *WebhookDeliveryResult
	isSet bool
}

func (v NullableWebhookDeliveryResult) Get() *WebhookDeliveryResult {
	return v.value
}

func (v *NullableWebhookDeliveryResult) Set(val *WebhookDeliveryResult) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookDeliveryResult) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookDeliveryResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookDeliveryResult(val *WebhookDeliveryResult) *NullableWebhookDeliveryResult {
	return &NullableWebhookDeliveryResult{value: val, isSet: true}
}

func (v NullableWebhookDeliveryResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookDeliveryResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


