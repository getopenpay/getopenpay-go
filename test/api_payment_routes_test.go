/*
OpenPay API

Testing PaymentRoutesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package getopenpay

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/getopenpay/getopenpay-go"
)

func Test_getopenpay_PaymentRoutesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test PaymentRoutesAPIService CreatePaymentRoute", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PaymentRoutesAPI.CreatePaymentRoute(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PaymentRoutesAPIService DeletePaymentRoute", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var paymentRouteId string

		resp, httpRes, err := apiClient.PaymentRoutesAPI.DeletePaymentRoute(context.Background(), paymentRouteId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PaymentRoutesAPIService GetPaymentRoute", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var paymentRouteId string

		resp, httpRes, err := apiClient.PaymentRoutesAPI.GetPaymentRoute(context.Background(), paymentRouteId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PaymentRoutesAPIService ListPaymentRoutes", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.PaymentRoutesAPI.ListPaymentRoutes(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
